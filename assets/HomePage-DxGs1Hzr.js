import{r as Zm,g as dx,R as Am,a as dt,j as Pt,c as VE,d as Be,u as GE,L as dp}from"./index-zoMDpwy1.js";import{F as kE,a as WE,b as XE,c as t_,S as e_,m as Qs,d as qE,e as YE,f as jE,g as Km}from"./index-D-_6vBeq.js";import{A as ZE}from"./index-YThB1H5n.js";/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Wo="178",Bi={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Vs={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},px=0,wm=1,mx=2,KE=3,gx=0,cf=1,Vl=2,Qi=3,js=0,ni=1,ts=2,qs=0,Ta=1,ph=2,Cm=3,Rm=4,vx=5,Ma=100,_x=101,yx=102,xx=103,Sx=104,Mx=200,bx=201,Ex=202,Tx=203,mh=204,gh=205,Ax=206,wx=207,Cx=208,Rx=209,Dx=210,Ux=211,Px=212,Nx=213,Lx=214,vh=0,_h=1,yh=2,br=3,xh=4,Sh=5,Mh=6,bh=7,gc=0,Ix=1,Ox=2,vs=0,zx=1,Bx=2,Fx=3,Jm=4,Hx=5,Vx=6,Gx=7,Dm="attached",kx="detached",uf=300,Zs=301,Aa=302,Ql=303,$l=304,Xo=306,tc=1e3,Fi=1001,ec=1002,Ln=1003,Qm=1004,JE=1004,Ao=1005,QE=1005,vn=1006,Gl=1007,$E=1007,ms=1008,t1=1008,Vi=1009,$m=1010,tg=1011,Lo=1012,hf=1013,Ks=1014,ui=1015,qo=1016,ff=1017,df=1018,Io=1020,eg=35902,ng=1021,ig=1022,Xn=1023,Oo=1026,zo=1027,pf=1028,vc=1029,sg=1030,mf=1031,e1=1032,gf=1033,kl=33776,Wl=33777,Xl=33778,ql=33779,Eh=35840,Th=35841,Ah=35842,wh=35843,Ch=36196,Rh=37492,Dh=37496,Uh=37808,Ph=37809,Nh=37810,Lh=37811,Ih=37812,Oh=37813,zh=37814,Bh=37815,Fh=37816,Hh=37817,Vh=37818,Gh=37819,kh=37820,Wh=37821,Yl=36492,Xh=36494,qh=36495,ag=36283,Yh=36284,jh=36285,Zh=36286,Wx=2200,Xx=2201,qx=2202,nc=2300,Kh=2301,ch=2302,gr=2400,vr=2401,ic=2402,vf=2500,rg=2501,n1=0,i1=1,s1=2,Yx=3200,jx=3201,a1=3202,r1=3203,Da=0,Zx=1,Ws="",Wn="srgb",wa="srgb-linear",sc="linear",ke="srgb",o1=0,dr=7680,l1=7681,c1=7682,u1=7683,h1=34055,f1=34056,d1=5386,p1=512,m1=513,g1=514,v1=515,_1=516,y1=517,x1=518,Um=519,Kx=512,Jx=513,Qx=514,og=515,$x=516,tS=517,eS=518,nS=519,ac=35044,S1=35048,M1=35040,b1=35045,E1=35049,T1=35041,A1=35046,w1=35050,C1=35042,R1="100",Pm="300 es",Hi=2e3,rc=2001,D1={COMPUTE:"compute",RENDER:"render"},U1={PERSPECTIVE:"perspective",LINEAR:"linear",FLAT:"flat"},P1={NORMAL:"normal",CENTROID:"centroid",SAMPLE:"sample",FIRST:"first",EITHER:"either"};let Ss=class{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)}hasEventListener(t,e){const n=this._listeners;return n===void 0?!1:n[t]!==void 0&&n[t].indexOf(e)!==-1}removeEventListener(t,e){const n=this._listeners;if(n===void 0)return;const i=n[t];if(i!==void 0){const r=i.indexOf(e);r!==-1&&i.splice(r,1)}}dispatchEvent(t){const e=this._listeners;if(e===void 0)return;const n=e[t.type];if(n!==void 0){t.target=this;const i=n.slice(0);for(let r=0,l=i.length;r<l;r++)i[r].call(this,t);t.target=null}}};const Vn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let n_=1234567;const xr=Math.PI/180,Bo=180/Math.PI;function Ti(){const s=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Vn[s&255]+Vn[s>>8&255]+Vn[s>>16&255]+Vn[s>>24&255]+"-"+Vn[t&255]+Vn[t>>8&255]+"-"+Vn[t>>16&15|64]+Vn[t>>24&255]+"-"+Vn[e&63|128]+Vn[e>>8&255]+"-"+Vn[e>>16&255]+Vn[e>>24&255]+Vn[n&255]+Vn[n>>8&255]+Vn[n>>16&255]+Vn[n>>24&255]).toLowerCase()}function ve(s,t,e){return Math.max(t,Math.min(e,s))}function lg(s,t){return(s%t+t)%t}function N1(s,t,e,n,i){return n+(s-t)*(i-n)/(e-t)}function L1(s,t,e){return s!==t?(e-s)/(t-s):0}function jl(s,t,e){return(1-e)*s+e*t}function I1(s,t,e,n){return jl(s,t,1-Math.exp(-e*n))}function O1(s,t=1){return t-Math.abs(lg(s,t*2)-t)}function z1(s,t,e){return s<=t?0:s>=e?1:(s=(s-t)/(e-t),s*s*(3-2*s))}function B1(s,t,e){return s<=t?0:s>=e?1:(s=(s-t)/(e-t),s*s*s*(s*(s*6-15)+10))}function F1(s,t){return s+Math.floor(Math.random()*(t-s+1))}function H1(s,t){return s+Math.random()*(t-s)}function V1(s){return s*(.5-Math.random())}function G1(s){s!==void 0&&(n_=s);let t=n_+=1831565813;return t=Math.imul(t^t>>>15,t|1),t^=t+Math.imul(t^t>>>7,t|61),((t^t>>>14)>>>0)/4294967296}function k1(s){return s*xr}function W1(s){return s*Bo}function X1(s){return(s&s-1)===0&&s!==0}function q1(s){return Math.pow(2,Math.ceil(Math.log(s)/Math.LN2))}function Y1(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}function j1(s,t,e,n,i){const r=Math.cos,l=Math.sin,c=r(e/2),h=l(e/2),f=r((t+n)/2),p=l((t+n)/2),m=r((t-n)/2),g=l((t-n)/2),v=r((n-t)/2),x=l((n-t)/2);switch(i){case"XYX":s.set(c*p,h*m,h*g,c*f);break;case"YZY":s.set(h*g,c*p,h*m,c*f);break;case"ZXZ":s.set(h*m,h*g,c*p,c*f);break;case"XZX":s.set(c*p,h*x,h*v,c*f);break;case"YXY":s.set(h*v,c*p,h*x,c*f);break;case"ZYZ":s.set(h*x,h*v,c*p,c*f);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function ei(s,t){switch(t.constructor){case Float32Array:return s;case Uint32Array:return s/4294967295;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int32Array:return Math.max(s/2147483647,-1);case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}function xe(s,t){switch(t.constructor){case Float32Array:return s;case Uint32Array:return Math.round(s*4294967295);case Uint16Array:return Math.round(s*65535);case Uint8Array:return Math.round(s*255);case Int32Array:return Math.round(s*2147483647);case Int16Array:return Math.round(s*32767);case Int8Array:return Math.round(s*127);default:throw new Error("Invalid component type.")}}const iS={DEG2RAD:xr,RAD2DEG:Bo,generateUUID:Ti,clamp:ve,euclideanModulo:lg,mapLinear:N1,inverseLerp:L1,lerp:jl,damp:I1,pingpong:O1,smoothstep:z1,smootherstep:B1,randInt:F1,randFloat:H1,randFloatSpread:V1,seededRandom:G1,degToRad:k1,radToDeg:W1,isPowerOfTwo:X1,ceilPowerOfTwo:q1,floorPowerOfTwo:Y1,setQuaternionFromProperEuler:j1,normalize:xe,denormalize:ei};class ft{constructor(t=0,e=0){ft.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=ve(this.x,t.x,e.x),this.y=ve(this.y,t.y,e.y),this}clampScalar(t,e){return this.x=ve(this.x,t,e),this.y=ve(this.y,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(ve(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(ve(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),r=this.x-t.x,l=this.y-t.y;return this.x=r*n-l*i+t.x,this.y=r*i+l*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class qn{constructor(t=0,e=0,n=0,i=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=n,this._w=i}static slerpFlat(t,e,n,i,r,l,c){let h=n[i+0],f=n[i+1],p=n[i+2],m=n[i+3];const g=r[l+0],v=r[l+1],x=r[l+2],M=r[l+3];if(c===0){t[e+0]=h,t[e+1]=f,t[e+2]=p,t[e+3]=m;return}if(c===1){t[e+0]=g,t[e+1]=v,t[e+2]=x,t[e+3]=M;return}if(m!==M||h!==g||f!==v||p!==x){let S=1-c;const _=h*g+f*v+p*x+m*M,E=_>=0?1:-1,T=1-_*_;if(T>Number.EPSILON){const N=Math.sqrt(T),D=Math.atan2(N,_*E);S=Math.sin(S*D)/N,c=Math.sin(c*D)/N}const A=c*E;if(h=h*S+g*A,f=f*S+v*A,p=p*S+x*A,m=m*S+M*A,S===1-c){const N=1/Math.sqrt(h*h+f*f+p*p+m*m);h*=N,f*=N,p*=N,m*=N}}t[e]=h,t[e+1]=f,t[e+2]=p,t[e+3]=m}static multiplyQuaternionsFlat(t,e,n,i,r,l){const c=n[i],h=n[i+1],f=n[i+2],p=n[i+3],m=r[l],g=r[l+1],v=r[l+2],x=r[l+3];return t[e]=c*x+p*m+h*v-f*g,t[e+1]=h*x+p*g+f*m-c*v,t[e+2]=f*x+p*v+c*g-h*m,t[e+3]=p*x-c*m-h*g-f*v,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){const n=t._x,i=t._y,r=t._z,l=t._order,c=Math.cos,h=Math.sin,f=c(n/2),p=c(i/2),m=c(r/2),g=h(n/2),v=h(i/2),x=h(r/2);switch(l){case"XYZ":this._x=g*p*m+f*v*x,this._y=f*v*m-g*p*x,this._z=f*p*x+g*v*m,this._w=f*p*m-g*v*x;break;case"YXZ":this._x=g*p*m+f*v*x,this._y=f*v*m-g*p*x,this._z=f*p*x-g*v*m,this._w=f*p*m+g*v*x;break;case"ZXY":this._x=g*p*m-f*v*x,this._y=f*v*m+g*p*x,this._z=f*p*x+g*v*m,this._w=f*p*m-g*v*x;break;case"ZYX":this._x=g*p*m-f*v*x,this._y=f*v*m+g*p*x,this._z=f*p*x-g*v*m,this._w=f*p*m+g*v*x;break;case"YZX":this._x=g*p*m+f*v*x,this._y=f*v*m+g*p*x,this._z=f*p*x-g*v*m,this._w=f*p*m-g*v*x;break;case"XZY":this._x=g*p*m-f*v*x,this._y=f*v*m-g*p*x,this._z=f*p*x+g*v*m,this._w=f*p*m+g*v*x;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+l)}return e===!0&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],r=e[8],l=e[1],c=e[5],h=e[9],f=e[2],p=e[6],m=e[10],g=n+c+m;if(g>0){const v=.5/Math.sqrt(g+1);this._w=.25/v,this._x=(p-h)*v,this._y=(r-f)*v,this._z=(l-i)*v}else if(n>c&&n>m){const v=2*Math.sqrt(1+n-c-m);this._w=(p-h)/v,this._x=.25*v,this._y=(i+l)/v,this._z=(r+f)/v}else if(c>m){const v=2*Math.sqrt(1+c-n-m);this._w=(r-f)/v,this._x=(i+l)/v,this._y=.25*v,this._z=(h+p)/v}else{const v=2*Math.sqrt(1+m-n-c);this._w=(l-i)/v,this._x=(r+f)/v,this._y=(h+p)/v,this._z=.25*v}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<1e-8?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(ve(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(n===0)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,r=t._z,l=t._w,c=e._x,h=e._y,f=e._z,p=e._w;return this._x=n*p+l*c+i*f-r*h,this._y=i*p+l*h+r*c-n*f,this._z=r*p+l*f+n*h-i*c,this._w=l*p-n*c-i*h-r*f,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const n=this._x,i=this._y,r=this._z,l=this._w;let c=l*t._w+n*t._x+i*t._y+r*t._z;if(c<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,c=-c):this.copy(t),c>=1)return this._w=l,this._x=n,this._y=i,this._z=r,this;const h=1-c*c;if(h<=Number.EPSILON){const v=1-e;return this._w=v*l+e*this._w,this._x=v*n+e*this._x,this._y=v*i+e*this._y,this._z=v*r+e*this._z,this.normalize(),this}const f=Math.sqrt(h),p=Math.atan2(f,c),m=Math.sin((1-e)*p)/f,g=Math.sin(e*p)/f;return this._w=l*m+this._w*g,this._x=n*m+this._x*g,this._y=i*m+this._y*g,this._z=r*m+this._z*g,this._onChangeCallback(),this}slerpQuaternions(t,e,n){return this.copy(t).slerp(e,n)}random(){const t=2*Math.PI*Math.random(),e=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),r=Math.sqrt(n);return this.set(i*Math.sin(t),i*Math.cos(t),r*Math.sin(e),r*Math.cos(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class L{constructor(t=0,e=0,n=0){L.prototype.isVector3=!0,this.x=t,this.y=e,this.z=n}set(t,e,n){return n===void 0&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(i_.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(i_.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6]*i,this.y=r[1]*e+r[4]*n+r[7]*i,this.z=r[2]*e+r[5]*n+r[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=t.elements,l=1/(r[3]*e+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*e+r[4]*n+r[8]*i+r[12])*l,this.y=(r[1]*e+r[5]*n+r[9]*i+r[13])*l,this.z=(r[2]*e+r[6]*n+r[10]*i+r[14])*l,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,r=t.x,l=t.y,c=t.z,h=t.w,f=2*(l*i-c*n),p=2*(c*e-r*i),m=2*(r*n-l*e);return this.x=e+h*f+l*m-c*p,this.y=n+h*p+c*f-r*m,this.z=i+h*m+r*p-l*f,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[4]*n+r[8]*i,this.y=r[1]*e+r[5]*n+r[9]*i,this.z=r[2]*e+r[6]*n+r[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=ve(this.x,t.x,e.x),this.y=ve(this.y,t.y,e.y),this.z=ve(this.z,t.z,e.z),this}clampScalar(t,e){return this.x=ve(this.x,t,e),this.y=ve(this.y,t,e),this.z=ve(this.z,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(ve(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,r=t.z,l=e.x,c=e.y,h=e.z;return this.x=i*h-r*c,this.y=r*l-n*h,this.z=n*c-i*l,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return pp.copy(this).projectOnVector(t),this.sub(pp)}reflect(t){return this.sub(pp.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(ve(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,e=Math.random()*2-1,n=Math.sqrt(1-e*e);return this.x=n*Math.cos(t),this.y=e,this.z=n*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const pp=new L,i_=new qn;class _e{constructor(t,e,n,i,r,l,c,h,f){_e.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],t!==void 0&&this.set(t,e,n,i,r,l,c,h,f)}set(t,e,n,i,r,l,c,h,f){const p=this.elements;return p[0]=t,p[1]=i,p[2]=c,p[3]=e,p[4]=r,p[5]=h,p[6]=n,p[7]=l,p[8]=f,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,l=n[0],c=n[3],h=n[6],f=n[1],p=n[4],m=n[7],g=n[2],v=n[5],x=n[8],M=i[0],S=i[3],_=i[6],E=i[1],T=i[4],A=i[7],N=i[2],D=i[5],I=i[8];return r[0]=l*M+c*E+h*N,r[3]=l*S+c*T+h*D,r[6]=l*_+c*A+h*I,r[1]=f*M+p*E+m*N,r[4]=f*S+p*T+m*D,r[7]=f*_+p*A+m*I,r[2]=g*M+v*E+x*N,r[5]=g*S+v*T+x*D,r[8]=g*_+v*A+x*I,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],l=t[4],c=t[5],h=t[6],f=t[7],p=t[8];return e*l*p-e*c*f-n*r*p+n*c*h+i*r*f-i*l*h}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],l=t[4],c=t[5],h=t[6],f=t[7],p=t[8],m=p*l-c*f,g=c*h-p*r,v=f*r-l*h,x=e*m+n*g+i*v;if(x===0)return this.set(0,0,0,0,0,0,0,0,0);const M=1/x;return t[0]=m*M,t[1]=(i*f-p*n)*M,t[2]=(c*n-i*l)*M,t[3]=g*M,t[4]=(p*e-i*h)*M,t[5]=(i*r-c*e)*M,t[6]=v*M,t[7]=(n*h-f*e)*M,t[8]=(l*e-n*r)*M,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,r,l,c){const h=Math.cos(r),f=Math.sin(r);return this.set(n*h,n*f,-n*(h*l+f*c)+l+t,-i*f,i*h,-i*(-f*l+h*c)+c+e,0,0,1),this}scale(t,e){return this.premultiply(mp.makeScale(t,e)),this}rotate(t){return this.premultiply(mp.makeRotation(-t)),this}translate(t,e){return this.premultiply(mp.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,n,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<9;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const mp=new _e;function sS(s){for(let t=s.length-1;t>=0;--t)if(s[t]>=65535)return!0;return!1}const Z1={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function wo(s,t){return new Z1[s](t)}function oc(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}function aS(){const s=oc("canvas");return s.style.display="block",s}const s_={};function Uo(s){s in s_||(s_[s]=!0,console.warn(s))}function K1(s,t,e){return new Promise(function(n,i){function r(){switch(s.clientWaitSync(t,s.SYNC_FLUSH_COMMANDS_BIT,0)){case s.WAIT_FAILED:i();break;case s.TIMEOUT_EXPIRED:setTimeout(r,e);break;default:n()}}setTimeout(r,e)})}function J1(s){const t=s.elements;t[2]=.5*t[2]+.5*t[3],t[6]=.5*t[6]+.5*t[7],t[10]=.5*t[10]+.5*t[11],t[14]=.5*t[14]+.5*t[15]}function Q1(s){const t=s.elements;t[11]===-1?(t[10]=-t[10]-1,t[14]=-t[14]):(t[10]=-t[10],t[14]=-t[14]+1)}const a_=new _e().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),r_=new _e().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function $1(){const s={enabled:!0,workingColorSpace:wa,spaces:{},convert:function(i,r,l){return this.enabled===!1||r===l||!r||!l||(this.spaces[r].transfer===ke&&(i.r=Ys(i.r),i.g=Ys(i.g),i.b=Ys(i.b)),this.spaces[r].primaries!==this.spaces[l].primaries&&(i.applyMatrix3(this.spaces[r].toXYZ),i.applyMatrix3(this.spaces[l].fromXYZ)),this.spaces[l].transfer===ke&&(i.r=Po(i.r),i.g=Po(i.g),i.b=Po(i.b))),i},workingToColorSpace:function(i,r){return this.convert(i,this.workingColorSpace,r)},colorSpaceToWorking:function(i,r){return this.convert(i,r,this.workingColorSpace)},getPrimaries:function(i){return this.spaces[i].primaries},getTransfer:function(i){return i===Ws?sc:this.spaces[i].transfer},getLuminanceCoefficients:function(i,r=this.workingColorSpace){return i.fromArray(this.spaces[r].luminanceCoefficients)},define:function(i){Object.assign(this.spaces,i)},_getMatrix:function(i,r,l){return i.copy(this.spaces[r].toXYZ).multiply(this.spaces[l].fromXYZ)},_getDrawingBufferColorSpace:function(i){return this.spaces[i].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(i=this.workingColorSpace){return this.spaces[i].workingColorSpaceConfig.unpackColorSpace},fromWorkingColorSpace:function(i,r){return Uo("THREE.ColorManagement: .fromWorkingColorSpace() has been renamed to .workingToColorSpace()."),s.workingToColorSpace(i,r)},toWorkingColorSpace:function(i,r){return Uo("THREE.ColorManagement: .toWorkingColorSpace() has been renamed to .colorSpaceToWorking()."),s.colorSpaceToWorking(i,r)}},t=[.64,.33,.3,.6,.15,.06],e=[.2126,.7152,.0722],n=[.3127,.329];return s.define({[wa]:{primaries:t,whitePoint:n,transfer:sc,toXYZ:a_,fromXYZ:r_,luminanceCoefficients:e,workingColorSpaceConfig:{unpackColorSpace:Wn},outputColorSpaceConfig:{drawingBufferColorSpace:Wn}},[Wn]:{primaries:t,whitePoint:n,transfer:ke,toXYZ:a_,fromXYZ:r_,luminanceCoefficients:e,outputColorSpaceConfig:{drawingBufferColorSpace:Wn}}}),s}const Ue=$1();function Ys(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function Po(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}let io;class rS{static getDataURL(t,e="image/png"){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let n;if(t instanceof HTMLCanvasElement)n=t;else{io===void 0&&(io=oc("canvas")),io.width=t.width,io.height=t.height;const i=io.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height),n=io}return n.toDataURL(e)}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=oc("canvas");e.width=t.width,e.height=t.height;const n=e.getContext("2d");n.drawImage(t,0,0,t.width,t.height);const i=n.getImageData(0,0,t.width,t.height),r=i.data;for(let l=0;l<r.length;l++)r[l]=Ys(r[l]/255)*255;return n.putImageData(i,0,0),e}else if(t.data){const e=t.data.slice(0);for(let n=0;n<e.length;n++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[n]=Math.floor(Ys(e[n]/255)*255):e[n]=Ys(e[n]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let tT=0;class Ea{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:tT++}),this.uuid=Ti(),this.data=t,this.dataReady=!0,this.version=0}getSize(t){const e=this.data;return e instanceof HTMLVideoElement?t.set(e.videoWidth,e.videoHeight):e!==null?t.set(e.width,e.height,e.depth||0):t.set(0,0,0),t}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let r;if(Array.isArray(i)){r=[];for(let l=0,c=i.length;l<c;l++)i[l].isDataTexture?r.push(gp(i[l].image)):r.push(gp(i[l]))}else r=gp(i);n.url=r}return e||(t.images[this.uuid]=n),n}}function gp(s){return typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap?rS.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let eT=0;const vp=new L;class en extends Ss{constructor(t=en.DEFAULT_IMAGE,e=en.DEFAULT_MAPPING,n=Fi,i=Fi,r=vn,l=ms,c=Xn,h=Vi,f=en.DEFAULT_ANISOTROPY,p=Ws){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:eT++}),this.uuid=Ti(),this.name="",this.source=new Ea(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=l,this.anisotropy=f,this.format=c,this.internalFormat=null,this.type=h,this.offset=new ft(0,0),this.repeat=new ft(1,1),this.center=new ft(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new _e,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=p,this.userData={},this.updateRanges=[],this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isArrayTexture=!!(t&&t.depth&&t.depth>1),this.pmremVersion=0}get width(){return this.source.getSize(vp).x}get height(){return this.source.getSize(vp).y}get depth(){return this.source.getSize(vp).z}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.renderTarget=t.renderTarget,this.isRenderTargetTexture=t.isRenderTargetTexture,this.isArrayTexture=t.isArrayTexture,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}setValues(t){for(const e in t){const n=t[e];if(n===void 0){console.warn(`THREE.Texture.setValues(): parameter '${e}' has value of undefined.`);continue}const i=this[e];if(i===void 0){console.warn(`THREE.Texture.setValues(): property '${e}' does not exist.`);continue}i&&n&&i.isVector2&&n.isVector2||i&&n&&i.isVector3&&n.isVector3||i&&n&&i.isMatrix3&&n.isMatrix3?i.copy(n):this[e]=n}}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const n={metadata:{version:4.7,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==uf)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case tc:t.x=t.x-Math.floor(t.x);break;case Fi:t.x=t.x<0?0:1;break;case ec:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case tc:t.y=t.y-Math.floor(t.y);break;case Fi:t.y=t.y<0?0:1;break;case ec:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){t===!0&&this.pmremVersion++}}en.DEFAULT_IMAGE=null;en.DEFAULT_MAPPING=uf;en.DEFAULT_ANISOTROPY=1;class Ae{constructor(t=0,e=0,n=0,i=1){Ae.prototype.isVector4=!0,this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=this.w,l=t.elements;return this.x=l[0]*e+l[4]*n+l[8]*i+l[12]*r,this.y=l[1]*e+l[5]*n+l[9]*i+l[13]*r,this.z=l[2]*e+l[6]*n+l[10]*i+l[14]*r,this.w=l[3]*e+l[7]*n+l[11]*i+l[15]*r,this}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this.w/=t.w,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,r;const h=t.elements,f=h[0],p=h[4],m=h[8],g=h[1],v=h[5],x=h[9],M=h[2],S=h[6],_=h[10];if(Math.abs(p-g)<.01&&Math.abs(m-M)<.01&&Math.abs(x-S)<.01){if(Math.abs(p+g)<.1&&Math.abs(m+M)<.1&&Math.abs(x+S)<.1&&Math.abs(f+v+_-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const T=(f+1)/2,A=(v+1)/2,N=(_+1)/2,D=(p+g)/4,I=(m+M)/4,z=(x+S)/4;return T>A&&T>N?T<.01?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(T),i=D/n,r=I/n):A>N?A<.01?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(A),n=D/i,r=z/i):N<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(N),n=I/r,i=z/r),this.set(n,i,r,e),this}let E=Math.sqrt((S-x)*(S-x)+(m-M)*(m-M)+(g-p)*(g-p));return Math.abs(E)<.001&&(E=1),this.x=(S-x)/E,this.y=(m-M)/E,this.z=(g-p)/E,this.w=Math.acos((f+v+_-1)/2),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this.w=e[15],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=ve(this.x,t.x,e.x),this.y=ve(this.y,t.y,e.y),this.z=ve(this.z,t.z,e.z),this.w=ve(this.w,t.w,e.w),this}clampScalar(t,e){return this.x=ve(this.x,t,e),this.y=ve(this.y,t,e),this.z=ve(this.z,t,e),this.w=ve(this.w,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(ve(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class cg extends Ss{constructor(t=1,e=1,n={}){super(),n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:vn,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,depth:1,multiview:!1},n),this.isRenderTarget=!0,this.width=t,this.height=e,this.depth=n.depth,this.scissor=new Ae(0,0,t,e),this.scissorTest=!1,this.viewport=new Ae(0,0,t,e);const i={width:t,height:e,depth:n.depth},r=new en(i);this.textures=[];const l=n.count;for(let c=0;c<l;c++)this.textures[c]=r.clone(),this.textures[c].isRenderTargetTexture=!0,this.textures[c].renderTarget=this;this._setTextureOptions(n),this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=n.depthTexture,this.samples=n.samples,this.multiview=n.multiview}_setTextureOptions(t={}){const e={minFilter:vn,generateMipmaps:!1,flipY:!1,internalFormat:null};t.mapping!==void 0&&(e.mapping=t.mapping),t.wrapS!==void 0&&(e.wrapS=t.wrapS),t.wrapT!==void 0&&(e.wrapT=t.wrapT),t.wrapR!==void 0&&(e.wrapR=t.wrapR),t.magFilter!==void 0&&(e.magFilter=t.magFilter),t.minFilter!==void 0&&(e.minFilter=t.minFilter),t.format!==void 0&&(e.format=t.format),t.type!==void 0&&(e.type=t.type),t.anisotropy!==void 0&&(e.anisotropy=t.anisotropy),t.colorSpace!==void 0&&(e.colorSpace=t.colorSpace),t.flipY!==void 0&&(e.flipY=t.flipY),t.generateMipmaps!==void 0&&(e.generateMipmaps=t.generateMipmaps),t.internalFormat!==void 0&&(e.internalFormat=t.internalFormat);for(let n=0;n<this.textures.length;n++)this.textures[n].setValues(e)}get texture(){return this.textures[0]}set texture(t){this.textures[0]=t}set depthTexture(t){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),t!==null&&(t.renderTarget=this),this._depthTexture=t}get depthTexture(){return this._depthTexture}setSize(t,e,n=1){if(this.width!==t||this.height!==e||this.depth!==n){this.width=t,this.height=e,this.depth=n;for(let i=0,r=this.textures.length;i<r;i++)this.textures[i].image.width=t,this.textures[i].image.height=e,this.textures[i].image.depth=n,this.textures[i].isArrayTexture=this.textures[i].image.depth>1;this.dispose()}this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return new this.constructor().copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.scissor.copy(t.scissor),this.scissorTest=t.scissorTest,this.viewport.copy(t.viewport),this.textures.length=0;for(let e=0,n=t.textures.length;e<n;e++){this.textures[e]=t.textures[e].clone(),this.textures[e].isRenderTargetTexture=!0,this.textures[e].renderTarget=this;const i=Object.assign({},t.textures[e].image);this.textures[e].source=new Ea(i)}return this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.resolveDepthBuffer=t.resolveDepthBuffer,this.resolveStencilBuffer=t.resolveStencilBuffer,t.depthTexture!==null&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class xs extends cg{constructor(t=1,e=1,n={}){super(t,e,n),this.isWebGLRenderTarget=!0}}class _f extends en{constructor(t=null,e=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=Ln,this.minFilter=Ln,this.wrapR=Fi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class nT extends xs{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new _f(null,t,e,n),this._setTextureOptions(i),this.texture.isRenderTargetTexture=!0}}class yf extends en{constructor(t=null,e=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=Ln,this.minFilter=Ln,this.wrapR=Fi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class iT extends xs{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new yf(null,t,e,n),this._setTextureOptions(i),this.texture.isRenderTargetTexture=!0}}class _n{constructor(t=new L(1/0,1/0,1/0),e=new L(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e+=3)this.expandByPoint(Zi.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,n=t.count;e<n;e++)this.expandByPoint(Zi.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Zi.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const n=t.geometry;if(n!==void 0){const r=n.getAttribute("position");if(e===!0&&r!==void 0&&t.isInstancedMesh!==!0)for(let l=0,c=r.count;l<c;l++)t.isMesh===!0?t.getVertexPosition(l,Zi):Zi.fromBufferAttribute(r,l),Zi.applyMatrix4(t.matrixWorld),this.expandByPoint(Zi);else t.boundingBox!==void 0?(t.boundingBox===null&&t.computeBoundingBox(),fu.copy(t.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),fu.copy(n.boundingBox)),fu.applyMatrix4(t.matrixWorld),this.union(fu)}const i=t.children;for(let r=0,l=i.length;r<l;r++)this.expandByObject(i[r],e);return this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y&&t.z>=this.min.z&&t.z<=this.max.z}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y&&t.max.z>=this.min.z&&t.min.z<=this.max.z}intersectsSphere(t){return this.clampPoint(t.center,Zi),Zi.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(Tl),du.subVectors(this.max,Tl),so.subVectors(t.a,Tl),ao.subVectors(t.b,Tl),ro.subVectors(t.c,Tl),ma.subVectors(ao,so),ga.subVectors(ro,ao),$a.subVectors(so,ro);let e=[0,-ma.z,ma.y,0,-ga.z,ga.y,0,-$a.z,$a.y,ma.z,0,-ma.x,ga.z,0,-ga.x,$a.z,0,-$a.x,-ma.y,ma.x,0,-ga.y,ga.x,0,-$a.y,$a.x,0];return!_p(e,so,ao,ro,du)||(e=[1,0,0,0,1,0,0,0,1],!_p(e,so,ao,ro,du))?!1:(pu.crossVectors(ma,ga),e=[pu.x,pu.y,pu.z],_p(e,so,ao,ro,du))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,Zi).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=this.getSize(Zi).length()*.5),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(Ls[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Ls[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Ls[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Ls[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Ls[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Ls[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Ls[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Ls[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Ls),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}toJSON(){return{min:this.min.toArray(),max:this.max.toArray()}}fromJSON(t){return this.min.fromArray(t.min),this.max.fromArray(t.max),this}}const Ls=[new L,new L,new L,new L,new L,new L,new L,new L],Zi=new L,fu=new _n,so=new L,ao=new L,ro=new L,ma=new L,ga=new L,$a=new L,Tl=new L,du=new L,pu=new L,tr=new L;function _p(s,t,e,n,i){for(let r=0,l=s.length-3;r<=l;r+=3){tr.fromArray(s,r);const c=i.x*Math.abs(tr.x)+i.y*Math.abs(tr.y)+i.z*Math.abs(tr.z),h=t.dot(tr),f=e.dot(tr),p=n.dot(tr);if(Math.max(-Math.max(h,f,p),Math.min(h,f,p))>c)return!1}return!0}const sT=new _n,Al=new L,yp=new L;let yn=class{constructor(t=new L,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;e!==void 0?n.copy(e):sT.setFromPoints(t).getCenter(n);let i=0;for(let r=0,l=t.length;r<l;r++)i=Math.max(i,n.distanceToSquared(t[r]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;Al.subVectors(t,this.center);const e=Al.lengthSq();if(e>this.radius*this.radius){const n=Math.sqrt(e),i=(n-this.radius)*.5;this.center.addScaledVector(Al,i/n),this.radius+=i}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(yp.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(Al.copy(t.center).add(yp)),this.expandByPoint(Al.copy(t.center).sub(yp))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}toJSON(){return{radius:this.radius,center:this.center.toArray()}}fromJSON(t){return this.radius=t.radius,this.center.fromArray(t.center),this}};const Is=new L,xp=new L,mu=new L,va=new L,Sp=new L,gu=new L,Mp=new L;class Ar{constructor(t=new L,e=new L(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Is)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=Is.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(Is.copy(this.origin).addScaledVector(this.direction,e),Is.distanceToSquared(t))}distanceSqToSegment(t,e,n,i){xp.copy(t).add(e).multiplyScalar(.5),mu.copy(e).sub(t).normalize(),va.copy(this.origin).sub(xp);const r=t.distanceTo(e)*.5,l=-this.direction.dot(mu),c=va.dot(this.direction),h=-va.dot(mu),f=va.lengthSq(),p=Math.abs(1-l*l);let m,g,v,x;if(p>0)if(m=l*h-c,g=l*c-h,x=r*p,m>=0)if(g>=-x)if(g<=x){const M=1/p;m*=M,g*=M,v=m*(m+l*g+2*c)+g*(l*m+g+2*h)+f}else g=r,m=Math.max(0,-(l*g+c)),v=-m*m+g*(g+2*h)+f;else g=-r,m=Math.max(0,-(l*g+c)),v=-m*m+g*(g+2*h)+f;else g<=-x?(m=Math.max(0,-(-l*r+c)),g=m>0?-r:Math.min(Math.max(-r,-h),r),v=-m*m+g*(g+2*h)+f):g<=x?(m=0,g=Math.min(Math.max(-r,-h),r),v=g*(g+2*h)+f):(m=Math.max(0,-(l*r+c)),g=m>0?r:Math.min(Math.max(-r,-h),r),v=-m*m+g*(g+2*h)+f);else g=l>0?-r:r,m=Math.max(0,-(l*g+c)),v=-m*m+g*(g+2*h)+f;return n&&n.copy(this.origin).addScaledVector(this.direction,m),i&&i.copy(xp).addScaledVector(mu,g),v}intersectSphere(t,e){Is.subVectors(t.center,this.origin);const n=Is.dot(this.direction),i=Is.dot(Is)-n*n,r=t.radius*t.radius;if(i>r)return null;const l=Math.sqrt(r-i),c=n-l,h=n+l;return h<0?null:c<0?this.at(h,e):this.at(c,e)}intersectsSphere(t){return t.radius<0?!1:this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return n===null?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,i,r,l,c,h;const f=1/this.direction.x,p=1/this.direction.y,m=1/this.direction.z,g=this.origin;return f>=0?(n=(t.min.x-g.x)*f,i=(t.max.x-g.x)*f):(n=(t.max.x-g.x)*f,i=(t.min.x-g.x)*f),p>=0?(r=(t.min.y-g.y)*p,l=(t.max.y-g.y)*p):(r=(t.max.y-g.y)*p,l=(t.min.y-g.y)*p),n>l||r>i||((r>n||isNaN(n))&&(n=r),(l<i||isNaN(i))&&(i=l),m>=0?(c=(t.min.z-g.z)*m,h=(t.max.z-g.z)*m):(c=(t.max.z-g.z)*m,h=(t.min.z-g.z)*m),n>h||c>i)||((c>n||n!==n)&&(n=c),(h<i||i!==i)&&(i=h),i<0)?null:this.at(n>=0?n:i,e)}intersectsBox(t){return this.intersectBox(t,Is)!==null}intersectTriangle(t,e,n,i,r){Sp.subVectors(e,t),gu.subVectors(n,t),Mp.crossVectors(Sp,gu);let l=this.direction.dot(Mp),c;if(l>0){if(i)return null;c=1}else if(l<0)c=-1,l=-l;else return null;va.subVectors(this.origin,t);const h=c*this.direction.dot(gu.crossVectors(va,gu));if(h<0)return null;const f=c*this.direction.dot(Sp.cross(va));if(f<0||h+f>l)return null;const p=-c*va.dot(Mp);return p<0?null:this.at(p/l,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class he{constructor(t,e,n,i,r,l,c,h,f,p,m,g,v,x,M,S){he.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t!==void 0&&this.set(t,e,n,i,r,l,c,h,f,p,m,g,v,x,M,S)}set(t,e,n,i,r,l,c,h,f,p,m,g,v,x,M,S){const _=this.elements;return _[0]=t,_[4]=e,_[8]=n,_[12]=i,_[1]=r,_[5]=l,_[9]=c,_[13]=h,_[2]=f,_[6]=p,_[10]=m,_[14]=g,_[3]=v,_[7]=x,_[11]=M,_[15]=S,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new he().fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/oo.setFromMatrixColumn(t,0).length(),r=1/oo.setFromMatrixColumn(t,1).length(),l=1/oo.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*r,e[5]=n[5]*r,e[6]=n[6]*r,e[7]=0,e[8]=n[8]*l,e[9]=n[9]*l,e[10]=n[10]*l,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,n=t.x,i=t.y,r=t.z,l=Math.cos(n),c=Math.sin(n),h=Math.cos(i),f=Math.sin(i),p=Math.cos(r),m=Math.sin(r);if(t.order==="XYZ"){const g=l*p,v=l*m,x=c*p,M=c*m;e[0]=h*p,e[4]=-h*m,e[8]=f,e[1]=v+x*f,e[5]=g-M*f,e[9]=-c*h,e[2]=M-g*f,e[6]=x+v*f,e[10]=l*h}else if(t.order==="YXZ"){const g=h*p,v=h*m,x=f*p,M=f*m;e[0]=g+M*c,e[4]=x*c-v,e[8]=l*f,e[1]=l*m,e[5]=l*p,e[9]=-c,e[2]=v*c-x,e[6]=M+g*c,e[10]=l*h}else if(t.order==="ZXY"){const g=h*p,v=h*m,x=f*p,M=f*m;e[0]=g-M*c,e[4]=-l*m,e[8]=x+v*c,e[1]=v+x*c,e[5]=l*p,e[9]=M-g*c,e[2]=-l*f,e[6]=c,e[10]=l*h}else if(t.order==="ZYX"){const g=l*p,v=l*m,x=c*p,M=c*m;e[0]=h*p,e[4]=x*f-v,e[8]=g*f+M,e[1]=h*m,e[5]=M*f+g,e[9]=v*f-x,e[2]=-f,e[6]=c*h,e[10]=l*h}else if(t.order==="YZX"){const g=l*h,v=l*f,x=c*h,M=c*f;e[0]=h*p,e[4]=M-g*m,e[8]=x*m+v,e[1]=m,e[5]=l*p,e[9]=-c*p,e[2]=-f*p,e[6]=v*m+x,e[10]=g-M*m}else if(t.order==="XZY"){const g=l*h,v=l*f,x=c*h,M=c*f;e[0]=h*p,e[4]=-m,e[8]=f*p,e[1]=g*m+M,e[5]=l*p,e[9]=v*m-x,e[2]=x*m-v,e[6]=c*p,e[10]=M*m+g}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(aT,t,rT)}lookAt(t,e,n){const i=this.elements;return Mi.subVectors(t,e),Mi.lengthSq()===0&&(Mi.z=1),Mi.normalize(),_a.crossVectors(n,Mi),_a.lengthSq()===0&&(Math.abs(n.z)===1?Mi.x+=1e-4:Mi.z+=1e-4,Mi.normalize(),_a.crossVectors(n,Mi)),_a.normalize(),vu.crossVectors(Mi,_a),i[0]=_a.x,i[4]=vu.x,i[8]=Mi.x,i[1]=_a.y,i[5]=vu.y,i[9]=Mi.y,i[2]=_a.z,i[6]=vu.z,i[10]=Mi.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,l=n[0],c=n[4],h=n[8],f=n[12],p=n[1],m=n[5],g=n[9],v=n[13],x=n[2],M=n[6],S=n[10],_=n[14],E=n[3],T=n[7],A=n[11],N=n[15],D=i[0],I=i[4],z=i[8],C=i[12],w=i[1],B=i[5],$=i[9],q=i[13],J=i[2],nt=i[6],F=i[10],X=i[14],G=i[3],st=i[7],ct=i[11],_t=i[15];return r[0]=l*D+c*w+h*J+f*G,r[4]=l*I+c*B+h*nt+f*st,r[8]=l*z+c*$+h*F+f*ct,r[12]=l*C+c*q+h*X+f*_t,r[1]=p*D+m*w+g*J+v*G,r[5]=p*I+m*B+g*nt+v*st,r[9]=p*z+m*$+g*F+v*ct,r[13]=p*C+m*q+g*X+v*_t,r[2]=x*D+M*w+S*J+_*G,r[6]=x*I+M*B+S*nt+_*st,r[10]=x*z+M*$+S*F+_*ct,r[14]=x*C+M*q+S*X+_*_t,r[3]=E*D+T*w+A*J+N*G,r[7]=E*I+T*B+A*nt+N*st,r[11]=E*z+T*$+A*F+N*ct,r[15]=E*C+T*q+A*X+N*_t,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],r=t[12],l=t[1],c=t[5],h=t[9],f=t[13],p=t[2],m=t[6],g=t[10],v=t[14],x=t[3],M=t[7],S=t[11],_=t[15];return x*(+r*h*m-i*f*m-r*c*g+n*f*g+i*c*v-n*h*v)+M*(+e*h*v-e*f*g+r*l*g-i*l*v+i*f*p-r*h*p)+S*(+e*f*m-e*c*v-r*l*m+n*l*v+r*c*p-n*f*p)+_*(-i*c*p-e*h*m+e*c*g+i*l*m-n*l*g+n*h*p)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],l=t[4],c=t[5],h=t[6],f=t[7],p=t[8],m=t[9],g=t[10],v=t[11],x=t[12],M=t[13],S=t[14],_=t[15],E=m*S*f-M*g*f+M*h*v-c*S*v-m*h*_+c*g*_,T=x*g*f-p*S*f-x*h*v+l*S*v+p*h*_-l*g*_,A=p*M*f-x*m*f+x*c*v-l*M*v-p*c*_+l*m*_,N=x*m*h-p*M*h-x*c*g+l*M*g+p*c*S-l*m*S,D=e*E+n*T+i*A+r*N;if(D===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const I=1/D;return t[0]=E*I,t[1]=(M*g*r-m*S*r-M*i*v+n*S*v+m*i*_-n*g*_)*I,t[2]=(c*S*r-M*h*r+M*i*f-n*S*f-c*i*_+n*h*_)*I,t[3]=(m*h*r-c*g*r-m*i*f+n*g*f+c*i*v-n*h*v)*I,t[4]=T*I,t[5]=(p*S*r-x*g*r+x*i*v-e*S*v-p*i*_+e*g*_)*I,t[6]=(x*h*r-l*S*r-x*i*f+e*S*f+l*i*_-e*h*_)*I,t[7]=(l*g*r-p*h*r+p*i*f-e*g*f-l*i*v+e*h*v)*I,t[8]=A*I,t[9]=(x*m*r-p*M*r-x*n*v+e*M*v+p*n*_-e*m*_)*I,t[10]=(l*M*r-x*c*r+x*n*f-e*M*f-l*n*_+e*c*_)*I,t[11]=(p*c*r-l*m*r-p*n*f+e*m*f+l*n*v-e*c*v)*I,t[12]=N*I,t[13]=(p*M*i-x*m*i+x*n*g-e*M*g-p*n*S+e*m*S)*I,t[14]=(x*c*i-l*M*i-x*n*h+e*M*h+l*n*S-e*c*S)*I,t[15]=(l*m*i-p*c*i+p*n*h-e*m*h-l*n*g+e*c*g)*I,this}scale(t){const e=this.elements,n=t.x,i=t.y,r=t.z;return e[0]*=n,e[4]*=i,e[8]*=r,e[1]*=n,e[5]*=i,e[9]*=r,e[2]*=n,e[6]*=i,e[10]*=r,e[3]*=n,e[7]*=i,e[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),r=1-n,l=t.x,c=t.y,h=t.z,f=r*l,p=r*c;return this.set(f*l+n,f*c-i*h,f*h+i*c,0,f*c+i*h,p*c+n,p*h-i*l,0,f*h-i*c,p*h+i*l,r*h*h+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,i,r,l){return this.set(1,n,r,0,t,1,l,0,e,i,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,r=e._x,l=e._y,c=e._z,h=e._w,f=r+r,p=l+l,m=c+c,g=r*f,v=r*p,x=r*m,M=l*p,S=l*m,_=c*m,E=h*f,T=h*p,A=h*m,N=n.x,D=n.y,I=n.z;return i[0]=(1-(M+_))*N,i[1]=(v+A)*N,i[2]=(x-T)*N,i[3]=0,i[4]=(v-A)*D,i[5]=(1-(g+_))*D,i[6]=(S+E)*D,i[7]=0,i[8]=(x+T)*I,i[9]=(S-E)*I,i[10]=(1-(g+M))*I,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let r=oo.set(i[0],i[1],i[2]).length();const l=oo.set(i[4],i[5],i[6]).length(),c=oo.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),t.x=i[12],t.y=i[13],t.z=i[14],Ki.copy(this);const f=1/r,p=1/l,m=1/c;return Ki.elements[0]*=f,Ki.elements[1]*=f,Ki.elements[2]*=f,Ki.elements[4]*=p,Ki.elements[5]*=p,Ki.elements[6]*=p,Ki.elements[8]*=m,Ki.elements[9]*=m,Ki.elements[10]*=m,e.setFromRotationMatrix(Ki),n.x=r,n.y=l,n.z=c,this}makePerspective(t,e,n,i,r,l,c=Hi){const h=this.elements,f=2*r/(e-t),p=2*r/(n-i),m=(e+t)/(e-t),g=(n+i)/(n-i);let v,x;if(c===Hi)v=-(l+r)/(l-r),x=-2*l*r/(l-r);else if(c===rc)v=-l/(l-r),x=-l*r/(l-r);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+c);return h[0]=f,h[4]=0,h[8]=m,h[12]=0,h[1]=0,h[5]=p,h[9]=g,h[13]=0,h[2]=0,h[6]=0,h[10]=v,h[14]=x,h[3]=0,h[7]=0,h[11]=-1,h[15]=0,this}makeOrthographic(t,e,n,i,r,l,c=Hi){const h=this.elements,f=1/(e-t),p=1/(n-i),m=1/(l-r),g=(e+t)*f,v=(n+i)*p;let x,M;if(c===Hi)x=(l+r)*m,M=-2*m;else if(c===rc)x=r*m,M=-1*m;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+c);return h[0]=2*f,h[4]=0,h[8]=0,h[12]=-g,h[1]=0,h[5]=2*p,h[9]=0,h[13]=-v,h[2]=0,h[6]=0,h[10]=M,h[14]=-x,h[3]=0,h[7]=0,h[11]=0,h[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<16;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const oo=new L,Ki=new he,aT=new L(0,0,0),rT=new L(1,1,1),_a=new L,vu=new L,Mi=new L,o_=new he,l_=new qn;class Ai{constructor(t=0,e=0,n=0,i=Ai.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i=this._order){return this._x=t,this._y=e,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const i=t.elements,r=i[0],l=i[4],c=i[8],h=i[1],f=i[5],p=i[9],m=i[2],g=i[6],v=i[10];switch(e){case"XYZ":this._y=Math.asin(ve(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-p,v),this._z=Math.atan2(-l,r)):(this._x=Math.atan2(g,f),this._z=0);break;case"YXZ":this._x=Math.asin(-ve(p,-1,1)),Math.abs(p)<.9999999?(this._y=Math.atan2(c,v),this._z=Math.atan2(h,f)):(this._y=Math.atan2(-m,r),this._z=0);break;case"ZXY":this._x=Math.asin(ve(g,-1,1)),Math.abs(g)<.9999999?(this._y=Math.atan2(-m,v),this._z=Math.atan2(-l,f)):(this._y=0,this._z=Math.atan2(h,r));break;case"ZYX":this._y=Math.asin(-ve(m,-1,1)),Math.abs(m)<.9999999?(this._x=Math.atan2(g,v),this._z=Math.atan2(h,r)):(this._x=0,this._z=Math.atan2(-l,f));break;case"YZX":this._z=Math.asin(ve(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(-p,f),this._y=Math.atan2(-m,r)):(this._x=0,this._y=Math.atan2(c,v));break;case"XZY":this._z=Math.asin(-ve(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(g,f),this._y=Math.atan2(c,r)):(this._x=Math.atan2(-p,v),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,n===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return o_.makeRotationFromQuaternion(t),this.setFromRotationMatrix(o_,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return l_.setFromEuler(this),this.setFromQuaternion(l_,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Ai.DEFAULT_ORDER="XYZ";class Fo{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let oT=0;const c_=new L,lo=new qn,Os=new he,_u=new L,wl=new L,lT=new L,cT=new qn,u_=new L(1,0,0),h_=new L(0,1,0),f_=new L(0,0,1),d_={type:"added"},uT={type:"removed"},co={type:"childadded",child:null},bp={type:"childremoved",child:null};class Le extends Ss{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:oT++}),this.uuid=Ti(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Le.DEFAULT_UP.clone();const t=new L,e=new Ai,n=new qn,i=new L(1,1,1);function r(){n.setFromEuler(e,!1)}function l(){e.setFromQuaternion(n,void 0,!1)}e._onChange(r),n._onChange(l),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new he},normalMatrix:{value:new _e}}),this.matrix=new he,this.matrixWorld=new he,this.matrixAutoUpdate=Le.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Le.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Fo,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return lo.setFromAxisAngle(t,e),this.quaternion.multiply(lo),this}rotateOnWorldAxis(t,e){return lo.setFromAxisAngle(t,e),this.quaternion.premultiply(lo),this}rotateX(t){return this.rotateOnAxis(u_,t)}rotateY(t){return this.rotateOnAxis(h_,t)}rotateZ(t){return this.rotateOnAxis(f_,t)}translateOnAxis(t,e){return c_.copy(t).applyQuaternion(this.quaternion),this.position.add(c_.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(u_,t)}translateY(t){return this.translateOnAxis(h_,t)}translateZ(t){return this.translateOnAxis(f_,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(Os.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?_u.copy(t):_u.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),wl.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Os.lookAt(wl,_u,this.up):Os.lookAt(_u,wl,this.up),this.quaternion.setFromRotationMatrix(Os),i&&(Os.extractRotation(i.matrixWorld),lo.setFromRotationMatrix(Os),this.quaternion.premultiply(lo.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(d_),co.child=t,this.dispatchEvent(co),co.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(uT),bp.child=t,this.dispatchEvent(bp),bp.child=null),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),Os.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),Os.multiply(t.parent.matrixWorld)),t.applyMatrix4(Os),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(d_),co.child=t,this.dispatchEvent(co),co.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const l=this.children[n].getObjectByProperty(t,e);if(l!==void 0)return l}}getObjectsByProperty(t,e,n=[]){this[t]===e&&n.push(this);const i=this.children;for(let r=0,l=i.length;r<l;r++)i[r].getObjectsByProperty(t,e,n);return n}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(wl,t,lT),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(wl,cT,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].updateMatrixWorld(t)}updateWorldMatrix(t,e){const n=this.parent;if(t===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),e===!0){const i=this.children;for(let r=0,l=i.length;r<l;r++)i[r].updateWorldMatrix(!1,!0)}}toJSON(t){const e=t===void 0||typeof t=="string",n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.7,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.geometryInfo=this._geometryInfo.map(c=>({...c,boundingBox:c.boundingBox?c.boundingBox.toJSON():void 0,boundingSphere:c.boundingSphere?c.boundingSphere.toJSON():void 0})),i.instanceInfo=this._instanceInfo.map(c=>({...c})),i.availableInstanceIds=this._availableInstanceIds.slice(),i.availableGeometryIds=this._availableGeometryIds.slice(),i.nextIndexStart=this._nextIndexStart,i.nextVertexStart=this._nextVertexStart,i.geometryCount=this._geometryCount,i.maxInstanceCount=this._maxInstanceCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.matricesTexture=this._matricesTexture.toJSON(t),i.indirectTexture=this._indirectTexture.toJSON(t),this._colorsTexture!==null&&(i.colorsTexture=this._colorsTexture.toJSON(t)),this.boundingSphere!==null&&(i.boundingSphere=this.boundingSphere.toJSON()),this.boundingBox!==null&&(i.boundingBox=this.boundingBox.toJSON()));function r(c,h){return c[h.uuid]===void 0&&(c[h.uuid]=h.toJSON(t)),h.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(t.geometries,this.geometry);const c=this.geometry.parameters;if(c!==void 0&&c.shapes!==void 0){const h=c.shapes;if(Array.isArray(h))for(let f=0,p=h.length;f<p;f++){const m=h[f];r(t.shapes,m)}else r(t.shapes,h)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const c=[];for(let h=0,f=this.material.length;h<f;h++)c.push(r(t.materials,this.material[h]));i.material=c}else i.material=r(t.materials,this.material);if(this.children.length>0){i.children=[];for(let c=0;c<this.children.length;c++)i.children.push(this.children[c].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let c=0;c<this.animations.length;c++){const h=this.animations[c];i.animations.push(r(t.animations,h))}}if(e){const c=l(t.geometries),h=l(t.materials),f=l(t.textures),p=l(t.images),m=l(t.shapes),g=l(t.skeletons),v=l(t.animations),x=l(t.nodes);c.length>0&&(n.geometries=c),h.length>0&&(n.materials=h),f.length>0&&(n.textures=f),p.length>0&&(n.images=p),m.length>0&&(n.shapes=m),g.length>0&&(n.skeletons=g),v.length>0&&(n.animations=v),x.length>0&&(n.nodes=x)}return n.object=i,n;function l(c){const h=[];for(const f in c){const p=c[f];delete p.metadata,h.push(p)}return h}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let n=0;n<t.children.length;n++){const i=t.children[n];this.add(i.clone())}return this}}Le.DEFAULT_UP=new L(0,1,0);Le.DEFAULT_MATRIX_AUTO_UPDATE=!0;Le.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Ji=new L,zs=new L,Ep=new L,Bs=new L,uo=new L,ho=new L,p_=new L,Tp=new L,Ap=new L,wp=new L,Cp=new Ae,Rp=new Ae,Dp=new Ae;class ci{constructor(t=new L,e=new L,n=new L){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,i){i.subVectors(n,e),Ji.subVectors(t,e),i.cross(Ji);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(t,e,n,i,r){Ji.subVectors(i,e),zs.subVectors(n,e),Ep.subVectors(t,e);const l=Ji.dot(Ji),c=Ji.dot(zs),h=Ji.dot(Ep),f=zs.dot(zs),p=zs.dot(Ep),m=l*f-c*c;if(m===0)return r.set(0,0,0),null;const g=1/m,v=(f*h-c*p)*g,x=(l*p-c*h)*g;return r.set(1-v-x,x,v)}static containsPoint(t,e,n,i){return this.getBarycoord(t,e,n,i,Bs)===null?!1:Bs.x>=0&&Bs.y>=0&&Bs.x+Bs.y<=1}static getInterpolation(t,e,n,i,r,l,c,h){return this.getBarycoord(t,e,n,i,Bs)===null?(h.x=0,h.y=0,"z"in h&&(h.z=0),"w"in h&&(h.w=0),null):(h.setScalar(0),h.addScaledVector(r,Bs.x),h.addScaledVector(l,Bs.y),h.addScaledVector(c,Bs.z),h)}static getInterpolatedAttribute(t,e,n,i,r,l){return Cp.setScalar(0),Rp.setScalar(0),Dp.setScalar(0),Cp.fromBufferAttribute(t,e),Rp.fromBufferAttribute(t,n),Dp.fromBufferAttribute(t,i),l.setScalar(0),l.addScaledVector(Cp,r.x),l.addScaledVector(Rp,r.y),l.addScaledVector(Dp,r.z),l}static isFrontFacing(t,e,n,i){return Ji.subVectors(n,e),zs.subVectors(t,e),Ji.cross(zs).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}setFromAttributeAndIndices(t,e,n,i){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,i),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return Ji.subVectors(this.c,this.b),zs.subVectors(this.a,this.b),Ji.cross(zs).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return ci.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return ci.getBarycoord(t,this.a,this.b,this.c,e)}getInterpolation(t,e,n,i,r){return ci.getInterpolation(t,this.a,this.b,this.c,e,n,i,r)}containsPoint(t){return ci.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return ci.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,i=this.b,r=this.c;let l,c;uo.subVectors(i,n),ho.subVectors(r,n),Tp.subVectors(t,n);const h=uo.dot(Tp),f=ho.dot(Tp);if(h<=0&&f<=0)return e.copy(n);Ap.subVectors(t,i);const p=uo.dot(Ap),m=ho.dot(Ap);if(p>=0&&m<=p)return e.copy(i);const g=h*m-p*f;if(g<=0&&h>=0&&p<=0)return l=h/(h-p),e.copy(n).addScaledVector(uo,l);wp.subVectors(t,r);const v=uo.dot(wp),x=ho.dot(wp);if(x>=0&&v<=x)return e.copy(r);const M=v*f-h*x;if(M<=0&&f>=0&&x<=0)return c=f/(f-x),e.copy(n).addScaledVector(ho,c);const S=p*x-v*m;if(S<=0&&m-p>=0&&v-x>=0)return p_.subVectors(r,i),c=(m-p)/(m-p+(v-x)),e.copy(i).addScaledVector(p_,c);const _=1/(S+M+g);return l=M*_,c=g*_,e.copy(n).addScaledVector(uo,l).addScaledVector(ho,c)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const oS={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},ya={h:0,s:0,l:0},yu={h:0,s:0,l:0};function Up(s,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?s+(t-s)*6*e:e<1/2?t:e<2/3?s+(t-s)*6*(2/3-e):s}class kt{constructor(t,e,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,n)}set(t,e,n){if(e===void 0&&n===void 0){const i=t;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(t,e,n);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=Wn){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,Ue.colorSpaceToWorking(this,e),this}setRGB(t,e,n,i=Ue.workingColorSpace){return this.r=t,this.g=e,this.b=n,Ue.colorSpaceToWorking(this,i),this}setHSL(t,e,n,i=Ue.workingColorSpace){if(t=lg(t,1),e=ve(e,0,1),n=ve(n,0,1),e===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+e):n+e-n*e,l=2*n-r;this.r=Up(l,r,t+1/3),this.g=Up(l,r,t),this.b=Up(l,r,t-1/3)}return Ue.colorSpaceToWorking(this,i),this}setStyle(t,e=Wn){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(t)){let r;const l=i[1],c=i[2];switch(l){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,e);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,e);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const r=i[1],l=r.length;if(l===3)return this.setRGB(parseInt(r.charAt(0),16)/15,parseInt(r.charAt(1),16)/15,parseInt(r.charAt(2),16)/15,e);if(l===6)return this.setHex(parseInt(r,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=Wn){const n=oS[t.toLowerCase()];return n!==void 0?this.setHex(n,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=Ys(t.r),this.g=Ys(t.g),this.b=Ys(t.b),this}copyLinearToSRGB(t){return this.r=Po(t.r),this.g=Po(t.g),this.b=Po(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=Wn){return Ue.workingToColorSpace(Gn.copy(this),t),Math.round(ve(Gn.r*255,0,255))*65536+Math.round(ve(Gn.g*255,0,255))*256+Math.round(ve(Gn.b*255,0,255))}getHexString(t=Wn){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=Ue.workingColorSpace){Ue.workingToColorSpace(Gn.copy(this),e);const n=Gn.r,i=Gn.g,r=Gn.b,l=Math.max(n,i,r),c=Math.min(n,i,r);let h,f;const p=(c+l)/2;if(c===l)h=0,f=0;else{const m=l-c;switch(f=p<=.5?m/(l+c):m/(2-l-c),l){case n:h=(i-r)/m+(i<r?6:0);break;case i:h=(r-n)/m+2;break;case r:h=(n-i)/m+4;break}h/=6}return t.h=h,t.s=f,t.l=p,t}getRGB(t,e=Ue.workingColorSpace){return Ue.workingToColorSpace(Gn.copy(this),e),t.r=Gn.r,t.g=Gn.g,t.b=Gn.b,t}getStyle(t=Wn){Ue.workingToColorSpace(Gn.copy(this),t);const e=Gn.r,n=Gn.g,i=Gn.b;return t!==Wn?`color(${t} ${e.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(e*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(t,e,n){return this.getHSL(ya),this.setHSL(ya.h+t,ya.s+e,ya.l+n)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(ya),t.getHSL(yu);const n=jl(ya.h,yu.h,e),i=jl(ya.s,yu.s,e),r=jl(ya.l,yu.l,e);return this.setHSL(n,i,r),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,n=this.g,i=this.b,r=t.elements;return this.r=r[0]*e+r[3]*n+r[6]*i,this.g=r[1]*e+r[4]*n+r[7]*i,this.b=r[2]*e+r[5]*n+r[8]*i,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Gn=new kt;kt.NAMES=oS;let hT=0;class Yn extends Ss{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:hT++}),this.uuid=Ti(),this.name="",this.type="Material",this.blending=Ta,this.side=js,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=mh,this.blendDst=gh,this.blendEquation=Ma,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new kt(0,0,0),this.blendAlpha=0,this.depthFunc=br,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Um,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=dr,this.stencilZFail=dr,this.stencilZPass=dr,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const n=t[e];if(n===void 0){console.warn(`THREE.Material: parameter '${e}' has value of undefined.`);continue}const i=this[e];if(i===void 0){console.warn(`THREE.Material: '${e}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const n={metadata:{version:4.7,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Ta&&(n.blending=this.blending),this.side!==js&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==mh&&(n.blendSrc=this.blendSrc),this.blendDst!==gh&&(n.blendDst=this.blendDst),this.blendEquation!==Ma&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==br&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==Um&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==dr&&(n.stencilFail=this.stencilFail),this.stencilZFail!==dr&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==dr&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(r){const l=[];for(const c in r){const h=r[c];delete h.metadata,l.push(h)}return l}if(e){const r=i(t.textures),l=i(t.images);r.length>0&&(n.textures=r),l.length>0&&(n.images=l)}return n}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.blendColor.copy(t.blendColor),this.blendAlpha=t.blendAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(e!==null){const i=e.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=e[r].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}}class Ua extends Yn{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new kt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ai,this.combine=gc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const Xs=fT();function fT(){const s=new ArrayBuffer(4),t=new Float32Array(s),e=new Uint32Array(s),n=new Uint32Array(512),i=new Uint32Array(512);for(let h=0;h<256;++h){const f=h-127;f<-27?(n[h]=0,n[h|256]=32768,i[h]=24,i[h|256]=24):f<-14?(n[h]=1024>>-f-14,n[h|256]=1024>>-f-14|32768,i[h]=-f-1,i[h|256]=-f-1):f<=15?(n[h]=f+15<<10,n[h|256]=f+15<<10|32768,i[h]=13,i[h|256]=13):f<128?(n[h]=31744,n[h|256]=64512,i[h]=24,i[h|256]=24):(n[h]=31744,n[h|256]=64512,i[h]=13,i[h|256]=13)}const r=new Uint32Array(2048),l=new Uint32Array(64),c=new Uint32Array(64);for(let h=1;h<1024;++h){let f=h<<13,p=0;for(;(f&8388608)===0;)f<<=1,p-=8388608;f&=-8388609,p+=947912704,r[h]=f|p}for(let h=1024;h<2048;++h)r[h]=939524096+(h-1024<<13);for(let h=1;h<31;++h)l[h]=h<<23;l[31]=1199570944,l[32]=2147483648;for(let h=33;h<63;++h)l[h]=2147483648+(h-32<<23);l[63]=3347054592;for(let h=1;h<64;++h)h!==32&&(c[h]=1024);return{floatView:t,uint32View:e,baseTable:n,shiftTable:i,mantissaTable:r,exponentTable:l,offsetTable:c}}function li(s){Math.abs(s)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),s=ve(s,-65504,65504),Xs.floatView[0]=s;const t=Xs.uint32View[0],e=t>>23&511;return Xs.baseTable[e]+((t&8388607)>>Xs.shiftTable[e])}function Bl(s){const t=s>>10;return Xs.uint32View[0]=Xs.mantissaTable[Xs.offsetTable[t]+(s&1023)]+Xs.exponentTable[t],Xs.floatView[0]}class dT{static toHalfFloat(t){return li(t)}static fromHalfFloat(t){return Bl(t)}}const mn=new L,xu=new ft;let pT=0;class qe{constructor(t,e,n=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:pT++}),this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=n,this.usage=ac,this.updateRanges=[],this.gpuType=ui,this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[t+i]=e.array[n+i];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,n=this.count;e<n;e++)xu.fromBufferAttribute(this,e),xu.applyMatrix3(t),this.setXY(e,xu.x,xu.y);else if(this.itemSize===3)for(let e=0,n=this.count;e<n;e++)mn.fromBufferAttribute(this,e),mn.applyMatrix3(t),this.setXYZ(e,mn.x,mn.y,mn.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)mn.fromBufferAttribute(this,e),mn.applyMatrix4(t),this.setXYZ(e,mn.x,mn.y,mn.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)mn.fromBufferAttribute(this,e),mn.applyNormalMatrix(t),this.setXYZ(e,mn.x,mn.y,mn.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)mn.fromBufferAttribute(this,e),mn.transformDirection(t),this.setXYZ(e,mn.x,mn.y,mn.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let n=this.array[t*this.itemSize+e];return this.normalized&&(n=ei(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=xe(n,this.array)),this.array[t*this.itemSize+e]=n,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=ei(e,this.array)),e}setX(t,e){return this.normalized&&(e=xe(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=ei(e,this.array)),e}setY(t,e){return this.normalized&&(e=xe(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=ei(e,this.array)),e}setZ(t,e){return this.normalized&&(e=xe(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=ei(e,this.array)),e}setW(t,e){return this.normalized&&(e=xe(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=xe(e,this.array),n=xe(n,this.array)),this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=xe(e,this.array),n=xe(n,this.array),i=xe(i,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this}setXYZW(t,e,n,i,r){return t*=this.itemSize,this.normalized&&(e=xe(e,this.array),n=xe(n,this.array),i=xe(i,this.array),r=xe(r,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=r,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==ac&&(t.usage=this.usage),t}}class mT extends qe{constructor(t,e,n){super(new Int8Array(t),e,n)}}class gT extends qe{constructor(t,e,n){super(new Uint8Array(t),e,n)}}class vT extends qe{constructor(t,e,n){super(new Uint8ClampedArray(t),e,n)}}class _T extends qe{constructor(t,e,n){super(new Int16Array(t),e,n)}}class ug extends qe{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class yT extends qe{constructor(t,e,n){super(new Int32Array(t),e,n)}}class hg extends qe{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class xT extends qe{constructor(t,e,n){super(new Uint16Array(t),e,n),this.isFloat16BufferAttribute=!0}getX(t){let e=Bl(this.array[t*this.itemSize]);return this.normalized&&(e=ei(e,this.array)),e}setX(t,e){return this.normalized&&(e=xe(e,this.array)),this.array[t*this.itemSize]=li(e),this}getY(t){let e=Bl(this.array[t*this.itemSize+1]);return this.normalized&&(e=ei(e,this.array)),e}setY(t,e){return this.normalized&&(e=xe(e,this.array)),this.array[t*this.itemSize+1]=li(e),this}getZ(t){let e=Bl(this.array[t*this.itemSize+2]);return this.normalized&&(e=ei(e,this.array)),e}setZ(t,e){return this.normalized&&(e=xe(e,this.array)),this.array[t*this.itemSize+2]=li(e),this}getW(t){let e=Bl(this.array[t*this.itemSize+3]);return this.normalized&&(e=ei(e,this.array)),e}setW(t,e){return this.normalized&&(e=xe(e,this.array)),this.array[t*this.itemSize+3]=li(e),this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=xe(e,this.array),n=xe(n,this.array)),this.array[t+0]=li(e),this.array[t+1]=li(n),this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=xe(e,this.array),n=xe(n,this.array),i=xe(i,this.array)),this.array[t+0]=li(e),this.array[t+1]=li(n),this.array[t+2]=li(i),this}setXYZW(t,e,n,i,r){return t*=this.itemSize,this.normalized&&(e=xe(e,this.array),n=xe(n,this.array),i=xe(i,this.array),r=xe(r,this.array)),this.array[t+0]=li(e),this.array[t+1]=li(n),this.array[t+2]=li(i),this.array[t+3]=li(r),this}}class Jt extends qe{constructor(t,e,n){super(new Float32Array(t),e,n)}}let ST=0;const zi=new he,Pp=new Le,fo=new L,bi=new _n,Cl=new _n,Tn=new L;class Se extends Ss{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:ST++}),this.uuid=Ti(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(sS(t)?hg:ug)(t,1):this.index=t,this}setIndirect(t){return this.indirect=t,this}getIndirect(){return this.indirect}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new _e().getNormalMatrix(t);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(t),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return zi.makeRotationFromQuaternion(t),this.applyMatrix4(zi),this}rotateX(t){return zi.makeRotationX(t),this.applyMatrix4(zi),this}rotateY(t){return zi.makeRotationY(t),this.applyMatrix4(zi),this}rotateZ(t){return zi.makeRotationZ(t),this.applyMatrix4(zi),this}translate(t,e,n){return zi.makeTranslation(t,e,n),this.applyMatrix4(zi),this}scale(t,e,n){return zi.makeScale(t,e,n),this.applyMatrix4(zi),this}lookAt(t){return Pp.lookAt(t),Pp.updateMatrix(),this.applyMatrix4(Pp.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(fo).negate(),this.translate(fo.x,fo.y,fo.z),this}setFromPoints(t){const e=this.getAttribute("position");if(e===void 0){const n=[];for(let i=0,r=t.length;i<r;i++){const l=t[i];n.push(l.x,l.y,l.z||0)}this.setAttribute("position",new Jt(n,3))}else{const n=Math.min(t.length,e.count);for(let i=0;i<n;i++){const r=t[i];e.setXYZ(i,r.x,r.y,r.z||0)}t.length>e.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),e.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new _n);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new L(-1/0,-1/0,-1/0),new L(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let n=0,i=e.length;n<i;n++){const r=e[n];bi.setFromBufferAttribute(r),this.morphTargetsRelative?(Tn.addVectors(this.boundingBox.min,bi.min),this.boundingBox.expandByPoint(Tn),Tn.addVectors(this.boundingBox.max,bi.max),this.boundingBox.expandByPoint(Tn)):(this.boundingBox.expandByPoint(bi.min),this.boundingBox.expandByPoint(bi.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new yn);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new L,1/0);return}if(t){const n=this.boundingSphere.center;if(bi.setFromBufferAttribute(t),e)for(let r=0,l=e.length;r<l;r++){const c=e[r];Cl.setFromBufferAttribute(c),this.morphTargetsRelative?(Tn.addVectors(bi.min,Cl.min),bi.expandByPoint(Tn),Tn.addVectors(bi.max,Cl.max),bi.expandByPoint(Tn)):(bi.expandByPoint(Cl.min),bi.expandByPoint(Cl.max))}bi.getCenter(n);let i=0;for(let r=0,l=t.count;r<l;r++)Tn.fromBufferAttribute(t,r),i=Math.max(i,n.distanceToSquared(Tn));if(e)for(let r=0,l=e.length;r<l;r++){const c=e[r],h=this.morphTargetsRelative;for(let f=0,p=c.count;f<p;f++)Tn.fromBufferAttribute(c,f),h&&(fo.fromBufferAttribute(t,f),Tn.add(fo)),i=Math.max(i,n.distanceToSquared(Tn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.position,i=e.normal,r=e.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new qe(new Float32Array(4*n.count),4));const l=this.getAttribute("tangent"),c=[],h=[];for(let z=0;z<n.count;z++)c[z]=new L,h[z]=new L;const f=new L,p=new L,m=new L,g=new ft,v=new ft,x=new ft,M=new L,S=new L;function _(z,C,w){f.fromBufferAttribute(n,z),p.fromBufferAttribute(n,C),m.fromBufferAttribute(n,w),g.fromBufferAttribute(r,z),v.fromBufferAttribute(r,C),x.fromBufferAttribute(r,w),p.sub(f),m.sub(f),v.sub(g),x.sub(g);const B=1/(v.x*x.y-x.x*v.y);isFinite(B)&&(M.copy(p).multiplyScalar(x.y).addScaledVector(m,-v.y).multiplyScalar(B),S.copy(m).multiplyScalar(v.x).addScaledVector(p,-x.x).multiplyScalar(B),c[z].add(M),c[C].add(M),c[w].add(M),h[z].add(S),h[C].add(S),h[w].add(S))}let E=this.groups;E.length===0&&(E=[{start:0,count:t.count}]);for(let z=0,C=E.length;z<C;++z){const w=E[z],B=w.start,$=w.count;for(let q=B,J=B+$;q<J;q+=3)_(t.getX(q+0),t.getX(q+1),t.getX(q+2))}const T=new L,A=new L,N=new L,D=new L;function I(z){N.fromBufferAttribute(i,z),D.copy(N);const C=c[z];T.copy(C),T.sub(N.multiplyScalar(N.dot(C))).normalize(),A.crossVectors(D,C);const B=A.dot(h[z])<0?-1:1;l.setXYZW(z,T.x,T.y,T.z,B)}for(let z=0,C=E.length;z<C;++z){const w=E[z],B=w.start,$=w.count;for(let q=B,J=B+$;q<J;q+=3)I(t.getX(q+0)),I(t.getX(q+1)),I(t.getX(q+2))}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new qe(new Float32Array(e.count*3),3),this.setAttribute("normal",n);else for(let g=0,v=n.count;g<v;g++)n.setXYZ(g,0,0,0);const i=new L,r=new L,l=new L,c=new L,h=new L,f=new L,p=new L,m=new L;if(t)for(let g=0,v=t.count;g<v;g+=3){const x=t.getX(g+0),M=t.getX(g+1),S=t.getX(g+2);i.fromBufferAttribute(e,x),r.fromBufferAttribute(e,M),l.fromBufferAttribute(e,S),p.subVectors(l,r),m.subVectors(i,r),p.cross(m),c.fromBufferAttribute(n,x),h.fromBufferAttribute(n,M),f.fromBufferAttribute(n,S),c.add(p),h.add(p),f.add(p),n.setXYZ(x,c.x,c.y,c.z),n.setXYZ(M,h.x,h.y,h.z),n.setXYZ(S,f.x,f.y,f.z)}else for(let g=0,v=e.count;g<v;g+=3)i.fromBufferAttribute(e,g+0),r.fromBufferAttribute(e,g+1),l.fromBufferAttribute(e,g+2),p.subVectors(l,r),m.subVectors(i,r),p.cross(m),n.setXYZ(g+0,p.x,p.y,p.z),n.setXYZ(g+1,p.x,p.y,p.z),n.setXYZ(g+2,p.x,p.y,p.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)Tn.fromBufferAttribute(t,e),Tn.normalize(),t.setXYZ(e,Tn.x,Tn.y,Tn.z)}toNonIndexed(){function t(c,h){const f=c.array,p=c.itemSize,m=c.normalized,g=new f.constructor(h.length*p);let v=0,x=0;for(let M=0,S=h.length;M<S;M++){c.isInterleavedBufferAttribute?v=h[M]*c.data.stride+c.offset:v=h[M]*p;for(let _=0;_<p;_++)g[x++]=f[v++]}return new qe(g,p,m)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new Se,n=this.index.array,i=this.attributes;for(const c in i){const h=i[c],f=t(h,n);e.setAttribute(c,f)}const r=this.morphAttributes;for(const c in r){const h=[],f=r[c];for(let p=0,m=f.length;p<m;p++){const g=f[p],v=t(g,n);h.push(v)}e.morphAttributes[c]=h}e.morphTargetsRelative=this.morphTargetsRelative;const l=this.groups;for(let c=0,h=l.length;c<h;c++){const f=l[c];e.addGroup(f.start,f.count,f.materialIndex)}return e}toJSON(){const t={metadata:{version:4.7,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const h=this.parameters;for(const f in h)h[f]!==void 0&&(t[f]=h[f]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const h in n){const f=n[h];t.data.attributes[h]=f.toJSON(t.data)}const i={};let r=!1;for(const h in this.morphAttributes){const f=this.morphAttributes[h],p=[];for(let m=0,g=f.length;m<g;m++){const v=f[m];p.push(v.toJSON(t.data))}p.length>0&&(i[h]=p,r=!0)}r&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const l=this.groups;l.length>0&&(t.data.groups=JSON.parse(JSON.stringify(l)));const c=this.boundingSphere;return c!==null&&(t.data.boundingSphere=c.toJSON()),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;n!==null&&this.setIndex(n.clone());const i=t.attributes;for(const f in i){const p=i[f];this.setAttribute(f,p.clone(e))}const r=t.morphAttributes;for(const f in r){const p=[],m=r[f];for(let g=0,v=m.length;g<v;g++)p.push(m[g].clone(e));this.morphAttributes[f]=p}this.morphTargetsRelative=t.morphTargetsRelative;const l=t.groups;for(let f=0,p=l.length;f<p;f++){const m=l[f];this.addGroup(m.start,m.count,m.materialIndex)}const c=t.boundingBox;c!==null&&(this.boundingBox=c.clone());const h=t.boundingSphere;return h!==null&&(this.boundingSphere=h.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const m_=new he,er=new Ar,Su=new yn,g_=new L,Mu=new L,bu=new L,Eu=new L,Np=new L,Tu=new L,v_=new L,Au=new L;class hn extends Le{constructor(t=new Se,e=new Ua){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.count=1,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,l=i.length;r<l;r++){const c=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=r}}}}getVertexPosition(t,e){const n=this.geometry,i=n.attributes.position,r=n.morphAttributes.position,l=n.morphTargetsRelative;e.fromBufferAttribute(i,t);const c=this.morphTargetInfluences;if(r&&c){Tu.set(0,0,0);for(let h=0,f=r.length;h<f;h++){const p=c[h],m=r[h];p!==0&&(Np.fromBufferAttribute(m,t),l?Tu.addScaledVector(Np,p):Tu.addScaledVector(Np.sub(e),p))}e.add(Tu)}return e}raycast(t,e){const n=this.geometry,i=this.material,r=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),Su.copy(n.boundingSphere),Su.applyMatrix4(r),er.copy(t.ray).recast(t.near),!(Su.containsPoint(er.origin)===!1&&(er.intersectSphere(Su,g_)===null||er.origin.distanceToSquared(g_)>(t.far-t.near)**2))&&(m_.copy(r).invert(),er.copy(t.ray).applyMatrix4(m_),!(n.boundingBox!==null&&er.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(t,e,er)))}_computeIntersections(t,e,n){let i;const r=this.geometry,l=this.material,c=r.index,h=r.attributes.position,f=r.attributes.uv,p=r.attributes.uv1,m=r.attributes.normal,g=r.groups,v=r.drawRange;if(c!==null)if(Array.isArray(l))for(let x=0,M=g.length;x<M;x++){const S=g[x],_=l[S.materialIndex],E=Math.max(S.start,v.start),T=Math.min(c.count,Math.min(S.start+S.count,v.start+v.count));for(let A=E,N=T;A<N;A+=3){const D=c.getX(A),I=c.getX(A+1),z=c.getX(A+2);i=wu(this,_,t,n,f,p,m,D,I,z),i&&(i.faceIndex=Math.floor(A/3),i.face.materialIndex=S.materialIndex,e.push(i))}}else{const x=Math.max(0,v.start),M=Math.min(c.count,v.start+v.count);for(let S=x,_=M;S<_;S+=3){const E=c.getX(S),T=c.getX(S+1),A=c.getX(S+2);i=wu(this,l,t,n,f,p,m,E,T,A),i&&(i.faceIndex=Math.floor(S/3),e.push(i))}}else if(h!==void 0)if(Array.isArray(l))for(let x=0,M=g.length;x<M;x++){const S=g[x],_=l[S.materialIndex],E=Math.max(S.start,v.start),T=Math.min(h.count,Math.min(S.start+S.count,v.start+v.count));for(let A=E,N=T;A<N;A+=3){const D=A,I=A+1,z=A+2;i=wu(this,_,t,n,f,p,m,D,I,z),i&&(i.faceIndex=Math.floor(A/3),i.face.materialIndex=S.materialIndex,e.push(i))}}else{const x=Math.max(0,v.start),M=Math.min(h.count,v.start+v.count);for(let S=x,_=M;S<_;S+=3){const E=S,T=S+1,A=S+2;i=wu(this,l,t,n,f,p,m,E,T,A),i&&(i.faceIndex=Math.floor(S/3),e.push(i))}}}}function MT(s,t,e,n,i,r,l,c){let h;if(t.side===ni?h=n.intersectTriangle(l,r,i,!0,c):h=n.intersectTriangle(i,r,l,t.side===js,c),h===null)return null;Au.copy(c),Au.applyMatrix4(s.matrixWorld);const f=e.ray.origin.distanceTo(Au);return f<e.near||f>e.far?null:{distance:f,point:Au.clone(),object:s}}function wu(s,t,e,n,i,r,l,c,h,f){s.getVertexPosition(c,Mu),s.getVertexPosition(h,bu),s.getVertexPosition(f,Eu);const p=MT(s,t,e,n,Mu,bu,Eu,v_);if(p){const m=new L;ci.getBarycoord(v_,Mu,bu,Eu,m),i&&(p.uv=ci.getInterpolatedAttribute(i,c,h,f,m,new ft)),r&&(p.uv1=ci.getInterpolatedAttribute(r,c,h,f,m,new ft)),l&&(p.normal=ci.getInterpolatedAttribute(l,c,h,f,m,new L),p.normal.dot(n.direction)>0&&p.normal.multiplyScalar(-1));const g={a:c,b:h,c:f,normal:new L,materialIndex:0};ci.getNormal(Mu,bu,Eu,g.normal),p.face=g,p.barycoord=m}return p}class wr extends Se{constructor(t=1,e=1,n=1,i=1,r=1,l=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:r,depthSegments:l};const c=this;i=Math.floor(i),r=Math.floor(r),l=Math.floor(l);const h=[],f=[],p=[],m=[];let g=0,v=0;x("z","y","x",-1,-1,n,e,t,l,r,0),x("z","y","x",1,-1,n,e,-t,l,r,1),x("x","z","y",1,1,t,n,e,i,l,2),x("x","z","y",1,-1,t,n,-e,i,l,3),x("x","y","z",1,-1,t,e,n,i,r,4),x("x","y","z",-1,-1,t,e,-n,i,r,5),this.setIndex(h),this.setAttribute("position",new Jt(f,3)),this.setAttribute("normal",new Jt(p,3)),this.setAttribute("uv",new Jt(m,2));function x(M,S,_,E,T,A,N,D,I,z,C){const w=A/I,B=N/z,$=A/2,q=N/2,J=D/2,nt=I+1,F=z+1;let X=0,G=0;const st=new L;for(let ct=0;ct<F;ct++){const _t=ct*B-q;for(let Dt=0;Dt<nt;Dt++){const Xt=Dt*w-$;st[M]=Xt*E,st[S]=_t*T,st[_]=J,f.push(st.x,st.y,st.z),st[M]=0,st[S]=0,st[_]=D>0?1:-1,p.push(st.x,st.y,st.z),m.push(Dt/I),m.push(1-ct/z),X+=1}}for(let ct=0;ct<z;ct++)for(let _t=0;_t<I;_t++){const Dt=g+_t+nt*ct,Xt=g+_t+nt*(ct+1),tt=g+(_t+1)+nt*(ct+1),yt=g+(_t+1)+nt*ct;h.push(Dt,Xt,yt),h.push(Xt,tt,yt),G+=6}c.addGroup(v,G,C),v+=G,g+=X}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new wr(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function Ho(s){const t={};for(const e in s){t[e]={};for(const n in s[e]){const i=s[e][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[e][n]=null):t[e][n]=i.clone():Array.isArray(i)?t[e][n]=i.slice():t[e][n]=i}}return t}function $n(s){const t={};for(let e=0;e<s.length;e++){const n=Ho(s[e]);for(const i in n)t[i]=n[i]}return t}function bT(s){const t=[];for(let e=0;e<s.length;e++)t.push(s[e].clone());return t}function lS(s){const t=s.getRenderTarget();return t===null?s.outputColorSpace:t.isXRRenderTarget===!0?t.texture.colorSpace:Ue.workingColorSpace}const Jh={clone:Ho,merge:$n};var ET=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,TT=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class wi extends Yn{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=ET,this.fragmentShader=TT,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Ho(t.uniforms),this.uniformsGroups=bT(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const l=this.uniforms[i].value;l&&l.isTexture?e.uniforms[i]={type:"t",value:l.toJSON(t).uuid}:l&&l.isColor?e.uniforms[i]={type:"c",value:l.getHex()}:l&&l.isVector2?e.uniforms[i]={type:"v2",value:l.toArray()}:l&&l.isVector3?e.uniforms[i]={type:"v3",value:l.toArray()}:l&&l.isVector4?e.uniforms[i]={type:"v4",value:l.toArray()}:l&&l.isMatrix3?e.uniforms[i]={type:"m3",value:l.toArray()}:l&&l.isMatrix4?e.uniforms[i]={type:"m4",value:l.toArray()}:e.uniforms[i]={value:l}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e.lights=this.lights,e.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}class xf extends Le{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new he,this.projectionMatrix=new he,this.projectionMatrixInverse=new he,this.coordinateSystem=Hi}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this.coordinateSystem=t.coordinateSystem,this}getWorldDirection(t){return super.getWorldDirection(t).negate()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const xa=new L,__=new ft,y_=new ft;class sn extends xf{constructor(t=50,e=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=Bo*2*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(xr*.5*this.fov);return .5*this.getFilmHeight()/t}getEffectiveFOV(){return Bo*2*Math.atan(Math.tan(xr*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(t,e,n){xa.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),e.set(xa.x,xa.y).multiplyScalar(-t/xa.z),xa.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(xa.x,xa.y).multiplyScalar(-t/xa.z)}getViewSize(t,e){return this.getViewBounds(t,__,y_),e.subVectors(y_,__)}setViewOffset(t,e,n,i,r,l){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(xr*.5*this.fov)/this.zoom,n=2*e,i=this.aspect*n,r=-.5*i;const l=this.view;if(this.view!==null&&this.view.enabled){const h=l.fullWidth,f=l.fullHeight;r+=l.offsetX*i/h,e-=l.offsetY*n/f,i*=l.width/h,n*=l.height/f}const c=this.filmOffset;c!==0&&(r+=t*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,e,e-n,t,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const po=-90,mo=1;class cS extends Le{constructor(t,e,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new sn(po,mo,t,e);i.layers=this.layers,this.add(i);const r=new sn(po,mo,t,e);r.layers=this.layers,this.add(r);const l=new sn(po,mo,t,e);l.layers=this.layers,this.add(l);const c=new sn(po,mo,t,e);c.layers=this.layers,this.add(c);const h=new sn(po,mo,t,e);h.layers=this.layers,this.add(h);const f=new sn(po,mo,t,e);f.layers=this.layers,this.add(f)}updateCoordinateSystem(){const t=this.coordinateSystem,e=this.children.concat(),[n,i,r,l,c,h]=e;for(const f of e)this.remove(f);if(t===Hi)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),l.up.set(0,0,1),l.lookAt(0,-1,0),c.up.set(0,1,0),c.lookAt(0,0,1),h.up.set(0,1,0),h.lookAt(0,0,-1);else if(t===rc)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),l.up.set(0,0,-1),l.lookAt(0,-1,0),c.up.set(0,-1,0),c.lookAt(0,0,1),h.up.set(0,-1,0),h.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+t);for(const f of e)this.add(f),f.updateMatrixWorld()}update(t,e){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==t.coordinateSystem&&(this.coordinateSystem=t.coordinateSystem,this.updateCoordinateSystem());const[r,l,c,h,f,p]=this.children,m=t.getRenderTarget(),g=t.getActiveCubeFace(),v=t.getActiveMipmapLevel(),x=t.xr.enabled;t.xr.enabled=!1;const M=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0,i),t.render(e,r),t.setRenderTarget(n,1,i),t.render(e,l),t.setRenderTarget(n,2,i),t.render(e,c),t.setRenderTarget(n,3,i),t.render(e,h),t.setRenderTarget(n,4,i),t.render(e,f),n.texture.generateMipmaps=M,t.setRenderTarget(n,5,i),t.render(e,p),t.setRenderTarget(m,g,v),t.xr.enabled=x,n.texture.needsPMREMUpdate=!0}}class _c extends en{constructor(t=[],e=Zs,n,i,r,l,c,h,f,p){super(t,e,n,i,r,l,c,h,f,p),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class uS extends xs{constructor(t=1,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const n={width:t,height:t,depth:1},i=[n,n,n,n,n,n];this.texture=new _c(i),this._setTextureOptions(e),this.texture.isRenderTargetTexture=!0}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.colorSpace=e.colorSpace,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new wr(5,5,5),r=new wi({name:"CubemapFromEquirect",uniforms:Ho(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:ni,blending:qs});r.uniforms.tEquirect.value=e;const l=new hn(i,r),c=e.minFilter;return e.minFilter===ms&&(e.minFilter=vn),new cS(1,10,this).update(t,l),e.minFilter=c,l.geometry.dispose(),l.material.dispose(),this}clear(t,e=!0,n=!0,i=!0){const r=t.getRenderTarget();for(let l=0;l<6;l++)t.setRenderTarget(this,l),t.clear(e,n,i);t.setRenderTarget(r)}}class Co extends Le{constructor(){super(),this.isGroup=!0,this.type="Group"}}const AT={type:"move"};class uh{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Co,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Co,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new L,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new L),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Co,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new L,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new L),this._grip}dispatchEvent(t){return this._targetRay!==null&&this._targetRay.dispatchEvent(t),this._grip!==null&&this._grip.dispatchEvent(t),this._hand!==null&&this._hand.dispatchEvent(t),this}connect(t){if(t&&t.hand){const e=this._hand;if(e)for(const n of t.hand.values())this._getHandJoint(e,n)}return this.dispatchEvent({type:"connected",data:t}),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(t,e,n){let i=null,r=null,l=null;const c=this._targetRay,h=this._grip,f=this._hand;if(t&&e.session.visibilityState!=="visible-blurred"){if(f&&t.hand){l=!0;for(const M of t.hand.values()){const S=e.getJointPose(M,n),_=this._getHandJoint(f,M);S!==null&&(_.matrix.fromArray(S.transform.matrix),_.matrix.decompose(_.position,_.rotation,_.scale),_.matrixWorldNeedsUpdate=!0,_.jointRadius=S.radius),_.visible=S!==null}const p=f.joints["index-finger-tip"],m=f.joints["thumb-tip"],g=p.position.distanceTo(m.position),v=.02,x=.005;f.inputState.pinching&&g>v+x?(f.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!f.inputState.pinching&&g<=v-x&&(f.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else h!==null&&t.gripSpace&&(r=e.getPose(t.gripSpace,n),r!==null&&(h.matrix.fromArray(r.transform.matrix),h.matrix.decompose(h.position,h.rotation,h.scale),h.matrixWorldNeedsUpdate=!0,r.linearVelocity?(h.hasLinearVelocity=!0,h.linearVelocity.copy(r.linearVelocity)):h.hasLinearVelocity=!1,r.angularVelocity?(h.hasAngularVelocity=!0,h.angularVelocity.copy(r.angularVelocity)):h.hasAngularVelocity=!1));c!==null&&(i=e.getPose(t.targetRaySpace,n),i===null&&r!==null&&(i=r),i!==null&&(c.matrix.fromArray(i.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,i.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(i.linearVelocity)):c.hasLinearVelocity=!1,i.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(i.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(AT)))}return c!==null&&(c.visible=i!==null),h!==null&&(h.visible=r!==null),f!==null&&(f.visible=l!==null),this}_getHandJoint(t,e){if(t.joints[e.jointName]===void 0){const n=new Co;n.matrixAutoUpdate=!1,n.visible=!1,t.joints[e.jointName]=n,t.add(n)}return t.joints[e.jointName]}}class Sf{constructor(t,e=25e-5){this.isFogExp2=!0,this.name="",this.color=new kt(t),this.density=e}clone(){return new Sf(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class Mf{constructor(t,e=1,n=1e3){this.isFog=!0,this.name="",this.color=new kt(t),this.near=e,this.far=n}clone(){return new Mf(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class fg extends Le{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Ai,this.environmentIntensity=1,this.environmentRotation=new Ai,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),t.background!==null&&(this.background=t.background.clone()),t.environment!==null&&(this.environment=t.environment.clone()),t.fog!==null&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,this.backgroundIntensity=t.backgroundIntensity,this.backgroundRotation.copy(t.backgroundRotation),this.environmentIntensity=t.environmentIntensity,this.environmentRotation.copy(t.environmentRotation),t.overrideMaterial!==null&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return this.fog!==null&&(e.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(e.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(e.object.backgroundIntensity=this.backgroundIntensity),e.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(e.object.environmentIntensity=this.environmentIntensity),e.object.environmentRotation=this.environmentRotation.toArray(),e}}class bf{constructor(t,e){this.isInterleavedBuffer=!0,this.array=t,this.stride=e,this.count=t!==void 0?t.length/e:0,this.usage=ac,this.updateRanges=[],this.version=0,this.uuid=Ti()}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,n){t*=this.stride,n*=e.stride;for(let i=0,r=this.stride;i<r;i++)this.array[t+i]=e.array[n+i];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Ti()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(e,this.stride);return n.setUsage(this.usage),n}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Ti()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Qn=new L;class Ei{constructor(t,e,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,n=this.data.count;e<n;e++)Qn.fromBufferAttribute(this,e),Qn.applyMatrix4(t),this.setXYZ(e,Qn.x,Qn.y,Qn.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)Qn.fromBufferAttribute(this,e),Qn.applyNormalMatrix(t),this.setXYZ(e,Qn.x,Qn.y,Qn.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)Qn.fromBufferAttribute(this,e),Qn.transformDirection(t),this.setXYZ(e,Qn.x,Qn.y,Qn.z);return this}getComponent(t,e){let n=this.array[t*this.data.stride+this.offset+e];return this.normalized&&(n=ei(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=xe(n,this.array)),this.data.array[t*this.data.stride+this.offset+e]=n,this}setX(t,e){return this.normalized&&(e=xe(e,this.array)),this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.normalized&&(e=xe(e,this.array)),this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.normalized&&(e=xe(e,this.array)),this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.normalized&&(e=xe(e,this.array)),this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){let e=this.data.array[t*this.data.stride+this.offset];return this.normalized&&(e=ei(e,this.array)),e}getY(t){let e=this.data.array[t*this.data.stride+this.offset+1];return this.normalized&&(e=ei(e,this.array)),e}getZ(t){let e=this.data.array[t*this.data.stride+this.offset+2];return this.normalized&&(e=ei(e,this.array)),e}getW(t){let e=this.data.array[t*this.data.stride+this.offset+3];return this.normalized&&(e=ei(e,this.array)),e}setXY(t,e,n){return t=t*this.data.stride+this.offset,this.normalized&&(e=xe(e,this.array),n=xe(n,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this}setXYZ(t,e,n,i){return t=t*this.data.stride+this.offset,this.normalized&&(e=xe(e,this.array),n=xe(n,this.array),i=xe(i,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this}setXYZW(t,e,n,i,r){return t=t*this.data.stride+this.offset,this.normalized&&(e=xe(e,this.array),n=xe(n,this.array),i=xe(i,this.array),r=xe(r,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this.data.array[t+3]=r,this}clone(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)e.push(this.data.array[i+r])}return new qe(new this.array.constructor(e),this.itemSize,this.normalized)}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new Ei(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)e.push(this.data.array[i+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class dg extends Yn{constructor(t){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new kt(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}let go;const Rl=new L,vo=new L,_o=new L,yo=new ft,Dl=new ft,hS=new he,Cu=new L,Ul=new L,Ru=new L,x_=new ft,Lp=new ft,S_=new ft;class fS extends Le{constructor(t=new dg){if(super(),this.isSprite=!0,this.type="Sprite",go===void 0){go=new Se;const e=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new bf(e,5);go.setIndex([0,1,2,0,2,3]),go.setAttribute("position",new Ei(n,3,0,!1)),go.setAttribute("uv",new Ei(n,2,3,!1))}this.geometry=go,this.material=t,this.center=new ft(.5,.5),this.count=1}raycast(t,e){t.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),vo.setFromMatrixScale(this.matrixWorld),hS.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),_o.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&vo.multiplyScalar(-_o.z);const n=this.material.rotation;let i,r;n!==0&&(r=Math.cos(n),i=Math.sin(n));const l=this.center;Du(Cu.set(-.5,-.5,0),_o,l,vo,i,r),Du(Ul.set(.5,-.5,0),_o,l,vo,i,r),Du(Ru.set(.5,.5,0),_o,l,vo,i,r),x_.set(0,0),Lp.set(1,0),S_.set(1,1);let c=t.ray.intersectTriangle(Cu,Ul,Ru,!1,Rl);if(c===null&&(Du(Ul.set(-.5,.5,0),_o,l,vo,i,r),Lp.set(0,1),c=t.ray.intersectTriangle(Cu,Ru,Ul,!1,Rl),c===null))return;const h=t.ray.origin.distanceTo(Rl);h<t.near||h>t.far||e.push({distance:h,point:Rl.clone(),uv:ci.getInterpolation(Rl,Cu,Ul,Ru,x_,Lp,S_,new ft),face:null,object:this})}copy(t,e){return super.copy(t,e),t.center!==void 0&&this.center.copy(t.center),this.material=t.material,this}}function Du(s,t,e,n,i,r){yo.subVectors(s,e).addScalar(.5).multiply(n),i!==void 0?(Dl.x=r*yo.x-i*yo.y,Dl.y=i*yo.x+r*yo.y):Dl.copy(yo),s.copy(t),s.x+=Dl.x,s.y+=Dl.y,s.applyMatrix4(hS)}const Uu=new L,M_=new L;class dS extends Le{constructor(){super(),this.isLOD=!0,this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}copy(t){super.copy(t,!1);const e=t.levels;for(let n=0,i=e.length;n<i;n++){const r=e[n];this.addLevel(r.object.clone(),r.distance,r.hysteresis)}return this.autoUpdate=t.autoUpdate,this}addLevel(t,e=0,n=0){e=Math.abs(e);const i=this.levels;let r;for(r=0;r<i.length&&!(e<i[r].distance);r++);return i.splice(r,0,{distance:e,hysteresis:n,object:t}),this.add(t),this}removeLevel(t){const e=this.levels;for(let n=0;n<e.length;n++)if(e[n].distance===t){const i=e.splice(n,1);return this.remove(i[0].object),!0}return!1}getCurrentLevel(){return this._currentLevel}getObjectForDistance(t){const e=this.levels;if(e.length>0){let n,i;for(n=1,i=e.length;n<i;n++){let r=e[n].distance;if(e[n].object.visible&&(r-=r*e[n].hysteresis),t<r)break}return e[n-1].object}return null}raycast(t,e){if(this.levels.length>0){Uu.setFromMatrixPosition(this.matrixWorld);const i=t.ray.origin.distanceTo(Uu);this.getObjectForDistance(i).raycast(t,e)}}update(t){const e=this.levels;if(e.length>1){Uu.setFromMatrixPosition(t.matrixWorld),M_.setFromMatrixPosition(this.matrixWorld);const n=Uu.distanceTo(M_)/t.zoom;e[0].object.visible=!0;let i,r;for(i=1,r=e.length;i<r;i++){let l=e[i].distance;if(e[i].object.visible&&(l-=l*e[i].hysteresis),n>=l)e[i-1].object.visible=!1,e[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<r;i++)e[i].object.visible=!1}}toJSON(t){const e=super.toJSON(t);this.autoUpdate===!1&&(e.object.autoUpdate=!1),e.object.levels=[];const n=this.levels;for(let i=0,r=n.length;i<r;i++){const l=n[i];e.object.levels.push({object:l.object.uuid,distance:l.distance,hysteresis:l.hysteresis})}return e}}const b_=new L,E_=new Ae,T_=new Ae,wT=new L,A_=new he,Pu=new L,Ip=new yn,w_=new he,Op=new Ar;class pS extends hn{constructor(t,e){super(t,e),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=Dm,this.bindMatrix=new he,this.bindMatrixInverse=new he,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const t=this.geometry;this.boundingBox===null&&(this.boundingBox=new _n),this.boundingBox.makeEmpty();const e=t.getAttribute("position");for(let n=0;n<e.count;n++)this.getVertexPosition(n,Pu),this.boundingBox.expandByPoint(Pu)}computeBoundingSphere(){const t=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new yn),this.boundingSphere.makeEmpty();const e=t.getAttribute("position");for(let n=0;n<e.count;n++)this.getVertexPosition(n,Pu),this.boundingSphere.expandByPoint(Pu)}copy(t,e){return super.copy(t,e),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),this}raycast(t,e){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Ip.copy(this.boundingSphere),Ip.applyMatrix4(i),t.ray.intersectsSphere(Ip)!==!1&&(w_.copy(i).invert(),Op.copy(t.ray).applyMatrix4(w_),!(this.boundingBox!==null&&Op.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(t,e,Op)))}getVertexPosition(t,e){return super.getVertexPosition(t,e),this.applyBoneTransform(t,e),e}bind(t,e){this.skeleton=t,e===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const t=new Ae,e=this.geometry.attributes.skinWeight;for(let n=0,i=e.count;n<i;n++){t.fromBufferAttribute(e,n);const r=1/t.manhattanLength();r!==1/0?t.multiplyScalar(r):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}}updateMatrixWorld(t){super.updateMatrixWorld(t),this.bindMode===Dm?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===kx?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(t,e){const n=this.skeleton,i=this.geometry;E_.fromBufferAttribute(i.attributes.skinIndex,t),T_.fromBufferAttribute(i.attributes.skinWeight,t),b_.copy(e).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let r=0;r<4;r++){const l=T_.getComponent(r);if(l!==0){const c=E_.getComponent(r);A_.multiplyMatrices(n.bones[c].matrixWorld,n.boneInverses[c]),e.addScaledVector(wT.copy(b_).applyMatrix4(A_),l)}}return e.applyMatrix4(this.bindMatrixInverse)}}class pg extends Le{constructor(){super(),this.isBone=!0,this.type="Bone"}}class _s extends en{constructor(t=null,e=1,n=1,i,r,l,c,h,f=Ln,p=Ln,m,g){super(null,l,c,h,f,p,i,r,m,g),this.isDataTexture=!0,this.image={data:t,width:e,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const C_=new he,CT=new he;class Ef{constructor(t=[],e=[]){this.uuid=Ti(),this.bones=t.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const t=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(t.length*16),e.length===0)this.calculateInverses();else if(t.length!==e.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new he)}}calculateInverses(){this.boneInverses.length=0;for(let t=0,e=this.bones.length;t<e;t++){const n=new he;this.bones[t]&&n.copy(this.bones[t].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let t=0,e=this.bones.length;t<e;t++){const n=this.bones[t];n&&n.matrixWorld.copy(this.boneInverses[t]).invert()}for(let t=0,e=this.bones.length;t<e;t++){const n=this.bones[t];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const t=this.bones,e=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let r=0,l=t.length;r<l;r++){const c=t[r]?t[r].matrixWorld:CT;C_.multiplyMatrices(c,e[r]),C_.toArray(n,r*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new Ef(this.bones,this.boneInverses)}computeBoneTexture(){let t=Math.sqrt(this.bones.length*4);t=Math.ceil(t/4)*4,t=Math.max(t,4);const e=new Float32Array(t*t*4);e.set(this.boneMatrices);const n=new _s(e,t,t,Xn,ui);return n.needsUpdate=!0,this.boneMatrices=e,this.boneTexture=n,this}getBoneByName(t){for(let e=0,n=this.bones.length;e<n;e++){const i=this.bones[e];if(i.name===t)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(t,e){this.uuid=t.uuid;for(let n=0,i=t.bones.length;n<i;n++){const r=t.bones[n];let l=e[r];l===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),l=new pg),this.bones.push(l),this.boneInverses.push(new he().fromArray(t.boneInverses[n]))}return this.init(),this}toJSON(){const t={metadata:{version:4.7,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};t.uuid=this.uuid;const e=this.bones,n=this.boneInverses;for(let i=0,r=e.length;i<r;i++){const l=e[i];t.bones.push(l.uuid);const c=n[i];t.boneInverses.push(c.toArray())}return t}}class Vo extends qe{constructor(t,e,n,i=1){super(t,e,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}toJSON(){const t=super.toJSON();return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}const xo=new he,R_=new he,Nu=[],D_=new _n,RT=new he,Pl=new hn,Nl=new yn;class mS extends hn{constructor(t,e,n){super(t,e),this.isInstancedMesh=!0,this.instanceMatrix=new Vo(new Float32Array(n*16),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,RT)}computeBoundingBox(){const t=this.geometry,e=this.count;this.boundingBox===null&&(this.boundingBox=new _n),t.boundingBox===null&&t.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<e;n++)this.getMatrixAt(n,xo),D_.copy(t.boundingBox).applyMatrix4(xo),this.boundingBox.union(D_)}computeBoundingSphere(){const t=this.geometry,e=this.count;this.boundingSphere===null&&(this.boundingSphere=new yn),t.boundingSphere===null&&t.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<e;n++)this.getMatrixAt(n,xo),Nl.copy(t.boundingSphere).applyMatrix4(xo),this.boundingSphere.union(Nl)}copy(t,e){return super.copy(t,e),this.instanceMatrix.copy(t.instanceMatrix),t.morphTexture!==null&&(this.morphTexture=t.morphTexture.clone()),t.instanceColor!==null&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),this}getColorAt(t,e){e.fromArray(this.instanceColor.array,t*3)}getMatrixAt(t,e){e.fromArray(this.instanceMatrix.array,t*16)}getMorphAt(t,e){const n=e.morphTargetInfluences,i=this.morphTexture.source.data.data,r=n.length+1,l=t*r+1;for(let c=0;c<n.length;c++)n[c]=i[l+c]}raycast(t,e){const n=this.matrixWorld,i=this.count;if(Pl.geometry=this.geometry,Pl.material=this.material,Pl.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Nl.copy(this.boundingSphere),Nl.applyMatrix4(n),t.ray.intersectsSphere(Nl)!==!1))for(let r=0;r<i;r++){this.getMatrixAt(r,xo),R_.multiplyMatrices(n,xo),Pl.matrixWorld=R_,Pl.raycast(t,Nu);for(let l=0,c=Nu.length;l<c;l++){const h=Nu[l];h.instanceId=r,h.object=this,e.push(h)}Nu.length=0}}setColorAt(t,e){this.instanceColor===null&&(this.instanceColor=new Vo(new Float32Array(this.instanceMatrix.count*3).fill(1),3)),e.toArray(this.instanceColor.array,t*3)}setMatrixAt(t,e){e.toArray(this.instanceMatrix.array,t*16)}setMorphAt(t,e){const n=e.morphTargetInfluences,i=n.length+1;this.morphTexture===null&&(this.morphTexture=new _s(new Float32Array(i*this.count),i,this.count,pf,ui));const r=this.morphTexture.source.data.data;let l=0;for(let f=0;f<n.length;f++)l+=n[f];const c=this.geometry.morphTargetsRelative?1:1-l,h=i*t;r[h]=c,r.set(n,h+1)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null)}}const zp=new L,DT=new L,UT=new _e;class Gs{constructor(t=new L(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const i=zp.subVectors(n,e).cross(DT.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(t).addScaledVector(this.normal,-this.distanceToPoint(t))}intersectLine(t,e){const n=t.delta(zp),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(t.start)===0?e.copy(t.start):null;const r=-(t.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:e.copy(t.start).addScaledVector(n,r)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||UT.getNormalMatrix(t),i=this.coplanarPoint(zp).applyMatrix4(t),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return new this.constructor().copy(this)}}const nr=new yn,PT=new ft(.5,.5),Lu=new L;class Yo{constructor(t=new Gs,e=new Gs,n=new Gs,i=new Gs,r=new Gs,l=new Gs){this.planes=[t,e,n,i,r,l]}set(t,e,n,i,r,l){const c=this.planes;return c[0].copy(t),c[1].copy(e),c[2].copy(n),c[3].copy(i),c[4].copy(r),c[5].copy(l),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t,e=Hi){const n=this.planes,i=t.elements,r=i[0],l=i[1],c=i[2],h=i[3],f=i[4],p=i[5],m=i[6],g=i[7],v=i[8],x=i[9],M=i[10],S=i[11],_=i[12],E=i[13],T=i[14],A=i[15];if(n[0].setComponents(h-r,g-f,S-v,A-_).normalize(),n[1].setComponents(h+r,g+f,S+v,A+_).normalize(),n[2].setComponents(h+l,g+p,S+x,A+E).normalize(),n[3].setComponents(h-l,g-p,S-x,A-E).normalize(),n[4].setComponents(h-c,g-m,S-M,A-T).normalize(),e===Hi)n[5].setComponents(h+c,g+m,S+M,A+T).normalize();else if(e===rc)n[5].setComponents(c,m,M,T).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+e);return this}intersectsObject(t){if(t.boundingSphere!==void 0)t.boundingSphere===null&&t.computeBoundingSphere(),nr.copy(t.boundingSphere).applyMatrix4(t.matrixWorld);else{const e=t.geometry;e.boundingSphere===null&&e.computeBoundingSphere(),nr.copy(e.boundingSphere).applyMatrix4(t.matrixWorld)}return this.intersectsSphere(nr)}intersectsSprite(t){nr.center.set(0,0,0);const e=PT.distanceTo(t.center);return nr.radius=.7071067811865476+e,nr.applyMatrix4(t.matrixWorld),this.intersectsSphere(nr)}intersectsSphere(t){const e=this.planes,n=t.center,i=-t.radius;for(let r=0;r<6;r++)if(e[r].distanceToPoint(n)<i)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const i=e[n];if(Lu.x=i.normal.x>0?t.max.x:t.min.x,Lu.y=i.normal.y>0?t.max.y:t.min.y,Lu.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(Lu)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}const us=new he,hs=new Yo;class Tf{constructor(){this.coordinateSystem=Hi}intersectsObject(t,e){if(!e.isArrayCamera||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(us.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),hs.setFromProjectionMatrix(us,this.coordinateSystem),hs.intersectsObject(t))return!0}return!1}intersectsSprite(t,e){if(!e||!e.cameras||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(us.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),hs.setFromProjectionMatrix(us,this.coordinateSystem),hs.intersectsSprite(t))return!0}return!1}intersectsSphere(t,e){if(!e||!e.cameras||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(us.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),hs.setFromProjectionMatrix(us,this.coordinateSystem),hs.intersectsSphere(t))return!0}return!1}intersectsBox(t,e){if(!e||!e.cameras||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(us.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),hs.setFromProjectionMatrix(us,this.coordinateSystem),hs.intersectsBox(t))return!0}return!1}containsPoint(t,e){if(!e||!e.cameras||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(us.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),hs.setFromProjectionMatrix(us,this.coordinateSystem),hs.containsPoint(t))return!0}return!1}clone(){return new Tf}}function Bp(s,t){return s-t}function NT(s,t){return s.z-t.z}function LT(s,t){return t.z-s.z}class IT{constructor(){this.index=0,this.pool=[],this.list=[]}push(t,e,n,i){const r=this.pool,l=this.list;this.index>=r.length&&r.push({start:-1,count:-1,z:-1,index:-1});const c=r[this.index];l.push(c),this.index++,c.start=t,c.count=e,c.z=n,c.index=i}reset(){this.list.length=0,this.index=0}}const oi=new he,OT=new kt(1,1,1),U_=new Yo,zT=new Tf,Iu=new _n,ir=new yn,Ll=new L,P_=new L,BT=new L,Fp=new IT,kn=new hn,Ou=[];function FT(s,t,e=0){const n=t.itemSize;if(s.isInterleavedBufferAttribute||s.array.constructor!==t.array.constructor){const i=s.count;for(let r=0;r<i;r++)for(let l=0;l<n;l++)t.setComponent(r+e,l,s.getComponent(r,l))}else t.array.set(s.array,e*n);t.needsUpdate=!0}function sr(s,t){if(s.constructor!==t.constructor){const e=Math.min(s.length,t.length);for(let n=0;n<e;n++)t[n]=s[n]}else{const e=Math.min(s.length,t.length);t.set(new s.constructor(s.buffer,0,e))}}class gS extends hn{constructor(t,e,n=e*2,i){super(new Se,i),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._instanceInfo=[],this._geometryInfo=[],this._availableInstanceIds=[],this._availableGeometryIds=[],this._nextIndexStart=0,this._nextVertexStart=0,this._geometryCount=0,this._visibilityChanged=!0,this._geometryInitialized=!1,this._maxInstanceCount=t,this._maxVertexCount=e,this._maxIndexCount=n,this._multiDrawCounts=new Int32Array(t),this._multiDrawStarts=new Int32Array(t),this._multiDrawCount=0,this._multiDrawInstances=null,this._matricesTexture=null,this._indirectTexture=null,this._colorsTexture=null,this._initMatricesTexture(),this._initIndirectTexture()}get maxInstanceCount(){return this._maxInstanceCount}get instanceCount(){return this._instanceInfo.length-this._availableInstanceIds.length}get unusedVertexCount(){return this._maxVertexCount-this._nextVertexStart}get unusedIndexCount(){return this._maxIndexCount-this._nextIndexStart}_initMatricesTexture(){let t=Math.sqrt(this._maxInstanceCount*4);t=Math.ceil(t/4)*4,t=Math.max(t,4);const e=new Float32Array(t*t*4),n=new _s(e,t,t,Xn,ui);this._matricesTexture=n}_initIndirectTexture(){let t=Math.sqrt(this._maxInstanceCount);t=Math.ceil(t);const e=new Uint32Array(t*t),n=new _s(e,t,t,vc,Ks);this._indirectTexture=n}_initColorsTexture(){let t=Math.sqrt(this._maxInstanceCount);t=Math.ceil(t);const e=new Float32Array(t*t*4).fill(1),n=new _s(e,t,t,Xn,ui);n.colorSpace=Ue.workingColorSpace,this._colorsTexture=n}_initializeGeometry(t){const e=this.geometry,n=this._maxVertexCount,i=this._maxIndexCount;if(this._geometryInitialized===!1){for(const r in t.attributes){const l=t.getAttribute(r),{array:c,itemSize:h,normalized:f}=l,p=new c.constructor(n*h),m=new qe(p,h,f);e.setAttribute(r,m)}if(t.getIndex()!==null){const r=n>65535?new Uint32Array(i):new Uint16Array(i);e.setIndex(new qe(r,1))}this._geometryInitialized=!0}}_validateGeometry(t){const e=this.geometry;if(!!t.getIndex()!=!!e.getIndex())throw new Error('THREE.BatchedMesh: All geometries must consistently have "index".');for(const n in e.attributes){if(!t.hasAttribute(n))throw new Error(`THREE.BatchedMesh: Added geometry missing "${n}". All geometries must have consistent attributes.`);const i=t.getAttribute(n),r=e.getAttribute(n);if(i.itemSize!==r.itemSize||i.normalized!==r.normalized)throw new Error("THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}validateInstanceId(t){const e=this._instanceInfo;if(t<0||t>=e.length||e[t].active===!1)throw new Error(`THREE.BatchedMesh: Invalid instanceId ${t}. Instance is either out of range or has been deleted.`)}validateGeometryId(t){const e=this._geometryInfo;if(t<0||t>=e.length||e[t].active===!1)throw new Error(`THREE.BatchedMesh: Invalid geometryId ${t}. Geometry is either out of range or has been deleted.`)}setCustomSort(t){return this.customSort=t,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new _n);const t=this.boundingBox,e=this._instanceInfo;t.makeEmpty();for(let n=0,i=e.length;n<i;n++){if(e[n].active===!1)continue;const r=e[n].geometryIndex;this.getMatrixAt(n,oi),this.getBoundingBoxAt(r,Iu).applyMatrix4(oi),t.union(Iu)}}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new yn);const t=this.boundingSphere,e=this._instanceInfo;t.makeEmpty();for(let n=0,i=e.length;n<i;n++){if(e[n].active===!1)continue;const r=e[n].geometryIndex;this.getMatrixAt(n,oi),this.getBoundingSphereAt(r,ir).applyMatrix4(oi),t.union(ir)}}addInstance(t){if(this._instanceInfo.length>=this.maxInstanceCount&&this._availableInstanceIds.length===0)throw new Error("THREE.BatchedMesh: Maximum item count reached.");const n={visible:!0,active:!0,geometryIndex:t};let i=null;this._availableInstanceIds.length>0?(this._availableInstanceIds.sort(Bp),i=this._availableInstanceIds.shift(),this._instanceInfo[i]=n):(i=this._instanceInfo.length,this._instanceInfo.push(n));const r=this._matricesTexture;oi.identity().toArray(r.image.data,i*16),r.needsUpdate=!0;const l=this._colorsTexture;return l&&(OT.toArray(l.image.data,i*4),l.needsUpdate=!0),this._visibilityChanged=!0,i}addGeometry(t,e=-1,n=-1){this._initializeGeometry(t),this._validateGeometry(t);const i={vertexStart:-1,vertexCount:-1,reservedVertexCount:-1,indexStart:-1,indexCount:-1,reservedIndexCount:-1,start:-1,count:-1,boundingBox:null,boundingSphere:null,active:!0},r=this._geometryInfo;i.vertexStart=this._nextVertexStart,i.reservedVertexCount=e===-1?t.getAttribute("position").count:e;const l=t.getIndex();if(l!==null&&(i.indexStart=this._nextIndexStart,i.reservedIndexCount=n===-1?l.count:n),i.indexStart!==-1&&i.indexStart+i.reservedIndexCount>this._maxIndexCount||i.vertexStart+i.reservedVertexCount>this._maxVertexCount)throw new Error("THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.");let h;return this._availableGeometryIds.length>0?(this._availableGeometryIds.sort(Bp),h=this._availableGeometryIds.shift(),r[h]=i):(h=this._geometryCount,this._geometryCount++,r.push(i)),this.setGeometryAt(h,t),this._nextIndexStart=i.indexStart+i.reservedIndexCount,this._nextVertexStart=i.vertexStart+i.reservedVertexCount,h}setGeometryAt(t,e){if(t>=this._geometryCount)throw new Error("THREE.BatchedMesh: Maximum geometry count reached.");this._validateGeometry(e);const n=this.geometry,i=n.getIndex()!==null,r=n.getIndex(),l=e.getIndex(),c=this._geometryInfo[t];if(i&&l.count>c.reservedIndexCount||e.attributes.position.count>c.reservedVertexCount)throw new Error("THREE.BatchedMesh: Reserved space not large enough for provided geometry.");const h=c.vertexStart,f=c.reservedVertexCount;c.vertexCount=e.getAttribute("position").count;for(const p in n.attributes){const m=e.getAttribute(p),g=n.getAttribute(p);FT(m,g,h);const v=m.itemSize;for(let x=m.count,M=f;x<M;x++){const S=h+x;for(let _=0;_<v;_++)g.setComponent(S,_,0)}g.needsUpdate=!0,g.addUpdateRange(h*v,f*v)}if(i){const p=c.indexStart,m=c.reservedIndexCount;c.indexCount=e.getIndex().count;for(let g=0;g<l.count;g++)r.setX(p+g,h+l.getX(g));for(let g=l.count,v=m;g<v;g++)r.setX(p+g,h);r.needsUpdate=!0,r.addUpdateRange(p,c.reservedIndexCount)}return c.start=i?c.indexStart:c.vertexStart,c.count=i?c.indexCount:c.vertexCount,c.boundingBox=null,e.boundingBox!==null&&(c.boundingBox=e.boundingBox.clone()),c.boundingSphere=null,e.boundingSphere!==null&&(c.boundingSphere=e.boundingSphere.clone()),this._visibilityChanged=!0,t}deleteGeometry(t){const e=this._geometryInfo;if(t>=e.length||e[t].active===!1)return this;const n=this._instanceInfo;for(let i=0,r=n.length;i<r;i++)n[i].active&&n[i].geometryIndex===t&&this.deleteInstance(i);return e[t].active=!1,this._availableGeometryIds.push(t),this._visibilityChanged=!0,this}deleteInstance(t){return this.validateInstanceId(t),this._instanceInfo[t].active=!1,this._availableInstanceIds.push(t),this._visibilityChanged=!0,this}optimize(){let t=0,e=0;const n=this._geometryInfo,i=n.map((l,c)=>c).sort((l,c)=>n[l].vertexStart-n[c].vertexStart),r=this.geometry;for(let l=0,c=n.length;l<c;l++){const h=i[l],f=n[h];if(f.active!==!1){if(r.index!==null){if(f.indexStart!==e){const{indexStart:p,vertexStart:m,reservedIndexCount:g}=f,v=r.index,x=v.array,M=t-m;for(let S=p;S<p+g;S++)x[S]=x[S]+M;v.array.copyWithin(e,p,p+g),v.addUpdateRange(e,g),f.indexStart=e}e+=f.reservedIndexCount}if(f.vertexStart!==t){const{vertexStart:p,reservedVertexCount:m}=f,g=r.attributes;for(const v in g){const x=g[v],{array:M,itemSize:S}=x;M.copyWithin(t*S,p*S,(p+m)*S),x.addUpdateRange(t*S,m*S)}f.vertexStart=t}t+=f.reservedVertexCount,f.start=r.index?f.indexStart:f.vertexStart,this._nextIndexStart=r.index?f.indexStart+f.reservedIndexCount:0,this._nextVertexStart=f.vertexStart+f.reservedVertexCount}}return this}getBoundingBoxAt(t,e){if(t>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[t];if(i.boundingBox===null){const r=new _n,l=n.index,c=n.attributes.position;for(let h=i.start,f=i.start+i.count;h<f;h++){let p=h;l&&(p=l.getX(p)),r.expandByPoint(Ll.fromBufferAttribute(c,p))}i.boundingBox=r}return e.copy(i.boundingBox),e}getBoundingSphereAt(t,e){if(t>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[t];if(i.boundingSphere===null){const r=new yn;this.getBoundingBoxAt(t,Iu),Iu.getCenter(r.center);const l=n.index,c=n.attributes.position;let h=0;for(let f=i.start,p=i.start+i.count;f<p;f++){let m=f;l&&(m=l.getX(m)),Ll.fromBufferAttribute(c,m),h=Math.max(h,r.center.distanceToSquared(Ll))}r.radius=Math.sqrt(h),i.boundingSphere=r}return e.copy(i.boundingSphere),e}setMatrixAt(t,e){this.validateInstanceId(t);const n=this._matricesTexture,i=this._matricesTexture.image.data;return e.toArray(i,t*16),n.needsUpdate=!0,this}getMatrixAt(t,e){return this.validateInstanceId(t),e.fromArray(this._matricesTexture.image.data,t*16)}setColorAt(t,e){return this.validateInstanceId(t),this._colorsTexture===null&&this._initColorsTexture(),e.toArray(this._colorsTexture.image.data,t*4),this._colorsTexture.needsUpdate=!0,this}getColorAt(t,e){return this.validateInstanceId(t),e.fromArray(this._colorsTexture.image.data,t*4)}setVisibleAt(t,e){return this.validateInstanceId(t),this._instanceInfo[t].visible===e?this:(this._instanceInfo[t].visible=e,this._visibilityChanged=!0,this)}getVisibleAt(t){return this.validateInstanceId(t),this._instanceInfo[t].visible}setGeometryIdAt(t,e){return this.validateInstanceId(t),this.validateGeometryId(e),this._instanceInfo[t].geometryIndex=e,this}getGeometryIdAt(t){return this.validateInstanceId(t),this._instanceInfo[t].geometryIndex}getGeometryRangeAt(t,e={}){this.validateGeometryId(t);const n=this._geometryInfo[t];return e.vertexStart=n.vertexStart,e.vertexCount=n.vertexCount,e.reservedVertexCount=n.reservedVertexCount,e.indexStart=n.indexStart,e.indexCount=n.indexCount,e.reservedIndexCount=n.reservedIndexCount,e.start=n.start,e.count=n.count,e}setInstanceCount(t){const e=this._availableInstanceIds,n=this._instanceInfo;for(e.sort(Bp);e[e.length-1]===n.length;)n.pop(),e.pop();if(t<n.length)throw new Error(`BatchedMesh: Instance ids outside the range ${t} are being used. Cannot shrink instance count.`);const i=new Int32Array(t),r=new Int32Array(t);sr(this._multiDrawCounts,i),sr(this._multiDrawStarts,r),this._multiDrawCounts=i,this._multiDrawStarts=r,this._maxInstanceCount=t;const l=this._indirectTexture,c=this._matricesTexture,h=this._colorsTexture;l.dispose(),this._initIndirectTexture(),sr(l.image.data,this._indirectTexture.image.data),c.dispose(),this._initMatricesTexture(),sr(c.image.data,this._matricesTexture.image.data),h&&(h.dispose(),this._initColorsTexture(),sr(h.image.data,this._colorsTexture.image.data))}setGeometrySize(t,e){const n=[...this._geometryInfo].filter(c=>c.active);if(Math.max(...n.map(c=>c.vertexStart+c.reservedVertexCount))>t)throw new Error(`BatchedMesh: Geometry vertex values are being used outside the range ${e}. Cannot shrink further.`);if(this.geometry.index&&Math.max(...n.map(h=>h.indexStart+h.reservedIndexCount))>e)throw new Error(`BatchedMesh: Geometry index values are being used outside the range ${e}. Cannot shrink further.`);const r=this.geometry;r.dispose(),this._maxVertexCount=t,this._maxIndexCount=e,this._geometryInitialized&&(this._geometryInitialized=!1,this.geometry=new Se,this._initializeGeometry(r));const l=this.geometry;r.index&&sr(r.index.array,l.index.array);for(const c in r.attributes)sr(r.attributes[c].array,l.attributes[c].array)}raycast(t,e){const n=this._instanceInfo,i=this._geometryInfo,r=this.matrixWorld,l=this.geometry;kn.material=this.material,kn.geometry.index=l.index,kn.geometry.attributes=l.attributes,kn.geometry.boundingBox===null&&(kn.geometry.boundingBox=new _n),kn.geometry.boundingSphere===null&&(kn.geometry.boundingSphere=new yn);for(let c=0,h=n.length;c<h;c++){if(!n[c].visible||!n[c].active)continue;const f=n[c].geometryIndex,p=i[f];kn.geometry.setDrawRange(p.start,p.count),this.getMatrixAt(c,kn.matrixWorld).premultiply(r),this.getBoundingBoxAt(f,kn.geometry.boundingBox),this.getBoundingSphereAt(f,kn.geometry.boundingSphere),kn.raycast(t,Ou);for(let m=0,g=Ou.length;m<g;m++){const v=Ou[m];v.object=this,v.batchId=c,e.push(v)}Ou.length=0}kn.material=null,kn.geometry.index=null,kn.geometry.attributes={},kn.geometry.setDrawRange(0,1/0)}copy(t){return super.copy(t),this.geometry=t.geometry.clone(),this.perObjectFrustumCulled=t.perObjectFrustumCulled,this.sortObjects=t.sortObjects,this.boundingBox=t.boundingBox!==null?t.boundingBox.clone():null,this.boundingSphere=t.boundingSphere!==null?t.boundingSphere.clone():null,this._geometryInfo=t._geometryInfo.map(e=>({...e,boundingBox:e.boundingBox!==null?e.boundingBox.clone():null,boundingSphere:e.boundingSphere!==null?e.boundingSphere.clone():null})),this._instanceInfo=t._instanceInfo.map(e=>({...e})),this._availableInstanceIds=t._availableInstanceIds.slice(),this._availableGeometryIds=t._availableGeometryIds.slice(),this._nextIndexStart=t._nextIndexStart,this._nextVertexStart=t._nextVertexStart,this._geometryCount=t._geometryCount,this._maxInstanceCount=t._maxInstanceCount,this._maxVertexCount=t._maxVertexCount,this._maxIndexCount=t._maxIndexCount,this._geometryInitialized=t._geometryInitialized,this._multiDrawCounts=t._multiDrawCounts.slice(),this._multiDrawStarts=t._multiDrawStarts.slice(),this._indirectTexture=t._indirectTexture.clone(),this._indirectTexture.image.data=this._indirectTexture.image.data.slice(),this._matricesTexture=t._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.data.slice(),this._colorsTexture!==null&&(this._colorsTexture=t._colorsTexture.clone(),this._colorsTexture.image.data=this._colorsTexture.image.data.slice()),this}dispose(){this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this._indirectTexture.dispose(),this._indirectTexture=null,this._colorsTexture!==null&&(this._colorsTexture.dispose(),this._colorsTexture=null)}onBeforeRender(t,e,n,i,r){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const l=i.getIndex(),c=l===null?1:l.array.BYTES_PER_ELEMENT,h=this._instanceInfo,f=this._multiDrawStarts,p=this._multiDrawCounts,m=this._geometryInfo,g=this.perObjectFrustumCulled,v=this._indirectTexture,x=v.image.data,M=n.isArrayCamera?zT:U_;g&&!n.isArrayCamera&&(oi.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse).multiply(this.matrixWorld),U_.setFromProjectionMatrix(oi,t.coordinateSystem));let S=0;if(this.sortObjects){oi.copy(this.matrixWorld).invert(),Ll.setFromMatrixPosition(n.matrixWorld).applyMatrix4(oi),P_.set(0,0,-1).transformDirection(n.matrixWorld).transformDirection(oi);for(let T=0,A=h.length;T<A;T++)if(h[T].visible&&h[T].active){const N=h[T].geometryIndex;this.getMatrixAt(T,oi),this.getBoundingSphereAt(N,ir).applyMatrix4(oi);let D=!1;if(g&&(D=!M.intersectsSphere(ir,n)),!D){const I=m[N],z=BT.subVectors(ir.center,Ll).dot(P_);Fp.push(I.start,I.count,z,T)}}const _=Fp.list,E=this.customSort;E===null?_.sort(r.transparent?LT:NT):E.call(this,_,n);for(let T=0,A=_.length;T<A;T++){const N=_[T];f[S]=N.start*c,p[S]=N.count,x[S]=N.index,S++}Fp.reset()}else for(let _=0,E=h.length;_<E;_++)if(h[_].visible&&h[_].active){const T=h[_].geometryIndex;let A=!1;if(g&&(this.getMatrixAt(_,oi),this.getBoundingSphereAt(T,ir).applyMatrix4(oi),A=!M.intersectsSphere(ir,n)),!A){const N=m[T];f[S]=N.start*c,p[S]=N.count,x[S]=_,S++}}v.needsUpdate=!0,this._multiDrawCount=S,this._visibilityChanged=!1}onBeforeShadow(t,e,n,i,r,l){this.onBeforeRender(t,null,i,r,l)}}class ii extends Yn{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new kt(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}const Qh=new L,$h=new L,N_=new he,Il=new Ar,zu=new yn,Hp=new L,L_=new L;let Ca=class extends Le{constructor(t=new Se,e=new ii){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,n=[0];for(let i=1,r=e.count;i<r;i++)Qh.fromBufferAttribute(e,i-1),$h.fromBufferAttribute(e,i),n[i]=n[i-1],n[i]+=Qh.distanceTo($h);t.setAttribute("lineDistance",new Jt(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,r=t.params.Line.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),zu.copy(n.boundingSphere),zu.applyMatrix4(i),zu.radius+=r,t.ray.intersectsSphere(zu)===!1)return;N_.copy(i).invert(),Il.copy(t.ray).applyMatrix4(N_);const c=r/((this.scale.x+this.scale.y+this.scale.z)/3),h=c*c,f=this.isLineSegments?2:1,p=n.index,g=n.attributes.position;if(p!==null){const v=Math.max(0,l.start),x=Math.min(p.count,l.start+l.count);for(let M=v,S=x-1;M<S;M+=f){const _=p.getX(M),E=p.getX(M+1),T=Bu(this,t,Il,h,_,E,M);T&&e.push(T)}if(this.isLineLoop){const M=p.getX(x-1),S=p.getX(v),_=Bu(this,t,Il,h,M,S,x-1);_&&e.push(_)}}else{const v=Math.max(0,l.start),x=Math.min(g.count,l.start+l.count);for(let M=v,S=x-1;M<S;M+=f){const _=Bu(this,t,Il,h,M,M+1,M);_&&e.push(_)}if(this.isLineLoop){const M=Bu(this,t,Il,h,x-1,v,x-1);M&&e.push(M)}}}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,l=i.length;r<l;r++){const c=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=r}}}}};function Bu(s,t,e,n,i,r,l){const c=s.geometry.attributes.position;if(Qh.fromBufferAttribute(c,i),$h.fromBufferAttribute(c,r),e.distanceSqToSegment(Qh,$h,Hp,L_)>n)return;Hp.applyMatrix4(s.matrixWorld);const f=t.ray.origin.distanceTo(Hp);if(!(f<t.near||f>t.far))return{distance:f,point:L_.clone().applyMatrix4(s.matrixWorld),index:l,face:null,faceIndex:null,barycoord:null,object:s}}const I_=new L,O_=new L;class Ms extends Ca{constructor(t,e){super(t,e),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,n=[];for(let i=0,r=e.count;i<r;i+=2)I_.fromBufferAttribute(e,i),O_.fromBufferAttribute(e,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+I_.distanceTo(O_);t.setAttribute("lineDistance",new Jt(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class vS extends Ca{constructor(t,e){super(t,e),this.isLineLoop=!0,this.type="LineLoop"}}class mg extends Yn{constructor(t){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new kt(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}const z_=new he,Nm=new Ar,Fu=new yn,Hu=new L;let _S=class extends Le{constructor(t=new Se,e=new mg){super(),this.isPoints=!0,this.type="Points",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,r=t.params.Points.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Fu.copy(n.boundingSphere),Fu.applyMatrix4(i),Fu.radius+=r,t.ray.intersectsSphere(Fu)===!1)return;z_.copy(i).invert(),Nm.copy(t.ray).applyMatrix4(z_);const c=r/((this.scale.x+this.scale.y+this.scale.z)/3),h=c*c,f=n.index,m=n.attributes.position;if(f!==null){const g=Math.max(0,l.start),v=Math.min(f.count,l.start+l.count);for(let x=g,M=v;x<M;x++){const S=f.getX(x);Hu.fromBufferAttribute(m,S),B_(Hu,S,h,i,t,e,this)}}else{const g=Math.max(0,l.start),v=Math.min(m.count,l.start+l.count);for(let x=g,M=v;x<M;x++)Hu.fromBufferAttribute(m,x),B_(Hu,x,h,i,t,e,this)}}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,l=i.length;r<l;r++){const c=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=r}}}}};function B_(s,t,e,n,i,r,l){const c=Nm.distanceSqToPoint(s);if(c<e){const h=new L;Nm.closestPointToPoint(s,h),h.applyMatrix4(n);const f=i.ray.origin.distanceTo(h);if(f<i.near||f>i.far)return;r.push({distance:f,distanceToRay:Math.sqrt(c),point:h,index:t,face:null,faceIndex:null,barycoord:null,object:l})}}class yS extends en{constructor(t,e,n,i,r=vn,l=vn,c,h,f){super(t,e,n,i,r,l,c,h,f),this.isVideoTexture=!0,this.generateMipmaps=!1;const p=this;function m(){p.needsUpdate=!0,t.requestVideoFrameCallback(m)}"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback(m)}clone(){return new this.constructor(this.image).copy(this)}update(){const t=this.image;"requestVideoFrameCallback"in t===!1&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class HT extends yS{constructor(t,e,n,i,r,l,c,h){super({},t,e,n,i,r,l,c,h),this.isVideoFrameTexture=!0}update(){}clone(){return new this.constructor().copy(this)}setFrame(t){this.image=t,this.needsUpdate=!0}}class VT extends en{constructor(t,e){super({width:t,height:e}),this.isFramebufferTexture=!0,this.magFilter=Ln,this.minFilter=Ln,this.generateMipmaps=!1,this.needsUpdate=!0}}class Af extends en{constructor(t,e,n,i,r,l,c,h,f,p,m,g){super(null,l,c,h,f,p,i,r,m,g),this.isCompressedTexture=!0,this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}class GT extends Af{constructor(t,e,n,i,r,l){super(t,e,n,r,l),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=Fi,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class kT extends Af{constructor(t,e,n){super(void 0,t[0].width,t[0].height,e,n,Zs),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=t}}class WT extends en{constructor(t,e,n,i,r,l,c,h,f){super(t,e,n,i,r,l,c,h,f),this.isCanvasTexture=!0,this.needsUpdate=!0}}class gg extends en{constructor(t,e,n=Ks,i,r,l,c=Ln,h=Ln,f,p=Oo,m=1){if(p!==Oo&&p!==zo)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");const g={width:t,height:e,depth:m};super(g,i,r,l,c,h,p,n,f),this.isDepthTexture=!0,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(t){return super.copy(t),this.source=new Ea(Object.assign({},t.image)),this.compareFunction=t.compareFunction,this}toJSON(t){const e=super.toJSON(t);return this.compareFunction!==null&&(e.compareFunction=this.compareFunction),e}}class wf extends Se{constructor(t=1,e=1,n=4,i=8,r=1){super(),this.type="CapsuleGeometry",this.parameters={radius:t,height:e,capSegments:n,radialSegments:i,heightSegments:r},e=Math.max(0,e),n=Math.max(1,Math.floor(n)),i=Math.max(3,Math.floor(i)),r=Math.max(1,Math.floor(r));const l=[],c=[],h=[],f=[],p=e/2,m=Math.PI/2*t,g=e,v=2*m+g,x=n*2+r,M=i+1,S=new L,_=new L;for(let E=0;E<=x;E++){let T=0,A=0,N=0,D=0;if(E<=n){const C=E/n,w=C*Math.PI/2;A=-p-t*Math.cos(w),N=t*Math.sin(w),D=-t*Math.cos(w),T=C*m}else if(E<=n+r){const C=(E-n)/r;A=-p+C*e,N=t,D=0,T=m+C*g}else{const C=(E-n-r)/n,w=C*Math.PI/2;A=p+t*Math.sin(w),N=t*Math.cos(w),D=t*Math.sin(w),T=m+g+C*m}const I=Math.max(0,Math.min(1,T/v));let z=0;E===0?z=.5/i:E===x&&(z=-.5/i);for(let C=0;C<=i;C++){const w=C/i,B=w*Math.PI*2,$=Math.sin(B),q=Math.cos(B);_.x=-N*q,_.y=A,_.z=N*$,c.push(_.x,_.y,_.z),S.set(-N*q,D,N*$),S.normalize(),h.push(S.x,S.y,S.z),f.push(w+z,I)}if(E>0){const C=(E-1)*M;for(let w=0;w<i;w++){const B=C+w,$=C+w+1,q=E*M+w,J=E*M+w+1;l.push(B,$,q),l.push($,J,q)}}}this.setIndex(l),this.setAttribute("position",new Jt(c,3)),this.setAttribute("normal",new Jt(h,3)),this.setAttribute("uv",new Jt(f,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new wf(t.radius,t.height,t.capSegments,t.radialSegments,t.heightSegments)}}class Cf extends Se{constructor(t=1,e=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:i},e=Math.max(3,e);const r=[],l=[],c=[],h=[],f=new L,p=new ft;l.push(0,0,0),c.push(0,0,1),h.push(.5,.5);for(let m=0,g=3;m<=e;m++,g+=3){const v=n+m/e*i;f.x=t*Math.cos(v),f.y=t*Math.sin(v),l.push(f.x,f.y,f.z),c.push(0,0,1),p.x=(l[g]/t+1)/2,p.y=(l[g+1]/t+1)/2,h.push(p.x,p.y)}for(let m=1;m<=e;m++)r.push(m,m+1,0);this.setIndex(r),this.setAttribute("position",new Jt(l,3)),this.setAttribute("normal",new Jt(c,3)),this.setAttribute("uv",new Jt(h,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Cf(t.radius,t.segments,t.thetaStart,t.thetaLength)}}class yc extends Se{constructor(t=1,e=1,n=1,i=32,r=1,l=!1,c=0,h=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:i,heightSegments:r,openEnded:l,thetaStart:c,thetaLength:h};const f=this;i=Math.floor(i),r=Math.floor(r);const p=[],m=[],g=[],v=[];let x=0;const M=[],S=n/2;let _=0;E(),l===!1&&(t>0&&T(!0),e>0&&T(!1)),this.setIndex(p),this.setAttribute("position",new Jt(m,3)),this.setAttribute("normal",new Jt(g,3)),this.setAttribute("uv",new Jt(v,2));function E(){const A=new L,N=new L;let D=0;const I=(e-t)/n;for(let z=0;z<=r;z++){const C=[],w=z/r,B=w*(e-t)+t;for(let $=0;$<=i;$++){const q=$/i,J=q*h+c,nt=Math.sin(J),F=Math.cos(J);N.x=B*nt,N.y=-w*n+S,N.z=B*F,m.push(N.x,N.y,N.z),A.set(nt,I,F).normalize(),g.push(A.x,A.y,A.z),v.push(q,1-w),C.push(x++)}M.push(C)}for(let z=0;z<i;z++)for(let C=0;C<r;C++){const w=M[C][z],B=M[C+1][z],$=M[C+1][z+1],q=M[C][z+1];(t>0||C!==0)&&(p.push(w,B,q),D+=3),(e>0||C!==r-1)&&(p.push(B,$,q),D+=3)}f.addGroup(_,D,0),_+=D}function T(A){const N=x,D=new ft,I=new L;let z=0;const C=A===!0?t:e,w=A===!0?1:-1;for(let $=1;$<=i;$++)m.push(0,S*w,0),g.push(0,w,0),v.push(.5,.5),x++;const B=x;for(let $=0;$<=i;$++){const J=$/i*h+c,nt=Math.cos(J),F=Math.sin(J);I.x=C*F,I.y=S*w,I.z=C*nt,m.push(I.x,I.y,I.z),g.push(0,w,0),D.x=nt*.5+.5,D.y=F*.5*w+.5,v.push(D.x,D.y),x++}for(let $=0;$<i;$++){const q=N+$,J=B+$;A===!0?p.push(J,J+1,q):p.push(J+1,J,q),z+=3}f.addGroup(_,z,A===!0?1:2),_+=z}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new yc(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class xc extends yc{constructor(t=1,e=1,n=32,i=1,r=!1,l=0,c=Math.PI*2){super(0,t,e,n,i,r,l,c),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:l,thetaLength:c}}static fromJSON(t){return new xc(t.radius,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class Pa extends Se{constructor(t=[],e=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:i};const r=[],l=[];c(i),f(n),p(),this.setAttribute("position",new Jt(r,3)),this.setAttribute("normal",new Jt(r.slice(),3)),this.setAttribute("uv",new Jt(l,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function c(E){const T=new L,A=new L,N=new L;for(let D=0;D<e.length;D+=3)v(e[D+0],T),v(e[D+1],A),v(e[D+2],N),h(T,A,N,E)}function h(E,T,A,N){const D=N+1,I=[];for(let z=0;z<=D;z++){I[z]=[];const C=E.clone().lerp(A,z/D),w=T.clone().lerp(A,z/D),B=D-z;for(let $=0;$<=B;$++)$===0&&z===D?I[z][$]=C:I[z][$]=C.clone().lerp(w,$/B)}for(let z=0;z<D;z++)for(let C=0;C<2*(D-z)-1;C++){const w=Math.floor(C/2);C%2===0?(g(I[z][w+1]),g(I[z+1][w]),g(I[z][w])):(g(I[z][w+1]),g(I[z+1][w+1]),g(I[z+1][w]))}}function f(E){const T=new L;for(let A=0;A<r.length;A+=3)T.x=r[A+0],T.y=r[A+1],T.z=r[A+2],T.normalize().multiplyScalar(E),r[A+0]=T.x,r[A+1]=T.y,r[A+2]=T.z}function p(){const E=new L;for(let T=0;T<r.length;T+=3){E.x=r[T+0],E.y=r[T+1],E.z=r[T+2];const A=S(E)/2/Math.PI+.5,N=_(E)/Math.PI+.5;l.push(A,1-N)}x(),m()}function m(){for(let E=0;E<l.length;E+=6){const T=l[E+0],A=l[E+2],N=l[E+4],D=Math.max(T,A,N),I=Math.min(T,A,N);D>.9&&I<.1&&(T<.2&&(l[E+0]+=1),A<.2&&(l[E+2]+=1),N<.2&&(l[E+4]+=1))}}function g(E){r.push(E.x,E.y,E.z)}function v(E,T){const A=E*3;T.x=t[A+0],T.y=t[A+1],T.z=t[A+2]}function x(){const E=new L,T=new L,A=new L,N=new L,D=new ft,I=new ft,z=new ft;for(let C=0,w=0;C<r.length;C+=9,w+=6){E.set(r[C+0],r[C+1],r[C+2]),T.set(r[C+3],r[C+4],r[C+5]),A.set(r[C+6],r[C+7],r[C+8]),D.set(l[w+0],l[w+1]),I.set(l[w+2],l[w+3]),z.set(l[w+4],l[w+5]),N.copy(E).add(T).add(A).divideScalar(3);const B=S(N);M(D,w+0,E,B),M(I,w+2,T,B),M(z,w+4,A,B)}}function M(E,T,A,N){N<0&&E.x===1&&(l[T]=E.x-1),A.x===0&&A.z===0&&(l[T]=N/2/Math.PI+.5)}function S(E){return Math.atan2(E.z,-E.x)}function _(E){return Math.atan2(-E.y,Math.sqrt(E.x*E.x+E.z*E.z))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Pa(t.vertices,t.indices,t.radius,t.details)}}class Rf extends Pa{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,i=1/n,r=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],l=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(r,l,t,e),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Rf(t.radius,t.detail)}}const Vu=new L,Gu=new L,Vp=new L,ku=new ci;class xS extends Se{constructor(t=null,e=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:t,thresholdAngle:e},t!==null){const i=Math.pow(10,4),r=Math.cos(xr*e),l=t.getIndex(),c=t.getAttribute("position"),h=l?l.count:c.count,f=[0,0,0],p=["a","b","c"],m=new Array(3),g={},v=[];for(let x=0;x<h;x+=3){l?(f[0]=l.getX(x),f[1]=l.getX(x+1),f[2]=l.getX(x+2)):(f[0]=x,f[1]=x+1,f[2]=x+2);const{a:M,b:S,c:_}=ku;if(M.fromBufferAttribute(c,f[0]),S.fromBufferAttribute(c,f[1]),_.fromBufferAttribute(c,f[2]),ku.getNormal(Vp),m[0]=`${Math.round(M.x*i)},${Math.round(M.y*i)},${Math.round(M.z*i)}`,m[1]=`${Math.round(S.x*i)},${Math.round(S.y*i)},${Math.round(S.z*i)}`,m[2]=`${Math.round(_.x*i)},${Math.round(_.y*i)},${Math.round(_.z*i)}`,!(m[0]===m[1]||m[1]===m[2]||m[2]===m[0]))for(let E=0;E<3;E++){const T=(E+1)%3,A=m[E],N=m[T],D=ku[p[E]],I=ku[p[T]],z=`${A}_${N}`,C=`${N}_${A}`;C in g&&g[C]?(Vp.dot(g[C].normal)<=r&&(v.push(D.x,D.y,D.z),v.push(I.x,I.y,I.z)),g[C]=null):z in g||(g[z]={index0:f[E],index1:f[T],normal:Vp.clone()})}}for(const x in g)if(g[x]){const{index0:M,index1:S}=g[x];Vu.fromBufferAttribute(c,M),Gu.fromBufferAttribute(c,S),v.push(Vu.x,Vu.y,Vu.z),v.push(Gu.x,Gu.y,Gu.z)}this.setAttribute("position",new Jt(v,3))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}}class ns{constructor(){this.type="Curve",this.arcLengthDivisions=200,this.needsUpdate=!1,this.cacheArcLengths=null}getPoint(){console.warn("THREE.Curve: .getPoint() not implemented.")}getPointAt(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,i=this.getPoint(0),r=0;e.push(0);for(let l=1;l<=t;l++)n=this.getPoint(l/t),r+=n.distanceTo(i),e.push(r),i=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e=null){const n=this.getLengths();let i=0;const r=n.length;let l;e?l=e:l=t*n[r-1];let c=0,h=r-1,f;for(;c<=h;)if(i=Math.floor(c+(h-c)/2),f=n[i]-l,f<0)c=i+1;else if(f>0)h=i-1;else{h=i;break}if(i=h,n[i]===l)return i/(r-1);const p=n[i],g=n[i+1]-p,v=(l-p)/g;return(i+v)/(r-1)}getTangent(t,e){let i=t-1e-4,r=t+1e-4;i<0&&(i=0),r>1&&(r=1);const l=this.getPoint(i),c=this.getPoint(r),h=e||(l.isVector2?new ft:new L);return h.copy(c).sub(l).normalize(),h}getTangentAt(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)}computeFrenetFrames(t,e=!1){const n=new L,i=[],r=[],l=[],c=new L,h=new he;for(let v=0;v<=t;v++){const x=v/t;i[v]=this.getTangentAt(x,new L)}r[0]=new L,l[0]=new L;let f=Number.MAX_VALUE;const p=Math.abs(i[0].x),m=Math.abs(i[0].y),g=Math.abs(i[0].z);p<=f&&(f=p,n.set(1,0,0)),m<=f&&(f=m,n.set(0,1,0)),g<=f&&n.set(0,0,1),c.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],c),l[0].crossVectors(i[0],r[0]);for(let v=1;v<=t;v++){if(r[v]=r[v-1].clone(),l[v]=l[v-1].clone(),c.crossVectors(i[v-1],i[v]),c.length()>Number.EPSILON){c.normalize();const x=Math.acos(ve(i[v-1].dot(i[v]),-1,1));r[v].applyMatrix4(h.makeRotationAxis(c,x))}l[v].crossVectors(i[v],r[v])}if(e===!0){let v=Math.acos(ve(r[0].dot(r[t]),-1,1));v/=t,i[0].dot(c.crossVectors(r[0],r[t]))>0&&(v=-v);for(let x=1;x<=t;x++)r[x].applyMatrix4(h.makeRotationAxis(i[x],v*x)),l[x].crossVectors(i[x],r[x])}return{tangents:i,normals:r,binormals:l}}clone(){return new this.constructor().copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.7,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class Df extends ns{constructor(t=0,e=0,n=1,i=1,r=0,l=Math.PI*2,c=!1,h=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=l,this.aClockwise=c,this.aRotation=h}getPoint(t,e=new ft){const n=e,i=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const l=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(l?r=0:r=i),this.aClockwise===!0&&!l&&(r===i?r=-i:r=r-i);const c=this.aStartAngle+t*r;let h=this.aX+this.xRadius*Math.cos(c),f=this.aY+this.yRadius*Math.sin(c);if(this.aRotation!==0){const p=Math.cos(this.aRotation),m=Math.sin(this.aRotation),g=h-this.aX,v=f-this.aY;h=g*p-v*m+this.aX,f=g*m+v*p+this.aY}return n.set(h,f)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}class SS extends Df{constructor(t,e,n,i,r,l){super(t,e,n,n,i,r,l),this.isArcCurve=!0,this.type="ArcCurve"}}function vg(){let s=0,t=0,e=0,n=0;function i(r,l,c,h){s=r,t=c,e=-3*r+3*l-2*c-h,n=2*r-2*l+c+h}return{initCatmullRom:function(r,l,c,h,f){i(l,c,f*(c-r),f*(h-l))},initNonuniformCatmullRom:function(r,l,c,h,f,p,m){let g=(l-r)/f-(c-r)/(f+p)+(c-l)/p,v=(c-l)/p-(h-l)/(p+m)+(h-c)/m;g*=p,v*=p,i(l,c,g,v)},calc:function(r){const l=r*r,c=l*r;return s+t*r+e*l+n*c}}}const Wu=new L,Gp=new vg,kp=new vg,Wp=new vg;class _g extends ns{constructor(t=[],e=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=i}getPoint(t,e=new L){const n=e,i=this.points,r=i.length,l=(r-(this.closed?0:1))*t;let c=Math.floor(l),h=l-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/r)+1)*r:h===0&&c===r-1&&(c=r-2,h=1);let f,p;this.closed||c>0?f=i[(c-1)%r]:(Wu.subVectors(i[0],i[1]).add(i[0]),f=Wu);const m=i[c%r],g=i[(c+1)%r];if(this.closed||c+2<r?p=i[(c+2)%r]:(Wu.subVectors(i[r-1],i[r-2]).add(i[r-1]),p=Wu),this.curveType==="centripetal"||this.curveType==="chordal"){const v=this.curveType==="chordal"?.5:.25;let x=Math.pow(f.distanceToSquared(m),v),M=Math.pow(m.distanceToSquared(g),v),S=Math.pow(g.distanceToSquared(p),v);M<1e-4&&(M=1),x<1e-4&&(x=M),S<1e-4&&(S=M),Gp.initNonuniformCatmullRom(f.x,m.x,g.x,p.x,x,M,S),kp.initNonuniformCatmullRom(f.y,m.y,g.y,p.y,x,M,S),Wp.initNonuniformCatmullRom(f.z,m.z,g.z,p.z,x,M,S)}else this.curveType==="catmullrom"&&(Gp.initCatmullRom(f.x,m.x,g.x,p.x,this.tension),kp.initCatmullRom(f.y,m.y,g.y,p.y,this.tension),Wp.initCatmullRom(f.z,m.z,g.z,p.z,this.tension));return n.set(Gp.calc(h),kp.calc(h),Wp.calc(h)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new L().fromArray(i))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function F_(s,t,e,n,i){const r=(n-t)*.5,l=(i-e)*.5,c=s*s,h=s*c;return(2*e-2*n+r+l)*h+(-3*e+3*n-2*r-l)*c+r*s+e}function XT(s,t){const e=1-s;return e*e*t}function qT(s,t){return 2*(1-s)*s*t}function YT(s,t){return s*s*t}function Zl(s,t,e,n){return XT(s,t)+qT(s,e)+YT(s,n)}function jT(s,t){const e=1-s;return e*e*e*t}function ZT(s,t){const e=1-s;return 3*e*e*s*t}function KT(s,t){return 3*(1-s)*s*s*t}function JT(s,t){return s*s*s*t}function Kl(s,t,e,n,i){return jT(s,t)+ZT(s,e)+KT(s,n)+JT(s,i)}class yg extends ns{constructor(t=new ft,e=new ft,n=new ft,i=new ft){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new ft){const n=e,i=this.v0,r=this.v1,l=this.v2,c=this.v3;return n.set(Kl(t,i.x,r.x,l.x,c.x),Kl(t,i.y,r.y,l.y,c.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class MS extends ns{constructor(t=new L,e=new L,n=new L,i=new L){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new L){const n=e,i=this.v0,r=this.v1,l=this.v2,c=this.v3;return n.set(Kl(t,i.x,r.x,l.x,c.x),Kl(t,i.y,r.y,l.y,c.y),Kl(t,i.z,r.z,l.z,c.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class xg extends ns{constructor(t=new ft,e=new ft){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new ft){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new ft){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class bS extends ns{constructor(t=new L,e=new L){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=t,this.v2=e}getPoint(t,e=new L){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new L){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Sg extends ns{constructor(t=new ft,e=new ft,n=new ft){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new ft){const n=e,i=this.v0,r=this.v1,l=this.v2;return n.set(Zl(t,i.x,r.x,l.x),Zl(t,i.y,r.y,l.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Mg extends ns{constructor(t=new L,e=new L,n=new L){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new L){const n=e,i=this.v0,r=this.v1,l=this.v2;return n.set(Zl(t,i.x,r.x,l.x),Zl(t,i.y,r.y,l.y),Zl(t,i.z,r.z,l.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class bg extends ns{constructor(t=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=t}getPoint(t,e=new ft){const n=e,i=this.points,r=(i.length-1)*t,l=Math.floor(r),c=r-l,h=i[l===0?l:l-1],f=i[l],p=i[l>i.length-2?i.length-1:l+1],m=i[l>i.length-3?i.length-1:l+2];return n.set(F_(c,h.x,f.x,p.x,m.x),F_(c,h.y,f.y,p.y,m.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new ft().fromArray(i))}return this}}var tf=Object.freeze({__proto__:null,ArcCurve:SS,CatmullRomCurve3:_g,CubicBezierCurve:yg,CubicBezierCurve3:MS,EllipseCurve:Df,LineCurve:xg,LineCurve3:bS,QuadraticBezierCurve:Sg,QuadraticBezierCurve3:Mg,SplineCurve:bg});class ES extends ns{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);if(!t.equals(e)){const n=t.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new tf[n](e,t))}return this}getPoint(t,e){const n=t*this.getLength(),i=this.getCurveLengths();let r=0;for(;r<i.length;){if(i[r]>=n){const l=i[r]-n,c=this.curves[r],h=c.getLength(),f=h===0?0:1-l/h;return c.getPointAt(f,e)}r++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,i=this.curves.length;n<i;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const l=r[i],c=l.isEllipseCurve?t*2:l.isLineCurve||l.isLineCurve3?1:l.isSplineCurve?t*l.points.length:t,h=l.getPoints(c);for(let f=0;f<h.length;f++){const p=h[f];n&&n.equals(p)||(e.push(p),n=p)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(i.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const i=this.curves[e];t.curves.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(new tf[i.type]().fromJSON(i))}return this}}class ef extends ES{constructor(t){super(),this.type="Path",this.currentPoint=new ft,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new xg(this.currentPoint.clone(),new ft(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,i){const r=new Sg(this.currentPoint.clone(),new ft(t,e),new ft(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this}bezierCurveTo(t,e,n,i,r,l){const c=new yg(this.currentPoint.clone(),new ft(t,e),new ft(n,i),new ft(r,l));return this.curves.push(c),this.currentPoint.set(r,l),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new bg(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,i,r,l){const c=this.currentPoint.x,h=this.currentPoint.y;return this.absarc(t+c,e+h,n,i,r,l),this}absarc(t,e,n,i,r,l){return this.absellipse(t,e,n,n,i,r,l),this}ellipse(t,e,n,i,r,l,c,h){const f=this.currentPoint.x,p=this.currentPoint.y;return this.absellipse(t+f,e+p,n,i,r,l,c,h),this}absellipse(t,e,n,i,r,l,c,h){const f=new Df(t,e,n,i,r,l,c,h);if(this.curves.length>0){const m=f.getPoint(0);m.equals(this.currentPoint)||this.lineTo(m.x,m.y)}this.curves.push(f);const p=f.getPoint(1);return this.currentPoint.copy(p),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class Sr extends ef{constructor(t){super(t),this.uuid=Ti(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,i=this.holes.length;n<i;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const i=this.holes[e];t.holes.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(new ef().fromJSON(i))}return this}}function QT(s,t,e=2){const n=t&&t.length,i=n?t[0]*e:s.length;let r=TS(s,0,i,e,!0);const l=[];if(!r||r.next===r.prev)return l;let c,h,f;if(n&&(r=iA(s,t,r,e)),s.length>80*e){c=1/0,h=1/0;let p=-1/0,m=-1/0;for(let g=e;g<i;g+=e){const v=s[g],x=s[g+1];v<c&&(c=v),x<h&&(h=x),v>p&&(p=v),x>m&&(m=x)}f=Math.max(p-c,m-h),f=f!==0?32767/f:0}return lc(r,l,e,c,h,f,0),l}function TS(s,t,e,n,i){let r;if(i===pA(s,t,e,n)>0)for(let l=t;l<e;l+=n)r=H_(l/n|0,s[l],s[l+1],r);else for(let l=e-n;l>=t;l-=n)r=H_(l/n|0,s[l],s[l+1],r);return r&&Go(r,r.next)&&(uc(r),r=r.next),r}function Er(s,t){if(!s)return s;t||(t=s);let e=s,n;do if(n=!1,!e.steiner&&(Go(e,e.next)||an(e.prev,e,e.next)===0)){if(uc(e),e=t=e.prev,e===e.next)break;n=!0}else e=e.next;while(n||e!==t);return t}function lc(s,t,e,n,i,r,l){if(!s)return;!l&&r&&lA(s,n,i,r);let c=s;for(;s.prev!==s.next;){const h=s.prev,f=s.next;if(r?tA(s,n,i,r):$T(s)){t.push(h.i,s.i,f.i),uc(s),s=f.next,c=f.next;continue}if(s=f,s===c){l?l===1?(s=eA(Er(s),t),lc(s,t,e,n,i,r,2)):l===2&&nA(s,t,e,n,i,r):lc(Er(s),t,e,n,i,r,1);break}}}function $T(s){const t=s.prev,e=s,n=s.next;if(an(t,e,n)>=0)return!1;const i=t.x,r=e.x,l=n.x,c=t.y,h=e.y,f=n.y,p=Math.min(i,r,l),m=Math.min(c,h,f),g=Math.max(i,r,l),v=Math.max(c,h,f);let x=n.next;for(;x!==t;){if(x.x>=p&&x.x<=g&&x.y>=m&&x.y<=v&&Fl(i,c,r,h,l,f,x.x,x.y)&&an(x.prev,x,x.next)>=0)return!1;x=x.next}return!0}function tA(s,t,e,n){const i=s.prev,r=s,l=s.next;if(an(i,r,l)>=0)return!1;const c=i.x,h=r.x,f=l.x,p=i.y,m=r.y,g=l.y,v=Math.min(c,h,f),x=Math.min(p,m,g),M=Math.max(c,h,f),S=Math.max(p,m,g),_=Lm(v,x,t,e,n),E=Lm(M,S,t,e,n);let T=s.prevZ,A=s.nextZ;for(;T&&T.z>=_&&A&&A.z<=E;){if(T.x>=v&&T.x<=M&&T.y>=x&&T.y<=S&&T!==i&&T!==l&&Fl(c,p,h,m,f,g,T.x,T.y)&&an(T.prev,T,T.next)>=0||(T=T.prevZ,A.x>=v&&A.x<=M&&A.y>=x&&A.y<=S&&A!==i&&A!==l&&Fl(c,p,h,m,f,g,A.x,A.y)&&an(A.prev,A,A.next)>=0))return!1;A=A.nextZ}for(;T&&T.z>=_;){if(T.x>=v&&T.x<=M&&T.y>=x&&T.y<=S&&T!==i&&T!==l&&Fl(c,p,h,m,f,g,T.x,T.y)&&an(T.prev,T,T.next)>=0)return!1;T=T.prevZ}for(;A&&A.z<=E;){if(A.x>=v&&A.x<=M&&A.y>=x&&A.y<=S&&A!==i&&A!==l&&Fl(c,p,h,m,f,g,A.x,A.y)&&an(A.prev,A,A.next)>=0)return!1;A=A.nextZ}return!0}function eA(s,t){let e=s;do{const n=e.prev,i=e.next.next;!Go(n,i)&&wS(n,e,e.next,i)&&cc(n,i)&&cc(i,n)&&(t.push(n.i,e.i,i.i),uc(e),uc(e.next),e=s=i),e=e.next}while(e!==s);return Er(e)}function nA(s,t,e,n,i,r){let l=s;do{let c=l.next.next;for(;c!==l.prev;){if(l.i!==c.i&&hA(l,c)){let h=CS(l,c);l=Er(l,l.next),h=Er(h,h.next),lc(l,t,e,n,i,r,0),lc(h,t,e,n,i,r,0);return}c=c.next}l=l.next}while(l!==s)}function iA(s,t,e,n){const i=[];for(let r=0,l=t.length;r<l;r++){const c=t[r]*n,h=r<l-1?t[r+1]*n:s.length,f=TS(s,c,h,n,!1);f===f.next&&(f.steiner=!0),i.push(uA(f))}i.sort(sA);for(let r=0;r<i.length;r++)e=aA(i[r],e);return e}function sA(s,t){let e=s.x-t.x;if(e===0&&(e=s.y-t.y,e===0)){const n=(s.next.y-s.y)/(s.next.x-s.x),i=(t.next.y-t.y)/(t.next.x-t.x);e=n-i}return e}function aA(s,t){const e=rA(s,t);if(!e)return t;const n=CS(e,s);return Er(n,n.next),Er(e,e.next)}function rA(s,t){let e=t;const n=s.x,i=s.y;let r=-1/0,l;if(Go(s,e))return e;do{if(Go(s,e.next))return e.next;if(i<=e.y&&i>=e.next.y&&e.next.y!==e.y){const m=e.x+(i-e.y)*(e.next.x-e.x)/(e.next.y-e.y);if(m<=n&&m>r&&(r=m,l=e.x<e.next.x?e:e.next,m===n))return l}e=e.next}while(e!==t);if(!l)return null;const c=l,h=l.x,f=l.y;let p=1/0;e=l;do{if(n>=e.x&&e.x>=h&&n!==e.x&&AS(i<f?n:r,i,h,f,i<f?r:n,i,e.x,e.y)){const m=Math.abs(i-e.y)/(n-e.x);cc(e,s)&&(m<p||m===p&&(e.x>l.x||e.x===l.x&&oA(l,e)))&&(l=e,p=m)}e=e.next}while(e!==c);return l}function oA(s,t){return an(s.prev,s,t.prev)<0&&an(t.next,s,s.next)<0}function lA(s,t,e,n){let i=s;do i.z===0&&(i.z=Lm(i.x,i.y,t,e,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==s);i.prevZ.nextZ=null,i.prevZ=null,cA(i)}function cA(s){let t,e=1;do{let n=s,i;s=null;let r=null;for(t=0;n;){t++;let l=n,c=0;for(let f=0;f<e&&(c++,l=l.nextZ,!!l);f++);let h=e;for(;c>0||h>0&&l;)c!==0&&(h===0||!l||n.z<=l.z)?(i=n,n=n.nextZ,c--):(i=l,l=l.nextZ,h--),r?r.nextZ=i:s=i,i.prevZ=r,r=i;n=l}r.nextZ=null,e*=2}while(t>1);return s}function Lm(s,t,e,n,i){return s=(s-e)*i|0,t=(t-n)*i|0,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,s|t<<1}function uA(s){let t=s,e=s;do(t.x<e.x||t.x===e.x&&t.y<e.y)&&(e=t),t=t.next;while(t!==s);return e}function AS(s,t,e,n,i,r,l,c){return(i-l)*(t-c)>=(s-l)*(r-c)&&(s-l)*(n-c)>=(e-l)*(t-c)&&(e-l)*(r-c)>=(i-l)*(n-c)}function Fl(s,t,e,n,i,r,l,c){return!(s===l&&t===c)&&AS(s,t,e,n,i,r,l,c)}function hA(s,t){return s.next.i!==t.i&&s.prev.i!==t.i&&!fA(s,t)&&(cc(s,t)&&cc(t,s)&&dA(s,t)&&(an(s.prev,s,t.prev)||an(s,t.prev,t))||Go(s,t)&&an(s.prev,s,s.next)>0&&an(t.prev,t,t.next)>0)}function an(s,t,e){return(t.y-s.y)*(e.x-t.x)-(t.x-s.x)*(e.y-t.y)}function Go(s,t){return s.x===t.x&&s.y===t.y}function wS(s,t,e,n){const i=qu(an(s,t,e)),r=qu(an(s,t,n)),l=qu(an(e,n,s)),c=qu(an(e,n,t));return!!(i!==r&&l!==c||i===0&&Xu(s,e,t)||r===0&&Xu(s,n,t)||l===0&&Xu(e,s,n)||c===0&&Xu(e,t,n))}function Xu(s,t,e){return t.x<=Math.max(s.x,e.x)&&t.x>=Math.min(s.x,e.x)&&t.y<=Math.max(s.y,e.y)&&t.y>=Math.min(s.y,e.y)}function qu(s){return s>0?1:s<0?-1:0}function fA(s,t){let e=s;do{if(e.i!==s.i&&e.next.i!==s.i&&e.i!==t.i&&e.next.i!==t.i&&wS(e,e.next,s,t))return!0;e=e.next}while(e!==s);return!1}function cc(s,t){return an(s.prev,s,s.next)<0?an(s,t,s.next)>=0&&an(s,s.prev,t)>=0:an(s,t,s.prev)<0||an(s,s.next,t)<0}function dA(s,t){let e=s,n=!1;const i=(s.x+t.x)/2,r=(s.y+t.y)/2;do e.y>r!=e.next.y>r&&e.next.y!==e.y&&i<(e.next.x-e.x)*(r-e.y)/(e.next.y-e.y)+e.x&&(n=!n),e=e.next;while(e!==s);return n}function CS(s,t){const e=Im(s.i,s.x,s.y),n=Im(t.i,t.x,t.y),i=s.next,r=t.prev;return s.next=t,t.prev=s,e.next=i,i.prev=e,n.next=e,e.prev=n,r.next=n,n.prev=r,n}function H_(s,t,e,n){const i=Im(s,t,e);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function uc(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function Im(s,t,e){return{i:s,x:t,y:e,prev:null,next:null,z:0,prevZ:null,nextZ:null,steiner:!1}}function pA(s,t,e,n){let i=0;for(let r=t,l=e-n;r<e;r+=n)i+=(s[l]-s[r])*(s[r+1]+s[l+1]),l=r;return i}class mA{static triangulate(t,e,n=2){return QT(t,e,n)}}class es{static area(t){const e=t.length;let n=0;for(let i=e-1,r=0;r<e;i=r++)n+=t[i].x*t[r].y-t[r].x*t[i].y;return n*.5}static isClockWise(t){return es.area(t)<0}static triangulateShape(t,e){const n=[],i=[],r=[];V_(t),G_(n,t);let l=t.length;e.forEach(V_);for(let h=0;h<e.length;h++)i.push(l),l+=e[h].length,G_(n,e[h]);const c=mA.triangulate(n,i);for(let h=0;h<c.length;h+=3)r.push(c.slice(h,h+3));return r}}function V_(s){const t=s.length;t>2&&s[t-1].equals(s[0])&&s.pop()}function G_(s,t){for(let e=0;e<t.length;e++)s.push(t[e].x),s.push(t[e].y)}class Uf extends Se{constructor(t=new Sr([new ft(.5,.5),new ft(-.5,.5),new ft(-.5,-.5),new ft(.5,-.5)]),e={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,i=[],r=[];for(let c=0,h=t.length;c<h;c++){const f=t[c];l(f)}this.setAttribute("position",new Jt(i,3)),this.setAttribute("uv",new Jt(r,2)),this.computeVertexNormals();function l(c){const h=[],f=e.curveSegments!==void 0?e.curveSegments:12,p=e.steps!==void 0?e.steps:1,m=e.depth!==void 0?e.depth:1;let g=e.bevelEnabled!==void 0?e.bevelEnabled:!0,v=e.bevelThickness!==void 0?e.bevelThickness:.2,x=e.bevelSize!==void 0?e.bevelSize:v-.1,M=e.bevelOffset!==void 0?e.bevelOffset:0,S=e.bevelSegments!==void 0?e.bevelSegments:3;const _=e.extrudePath,E=e.UVGenerator!==void 0?e.UVGenerator:gA;let T,A=!1,N,D,I,z;_&&(T=_.getSpacedPoints(p),A=!0,g=!1,N=_.computeFrenetFrames(p,!1),D=new L,I=new L,z=new L),g||(S=0,v=0,x=0,M=0);const C=c.extractPoints(f);let w=C.shape;const B=C.holes;if(!es.isClockWise(w)){w=w.reverse();for(let O=0,Ct=B.length;O<Ct;O++){const Mt=B[O];es.isClockWise(Mt)&&(B[O]=Mt.reverse())}}function q(O){const Mt=10000000000000001e-36;let bt=O[0];for(let ht=1;ht<=O.length;ht++){const Ot=ht%O.length,St=O[Ot],Ft=St.x-bt.x,ue=St.y-bt.y,H=Ft*Ft+ue*ue,R=Math.max(Math.abs(St.x),Math.abs(St.y),Math.abs(bt.x),Math.abs(bt.y)),Q=Mt*R*R;if(H<=Q){O.splice(Ot,1),ht--;continue}bt=St}}q(w),B.forEach(q);const J=B.length,nt=w;for(let O=0;O<J;O++){const Ct=B[O];w=w.concat(Ct)}function F(O,Ct,Mt){return Ct||console.error("THREE.ExtrudeGeometry: vec does not exist"),O.clone().addScaledVector(Ct,Mt)}const X=w.length;function G(O,Ct,Mt){let bt,ht,Ot;const St=O.x-Ct.x,Ft=O.y-Ct.y,ue=Mt.x-O.x,H=Mt.y-O.y,R=St*St+Ft*Ft,Q=St*H-Ft*ue;if(Math.abs(Q)>Number.EPSILON){const lt=Math.sqrt(R),pt=Math.sqrt(ue*ue+H*H),ut=Ct.x-Ft/lt,te=Ct.y+St/lt,Lt=Mt.x-H/pt,Kt=Mt.y+ue/pt,Qt=((Lt-ut)*H-(Kt-te)*ue)/(St*H-Ft*ue);bt=ut+St*Qt-O.x,ht=te+Ft*Qt-O.y;const vt=bt*bt+ht*ht;if(vt<=2)return new ft(bt,ht);Ot=Math.sqrt(vt/2)}else{let lt=!1;St>Number.EPSILON?ue>Number.EPSILON&&(lt=!0):St<-Number.EPSILON?ue<-Number.EPSILON&&(lt=!0):Math.sign(Ft)===Math.sign(H)&&(lt=!0),lt?(bt=-Ft,ht=St,Ot=Math.sqrt(R)):(bt=St,ht=Ft,Ot=Math.sqrt(R/2))}return new ft(bt/Ot,ht/Ot)}const st=[];for(let O=0,Ct=nt.length,Mt=Ct-1,bt=O+1;O<Ct;O++,Mt++,bt++)Mt===Ct&&(Mt=0),bt===Ct&&(bt=0),st[O]=G(nt[O],nt[Mt],nt[bt]);const ct=[];let _t,Dt=st.concat();for(let O=0,Ct=J;O<Ct;O++){const Mt=B[O];_t=[];for(let bt=0,ht=Mt.length,Ot=ht-1,St=bt+1;bt<ht;bt++,Ot++,St++)Ot===ht&&(Ot=0),St===ht&&(St=0),_t[bt]=G(Mt[bt],Mt[Ot],Mt[St]);ct.push(_t),Dt=Dt.concat(_t)}let Xt;if(S===0)Xt=es.triangulateShape(nt,B);else{const O=[],Ct=[];for(let Mt=0;Mt<S;Mt++){const bt=Mt/S,ht=v*Math.cos(bt*Math.PI/2),Ot=x*Math.sin(bt*Math.PI/2)+M;for(let St=0,Ft=nt.length;St<Ft;St++){const ue=F(nt[St],st[St],Ot);fe(ue.x,ue.y,-ht),bt===0&&O.push(ue)}for(let St=0,Ft=J;St<Ft;St++){const ue=B[St];_t=ct[St];const H=[];for(let R=0,Q=ue.length;R<Q;R++){const lt=F(ue[R],_t[R],Ot);fe(lt.x,lt.y,-ht),bt===0&&H.push(lt)}bt===0&&Ct.push(H)}}Xt=es.triangulateShape(O,Ct)}const tt=Xt.length,yt=x+M;for(let O=0;O<X;O++){const Ct=g?F(w[O],Dt[O],yt):w[O];A?(I.copy(N.normals[0]).multiplyScalar(Ct.x),D.copy(N.binormals[0]).multiplyScalar(Ct.y),z.copy(T[0]).add(I).add(D),fe(z.x,z.y,z.z)):fe(Ct.x,Ct.y,0)}for(let O=1;O<=p;O++)for(let Ct=0;Ct<X;Ct++){const Mt=g?F(w[Ct],Dt[Ct],yt):w[Ct];A?(I.copy(N.normals[O]).multiplyScalar(Mt.x),D.copy(N.binormals[O]).multiplyScalar(Mt.y),z.copy(T[O]).add(I).add(D),fe(z.x,z.y,z.z)):fe(Mt.x,Mt.y,m/p*O)}for(let O=S-1;O>=0;O--){const Ct=O/S,Mt=v*Math.cos(Ct*Math.PI/2),bt=x*Math.sin(Ct*Math.PI/2)+M;for(let ht=0,Ot=nt.length;ht<Ot;ht++){const St=F(nt[ht],st[ht],bt);fe(St.x,St.y,m+Mt)}for(let ht=0,Ot=B.length;ht<Ot;ht++){const St=B[ht];_t=ct[ht];for(let Ft=0,ue=St.length;Ft<ue;Ft++){const H=F(St[Ft],_t[Ft],bt);A?fe(H.x,H.y+T[p-1].y,T[p-1].x+Mt):fe(H.x,H.y,m+Mt)}}}Yt(),Nt();function Yt(){const O=i.length/3;if(g){let Ct=0,Mt=X*Ct;for(let bt=0;bt<tt;bt++){const ht=Xt[bt];qt(ht[2]+Mt,ht[1]+Mt,ht[0]+Mt)}Ct=p+S*2,Mt=X*Ct;for(let bt=0;bt<tt;bt++){const ht=Xt[bt];qt(ht[0]+Mt,ht[1]+Mt,ht[2]+Mt)}}else{for(let Ct=0;Ct<tt;Ct++){const Mt=Xt[Ct];qt(Mt[2],Mt[1],Mt[0])}for(let Ct=0;Ct<tt;Ct++){const Mt=Xt[Ct];qt(Mt[0]+X*p,Mt[1]+X*p,Mt[2]+X*p)}}n.addGroup(O,i.length/3-O,0)}function Nt(){const O=i.length/3;let Ct=0;Vt(nt,Ct),Ct+=nt.length;for(let Mt=0,bt=B.length;Mt<bt;Mt++){const ht=B[Mt];Vt(ht,Ct),Ct+=ht.length}n.addGroup(O,i.length/3-O,1)}function Vt(O,Ct){let Mt=O.length;for(;--Mt>=0;){const bt=Mt;let ht=Mt-1;ht<0&&(ht=O.length-1);for(let Ot=0,St=p+S*2;Ot<St;Ot++){const Ft=X*Ot,ue=X*(Ot+1),H=Ct+bt+Ft,R=Ct+ht+Ft,Q=Ct+ht+ue,lt=Ct+bt+ue;ne(H,R,Q,lt)}}}function fe(O,Ct,Mt){h.push(O),h.push(Ct),h.push(Mt)}function qt(O,Ct,Mt){ce(O),ce(Ct),ce(Mt);const bt=i.length/3,ht=E.generateTopUV(n,i,bt-3,bt-2,bt-1);ee(ht[0]),ee(ht[1]),ee(ht[2])}function ne(O,Ct,Mt,bt){ce(O),ce(Ct),ce(bt),ce(Ct),ce(Mt),ce(bt);const ht=i.length/3,Ot=E.generateSideWallUV(n,i,ht-6,ht-3,ht-2,ht-1);ee(Ot[0]),ee(Ot[1]),ee(Ot[3]),ee(Ot[1]),ee(Ot[2]),ee(Ot[3])}function ce(O){i.push(h[O*3+0]),i.push(h[O*3+1]),i.push(h[O*3+2])}function ee(O){r.push(O.x),r.push(O.y)}}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON(),e=this.parameters.shapes,n=this.parameters.options;return vA(e,n,t)}static fromJSON(t,e){const n=[];for(let r=0,l=t.shapes.length;r<l;r++){const c=e[t.shapes[r]];n.push(c)}const i=t.options.extrudePath;return i!==void 0&&(t.options.extrudePath=new tf[i.type]().fromJSON(i)),new Uf(n,t.options)}}const gA={generateTopUV:function(s,t,e,n,i){const r=t[e*3],l=t[e*3+1],c=t[n*3],h=t[n*3+1],f=t[i*3],p=t[i*3+1];return[new ft(r,l),new ft(c,h),new ft(f,p)]},generateSideWallUV:function(s,t,e,n,i,r){const l=t[e*3],c=t[e*3+1],h=t[e*3+2],f=t[n*3],p=t[n*3+1],m=t[n*3+2],g=t[i*3],v=t[i*3+1],x=t[i*3+2],M=t[r*3],S=t[r*3+1],_=t[r*3+2];return Math.abs(c-p)<Math.abs(l-f)?[new ft(l,1-h),new ft(f,1-m),new ft(g,1-x),new ft(M,1-_)]:[new ft(c,1-h),new ft(p,1-m),new ft(v,1-x),new ft(S,1-_)]}};function vA(s,t,e){if(e.shapes=[],Array.isArray(s))for(let n=0,i=s.length;n<i;n++){const r=s[n];e.shapes.push(r.uuid)}else e.shapes.push(s.uuid);return e.options=Object.assign({},t),t.extrudePath!==void 0&&(e.options.extrudePath=t.extrudePath.toJSON()),e}class Pf extends Pa{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],r=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,r,t,e),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Pf(t.radius,t.detail)}}class Nf extends Se{constructor(t=[new ft(0,-.5),new ft(.5,0),new ft(0,.5)],e=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:n,phiLength:i},e=Math.floor(e),i=ve(i,0,Math.PI*2);const r=[],l=[],c=[],h=[],f=[],p=1/e,m=new L,g=new ft,v=new L,x=new L,M=new L;let S=0,_=0;for(let E=0;E<=t.length-1;E++)switch(E){case 0:S=t[E+1].x-t[E].x,_=t[E+1].y-t[E].y,v.x=_*1,v.y=-S,v.z=_*0,M.copy(v),v.normalize(),h.push(v.x,v.y,v.z);break;case t.length-1:h.push(M.x,M.y,M.z);break;default:S=t[E+1].x-t[E].x,_=t[E+1].y-t[E].y,v.x=_*1,v.y=-S,v.z=_*0,x.copy(v),v.x+=M.x,v.y+=M.y,v.z+=M.z,v.normalize(),h.push(v.x,v.y,v.z),M.copy(x)}for(let E=0;E<=e;E++){const T=n+E*p*i,A=Math.sin(T),N=Math.cos(T);for(let D=0;D<=t.length-1;D++){m.x=t[D].x*A,m.y=t[D].y,m.z=t[D].x*N,l.push(m.x,m.y,m.z),g.x=E/e,g.y=D/(t.length-1),c.push(g.x,g.y);const I=h[3*D+0]*A,z=h[3*D+1],C=h[3*D+0]*N;f.push(I,z,C)}}for(let E=0;E<e;E++)for(let T=0;T<t.length-1;T++){const A=T+E*t.length,N=A,D=A+t.length,I=A+t.length+1,z=A+1;r.push(N,D,z),r.push(I,z,D)}this.setIndex(r),this.setAttribute("position",new Jt(l,3)),this.setAttribute("uv",new Jt(c,2)),this.setAttribute("normal",new Jt(f,3))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Nf(t.points,t.segments,t.phiStart,t.phiLength)}}class Sc extends Pa{constructor(t=1,e=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,t,e),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Sc(t.radius,t.detail)}}class jo extends Se{constructor(t=1,e=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};const r=t/2,l=e/2,c=Math.floor(n),h=Math.floor(i),f=c+1,p=h+1,m=t/c,g=e/h,v=[],x=[],M=[],S=[];for(let _=0;_<p;_++){const E=_*g-l;for(let T=0;T<f;T++){const A=T*m-r;x.push(A,-E,0),M.push(0,0,1),S.push(T/c),S.push(1-_/h)}}for(let _=0;_<h;_++)for(let E=0;E<c;E++){const T=E+f*_,A=E+f*(_+1),N=E+1+f*(_+1),D=E+1+f*_;v.push(T,A,D),v.push(A,N,D)}this.setIndex(v),this.setAttribute("position",new Jt(x,3)),this.setAttribute("normal",new Jt(M,3)),this.setAttribute("uv",new Jt(S,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new jo(t.width,t.height,t.widthSegments,t.heightSegments)}}class Lf extends Se{constructor(t=.5,e=1,n=32,i=1,r=0,l=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:l},n=Math.max(3,n),i=Math.max(1,i);const c=[],h=[],f=[],p=[];let m=t;const g=(e-t)/i,v=new L,x=new ft;for(let M=0;M<=i;M++){for(let S=0;S<=n;S++){const _=r+S/n*l;v.x=m*Math.cos(_),v.y=m*Math.sin(_),h.push(v.x,v.y,v.z),f.push(0,0,1),x.x=(v.x/e+1)/2,x.y=(v.y/e+1)/2,p.push(x.x,x.y)}m+=g}for(let M=0;M<i;M++){const S=M*(n+1);for(let _=0;_<n;_++){const E=_+S,T=E,A=E+n+1,N=E+n+2,D=E+1;c.push(T,A,D),c.push(A,N,D)}}this.setIndex(c),this.setAttribute("position",new Jt(h,3)),this.setAttribute("normal",new Jt(f,3)),this.setAttribute("uv",new Jt(p,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Lf(t.innerRadius,t.outerRadius,t.thetaSegments,t.phiSegments,t.thetaStart,t.thetaLength)}}class If extends Se{constructor(t=new Sr([new ft(0,.5),new ft(-.5,-.5),new ft(.5,-.5)]),e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],i=[],r=[],l=[];let c=0,h=0;if(Array.isArray(t)===!1)f(t);else for(let p=0;p<t.length;p++)f(t[p]),this.addGroup(c,h,p),c+=h,h=0;this.setIndex(n),this.setAttribute("position",new Jt(i,3)),this.setAttribute("normal",new Jt(r,3)),this.setAttribute("uv",new Jt(l,2));function f(p){const m=i.length/3,g=p.extractPoints(e);let v=g.shape;const x=g.holes;es.isClockWise(v)===!1&&(v=v.reverse());for(let S=0,_=x.length;S<_;S++){const E=x[S];es.isClockWise(E)===!0&&(x[S]=E.reverse())}const M=es.triangulateShape(v,x);for(let S=0,_=x.length;S<_;S++){const E=x[S];v=v.concat(E)}for(let S=0,_=v.length;S<_;S++){const E=v[S];i.push(E.x,E.y,0),r.push(0,0,1),l.push(E.x,E.y)}for(let S=0,_=M.length;S<_;S++){const E=M[S],T=E[0]+m,A=E[1]+m,N=E[2]+m;n.push(T,A,N),h+=3}}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON(),e=this.parameters.shapes;return _A(e,t)}static fromJSON(t,e){const n=[];for(let i=0,r=t.shapes.length;i<r;i++){const l=e[t.shapes[i]];n.push(l)}return new If(n,t.curveSegments)}}function _A(s,t){if(t.shapes=[],Array.isArray(s))for(let e=0,n=s.length;e<n;e++){const i=s[e];t.shapes.push(i.uuid)}else t.shapes.push(s.uuid);return t}class Mc extends Se{constructor(t=1,e=32,n=16,i=0,r=Math.PI*2,l=0,c=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:i,phiLength:r,thetaStart:l,thetaLength:c},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const h=Math.min(l+c,Math.PI);let f=0;const p=[],m=new L,g=new L,v=[],x=[],M=[],S=[];for(let _=0;_<=n;_++){const E=[],T=_/n;let A=0;_===0&&l===0?A=.5/e:_===n&&h===Math.PI&&(A=-.5/e);for(let N=0;N<=e;N++){const D=N/e;m.x=-t*Math.cos(i+D*r)*Math.sin(l+T*c),m.y=t*Math.cos(l+T*c),m.z=t*Math.sin(i+D*r)*Math.sin(l+T*c),x.push(m.x,m.y,m.z),g.copy(m).normalize(),M.push(g.x,g.y,g.z),S.push(D+A,1-T),E.push(f++)}p.push(E)}for(let _=0;_<n;_++)for(let E=0;E<e;E++){const T=p[_][E+1],A=p[_][E],N=p[_+1][E],D=p[_+1][E+1];(_!==0||l>0)&&v.push(T,A,D),(_!==n-1||h<Math.PI)&&v.push(A,N,D)}this.setIndex(v),this.setAttribute("position",new Jt(x,3)),this.setAttribute("normal",new Jt(M,3)),this.setAttribute("uv",new Jt(S,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Mc(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class Of extends Pa{constructor(t=1,e=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,t,e),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Of(t.radius,t.detail)}}class zf extends Se{constructor(t=1,e=.4,n=12,i=48,r=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:n,tubularSegments:i,arc:r},n=Math.floor(n),i=Math.floor(i);const l=[],c=[],h=[],f=[],p=new L,m=new L,g=new L;for(let v=0;v<=n;v++)for(let x=0;x<=i;x++){const M=x/i*r,S=v/n*Math.PI*2;m.x=(t+e*Math.cos(S))*Math.cos(M),m.y=(t+e*Math.cos(S))*Math.sin(M),m.z=e*Math.sin(S),c.push(m.x,m.y,m.z),p.x=t*Math.cos(M),p.y=t*Math.sin(M),g.subVectors(m,p).normalize(),h.push(g.x,g.y,g.z),f.push(x/i),f.push(v/n)}for(let v=1;v<=n;v++)for(let x=1;x<=i;x++){const M=(i+1)*v+x-1,S=(i+1)*(v-1)+x-1,_=(i+1)*(v-1)+x,E=(i+1)*v+x;l.push(M,S,E),l.push(S,_,E)}this.setIndex(l),this.setAttribute("position",new Jt(c,3)),this.setAttribute("normal",new Jt(h,3)),this.setAttribute("uv",new Jt(f,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new zf(t.radius,t.tube,t.radialSegments,t.tubularSegments,t.arc)}}class Bf extends Se{constructor(t=1,e=.4,n=64,i=8,r=2,l=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:n,radialSegments:i,p:r,q:l},n=Math.floor(n),i=Math.floor(i);const c=[],h=[],f=[],p=[],m=new L,g=new L,v=new L,x=new L,M=new L,S=new L,_=new L;for(let T=0;T<=n;++T){const A=T/n*r*Math.PI*2;E(A,r,l,t,v),E(A+.01,r,l,t,x),S.subVectors(x,v),_.addVectors(x,v),M.crossVectors(S,_),_.crossVectors(M,S),M.normalize(),_.normalize();for(let N=0;N<=i;++N){const D=N/i*Math.PI*2,I=-e*Math.cos(D),z=e*Math.sin(D);m.x=v.x+(I*_.x+z*M.x),m.y=v.y+(I*_.y+z*M.y),m.z=v.z+(I*_.z+z*M.z),h.push(m.x,m.y,m.z),g.subVectors(m,v).normalize(),f.push(g.x,g.y,g.z),p.push(T/n),p.push(N/i)}}for(let T=1;T<=n;T++)for(let A=1;A<=i;A++){const N=(i+1)*(T-1)+(A-1),D=(i+1)*T+(A-1),I=(i+1)*T+A,z=(i+1)*(T-1)+A;c.push(N,D,z),c.push(D,I,z)}this.setIndex(c),this.setAttribute("position",new Jt(h,3)),this.setAttribute("normal",new Jt(f,3)),this.setAttribute("uv",new Jt(p,2));function E(T,A,N,D,I){const z=Math.cos(T),C=Math.sin(T),w=N/A*T,B=Math.cos(w);I.x=D*(2+B)*.5*z,I.y=D*(2+B)*C*.5,I.z=D*Math.sin(w)*.5}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Bf(t.radius,t.tube,t.tubularSegments,t.radialSegments,t.p,t.q)}}class Ff extends Se{constructor(t=new Mg(new L(-1,-1,0),new L(-1,1,0),new L(1,1,0)),e=64,n=1,i=8,r=!1){super(),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:i,closed:r};const l=t.computeFrenetFrames(e,r);this.tangents=l.tangents,this.normals=l.normals,this.binormals=l.binormals;const c=new L,h=new L,f=new ft;let p=new L;const m=[],g=[],v=[],x=[];M(),this.setIndex(x),this.setAttribute("position",new Jt(m,3)),this.setAttribute("normal",new Jt(g,3)),this.setAttribute("uv",new Jt(v,2));function M(){for(let T=0;T<e;T++)S(T);S(r===!1?e:0),E(),_()}function S(T){p=t.getPointAt(T/e,p);const A=l.normals[T],N=l.binormals[T];for(let D=0;D<=i;D++){const I=D/i*Math.PI*2,z=Math.sin(I),C=-Math.cos(I);h.x=C*A.x+z*N.x,h.y=C*A.y+z*N.y,h.z=C*A.z+z*N.z,h.normalize(),g.push(h.x,h.y,h.z),c.x=p.x+n*h.x,c.y=p.y+n*h.y,c.z=p.z+n*h.z,m.push(c.x,c.y,c.z)}}function _(){for(let T=1;T<=e;T++)for(let A=1;A<=i;A++){const N=(i+1)*(T-1)+(A-1),D=(i+1)*T+(A-1),I=(i+1)*T+A,z=(i+1)*(T-1)+A;x.push(N,D,z),x.push(D,I,z)}}function E(){for(let T=0;T<=e;T++)for(let A=0;A<=i;A++)f.x=T/e,f.y=A/i,v.push(f.x,f.y)}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON();return t.path=this.parameters.path.toJSON(),t}static fromJSON(t){return new Ff(new tf[t.path.type]().fromJSON(t.path),t.tubularSegments,t.radius,t.radialSegments,t.closed)}}class Eg extends Se{constructor(t=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:t},t!==null){const e=[],n=new Set,i=new L,r=new L;if(t.index!==null){const l=t.attributes.position,c=t.index;let h=t.groups;h.length===0&&(h=[{start:0,count:c.count,materialIndex:0}]);for(let f=0,p=h.length;f<p;++f){const m=h[f],g=m.start,v=m.count;for(let x=g,M=g+v;x<M;x+=3)for(let S=0;S<3;S++){const _=c.getX(x+S),E=c.getX(x+(S+1)%3);i.fromBufferAttribute(l,_),r.fromBufferAttribute(l,E),k_(i,r,n)===!0&&(e.push(i.x,i.y,i.z),e.push(r.x,r.y,r.z))}}}else{const l=t.attributes.position;for(let c=0,h=l.count/3;c<h;c++)for(let f=0;f<3;f++){const p=3*c+f,m=3*c+(f+1)%3;i.fromBufferAttribute(l,p),r.fromBufferAttribute(l,m),k_(i,r,n)===!0&&(e.push(i.x,i.y,i.z),e.push(r.x,r.y,r.z))}}this.setAttribute("position",new Jt(e,3))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}}function k_(s,t,e){const n=`${s.x},${s.y},${s.z}-${t.x},${t.y},${t.z}`,i=`${t.x},${t.y},${t.z}-${s.x},${s.y},${s.z}`;return e.has(n)===!0||e.has(i)===!0?!1:(e.add(n),e.add(i),!0)}var W_=Object.freeze({__proto__:null,BoxGeometry:wr,CapsuleGeometry:wf,CircleGeometry:Cf,ConeGeometry:xc,CylinderGeometry:yc,DodecahedronGeometry:Rf,EdgesGeometry:xS,ExtrudeGeometry:Uf,IcosahedronGeometry:Pf,LatheGeometry:Nf,OctahedronGeometry:Sc,PlaneGeometry:jo,PolyhedronGeometry:Pa,RingGeometry:Lf,ShapeGeometry:If,SphereGeometry:Mc,TetrahedronGeometry:Of,TorusGeometry:zf,TorusKnotGeometry:Bf,TubeGeometry:Ff,WireframeGeometry:Eg});class RS extends Yn{constructor(t){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new kt(0),this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.fog=t.fog,this}}class DS extends wi{constructor(t){super(t),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class Tg extends Yn{constructor(t){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new kt(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new kt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Da,this.normalScale=new ft(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ai,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class US extends Tg{constructor(t){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ft(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return ve(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(e){this.ior=(1+.4*e)/(1-.4*e)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new kt(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new kt(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new kt(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(t)}get anisotropy(){return this._anisotropy}set anisotropy(t){this._anisotropy>0!=t>0&&this.version++,this._anisotropy=t}get clearcoat(){return this._clearcoat}set clearcoat(t){this._clearcoat>0!=t>0&&this.version++,this._clearcoat=t}get iridescence(){return this._iridescence}set iridescence(t){this._iridescence>0!=t>0&&this.version++,this._iridescence=t}get dispersion(){return this._dispersion}set dispersion(t){this._dispersion>0!=t>0&&this.version++,this._dispersion=t}get sheen(){return this._sheen}set sheen(t){this._sheen>0!=t>0&&this.version++,this._sheen=t}get transmission(){return this._transmission}set transmission(t){this._transmission>0!=t>0&&this.version++,this._transmission=t}copy(t){return super.copy(t),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=t.anisotropy,this.anisotropyRotation=t.anisotropyRotation,this.anisotropyMap=t.anisotropyMap,this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.dispersion=t.dispersion,this.ior=t.ior,this.iridescence=t.iridescence,this.iridescenceMap=t.iridescenceMap,this.iridescenceIOR=t.iridescenceIOR,this.iridescenceThicknessRange=[...t.iridescenceThicknessRange],this.iridescenceThicknessMap=t.iridescenceThicknessMap,this.sheen=t.sheen,this.sheenColor.copy(t.sheenColor),this.sheenColorMap=t.sheenColorMap,this.sheenRoughness=t.sheenRoughness,this.sheenRoughnessMap=t.sheenRoughnessMap,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this.thickness=t.thickness,this.thicknessMap=t.thicknessMap,this.attenuationDistance=t.attenuationDistance,this.attenuationColor.copy(t.attenuationColor),this.specularIntensity=t.specularIntensity,this.specularIntensityMap=t.specularIntensityMap,this.specularColor.copy(t.specularColor),this.specularColorMap=t.specularColorMap,this}}class PS extends Yn{constructor(t){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new kt(16777215),this.specular=new kt(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new kt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Da,this.normalScale=new ft(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ai,this.combine=gc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class NS extends Yn{constructor(t){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new kt(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new kt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Da,this.normalScale=new ft(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}class LS extends Yn{constructor(t){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Da,this.normalScale=new ft(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.flatShading=t.flatShading,this}}class IS extends Yn{constructor(t){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new kt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new kt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Da,this.normalScale=new ft(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ai,this.combine=gc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Ag extends Yn{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Yx,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class wg extends Yn{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}class OS extends Yn{constructor(t){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new kt(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Da,this.normalScale=new ft(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.flatShading=t.flatShading,this.fog=t.fog,this}}class zS extends ii{constructor(t){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}function _r(s,t){return!s||s.constructor===t?s:typeof t.BYTES_PER_ELEMENT=="number"?new t(s):Array.prototype.slice.call(s)}function BS(s){return ArrayBuffer.isView(s)&&!(s instanceof DataView)}function FS(s){function t(i,r){return s[i]-s[r]}const e=s.length,n=new Array(e);for(let i=0;i!==e;++i)n[i]=i;return n.sort(t),n}function Om(s,t,e){const n=s.length,i=new s.constructor(n);for(let r=0,l=0;l!==n;++r){const c=e[r]*t;for(let h=0;h!==t;++h)i[l++]=s[c+h]}return i}function Cg(s,t,e,n){let i=1,r=s[0];for(;r!==void 0&&r[n]===void 0;)r=s[i++];if(r===void 0)return;let l=r[n];if(l!==void 0)if(Array.isArray(l))do l=r[n],l!==void 0&&(t.push(r.time),e.push(...l)),r=s[i++];while(r!==void 0);else if(l.toArray!==void 0)do l=r[n],l!==void 0&&(t.push(r.time),l.toArray(e,e.length)),r=s[i++];while(r!==void 0);else do l=r[n],l!==void 0&&(t.push(r.time),e.push(l)),r=s[i++];while(r!==void 0)}function yA(s,t,e,n,i=30){const r=s.clone();r.name=t;const l=[];for(let h=0;h<r.tracks.length;++h){const f=r.tracks[h],p=f.getValueSize(),m=[],g=[];for(let v=0;v<f.times.length;++v){const x=f.times[v]*i;if(!(x<e||x>=n)){m.push(f.times[v]);for(let M=0;M<p;++M)g.push(f.values[v*p+M])}}m.length!==0&&(f.times=_r(m,f.times.constructor),f.values=_r(g,f.values.constructor),l.push(f))}r.tracks=l;let c=1/0;for(let h=0;h<r.tracks.length;++h)c>r.tracks[h].times[0]&&(c=r.tracks[h].times[0]);for(let h=0;h<r.tracks.length;++h)r.tracks[h].shift(-1*c);return r.resetDuration(),r}function xA(s,t=0,e=s,n=30){n<=0&&(n=30);const i=e.tracks.length,r=t/n;for(let l=0;l<i;++l){const c=e.tracks[l],h=c.ValueTypeName;if(h==="bool"||h==="string")continue;const f=s.tracks.find(function(_){return _.name===c.name&&_.ValueTypeName===h});if(f===void 0)continue;let p=0;const m=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(p=m/3);let g=0;const v=f.getValueSize();f.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(g=v/3);const x=c.times.length-1;let M;if(r<=c.times[0]){const _=p,E=m-p;M=c.values.slice(_,E)}else if(r>=c.times[x]){const _=x*m+p,E=_+m-p;M=c.values.slice(_,E)}else{const _=c.createInterpolant(),E=p,T=m-p;_.evaluate(r),M=_.resultBuffer.slice(E,T)}h==="quaternion"&&new qn().fromArray(M).normalize().conjugate().toArray(M);const S=f.times.length;for(let _=0;_<S;++_){const E=_*v+g;if(h==="quaternion")qn.multiplyQuaternionsFlat(f.values,E,M,0,f.values,E);else{const T=v-g*2;for(let A=0;A<T;++A)f.values[E+A]-=M[A]}}}return s.blendMode=rg,s}class SA{static convertArray(t,e){return _r(t,e)}static isTypedArray(t){return BS(t)}static getKeyframeOrder(t){return FS(t)}static sortedArray(t,e,n){return Om(t,e,n)}static flattenJSON(t,e,n,i){Cg(t,e,n,i)}static subclip(t,e,n,i,r=30){return yA(t,e,n,i,r)}static makeClipAdditive(t,e=0,n=t,i=30){return xA(t,e,n,i)}}class bc{constructor(t,e,n,i){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new e.constructor(n),this.sampleValues=e,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let n=this._cachedIndex,i=e[n],r=e[n-1];t:{e:{let l;n:{i:if(!(t<i)){for(let c=n+2;;){if(i===void 0){if(t<r)break i;return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===c)break;if(r=i,i=e[++n],t<i)break e}l=e.length;break n}if(!(t>=r)){const c=e[1];t<c&&(n=2,r=c);for(let h=n-2;;){if(r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===h)break;if(i=r,r=e[--n-1],t>=r)break e}l=n,n=0;break n}break t}for(;n<l;){const c=n+l>>>1;t<e[c]?l=c:n=c+1}if(i=e[n],r=e[n-1],r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,t,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=t*i;for(let l=0;l!==i;++l)e[l]=n[r+l];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class HS extends bc{constructor(t,e,n,i){super(t,e,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:gr,endingEnd:gr}}intervalChanged_(t,e,n){const i=this.parameterPositions;let r=t-2,l=t+1,c=i[r],h=i[l];if(c===void 0)switch(this.getSettings_().endingStart){case vr:r=t,c=2*e-n;break;case ic:r=i.length-2,c=e+i[r]-i[r+1];break;default:r=t,c=n}if(h===void 0)switch(this.getSettings_().endingEnd){case vr:l=t,h=2*n-e;break;case ic:l=1,h=n+i[1]-i[0];break;default:l=t-1,h=e}const f=(n-e)*.5,p=this.valueSize;this._weightPrev=f/(e-c),this._weightNext=f/(h-n),this._offsetPrev=r*p,this._offsetNext=l*p}interpolate_(t,e,n,i){const r=this.resultBuffer,l=this.sampleValues,c=this.valueSize,h=t*c,f=h-c,p=this._offsetPrev,m=this._offsetNext,g=this._weightPrev,v=this._weightNext,x=(n-e)/(i-e),M=x*x,S=M*x,_=-g*S+2*g*M-g*x,E=(1+g)*S+(-1.5-2*g)*M+(-.5+g)*x+1,T=(-1-v)*S+(1.5+v)*M+.5*x,A=v*S-v*M;for(let N=0;N!==c;++N)r[N]=_*l[p+N]+E*l[f+N]+T*l[h+N]+A*l[m+N];return r}}class Rg extends bc{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t,e,n,i){const r=this.resultBuffer,l=this.sampleValues,c=this.valueSize,h=t*c,f=h-c,p=(n-e)/(i-e),m=1-p;for(let g=0;g!==c;++g)r[g]=l[f+g]*m+l[h+g]*p;return r}}class VS extends bc{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t){return this.copySampleValue_(t-1)}}class Gi{constructor(t,e,n,i){if(t===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(e===void 0||e.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=_r(e,this.TimeBufferType),this.values=_r(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let n;if(e.toJSON!==this.toJSON)n=e.toJSON(t);else{n={name:t.name,times:_r(t.times,Array),values:_r(t.values,Array)};const i=t.getInterpolation();i!==t.DefaultInterpolation&&(n.interpolation=i)}return n.type=t.ValueTypeName,n}InterpolantFactoryMethodDiscrete(t){return new VS(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new Rg(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new HS(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case nc:e=this.InterpolantFactoryMethodDiscrete;break;case Kh:e=this.InterpolantFactoryMethodLinear;break;case ch:e=this.InterpolantFactoryMethodSmooth;break}if(e===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(t!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return nc;case this.InterpolantFactoryMethodLinear:return Kh;case this.InterpolantFactoryMethodSmooth:return ch}}getValueSize(){return this.values.length/this.times.length}shift(t){if(t!==0){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]+=t}return this}scale(t){if(t!==1){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]*=t}return this}trim(t,e){const n=this.times,i=n.length;let r=0,l=i-1;for(;r!==i&&n[r]<t;)++r;for(;l!==-1&&n[l]>e;)--l;if(++l,r!==0||l!==i){r>=l&&(l=Math.max(l,1),r=l-1);const c=this.getValueSize();this.times=n.slice(r,l),this.values=this.values.slice(r*c,l*c)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,i=this.values,r=n.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let l=null;for(let c=0;c!==r;c++){const h=n[c];if(typeof h=="number"&&isNaN(h)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,c,h),t=!1;break}if(l!==null&&l>h){console.error("THREE.KeyframeTrack: Out of order keys.",this,c,h,l),t=!1;break}l=h}if(i!==void 0&&BS(i))for(let c=0,h=i.length;c!==h;++c){const f=i[c];if(isNaN(f)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,c,f),t=!1;break}}return t}optimize(){const t=this.times.slice(),e=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===ch,r=t.length-1;let l=1;for(let c=1;c<r;++c){let h=!1;const f=t[c],p=t[c+1];if(f!==p&&(c!==1||f!==t[0]))if(i)h=!0;else{const m=c*n,g=m-n,v=m+n;for(let x=0;x!==n;++x){const M=e[m+x];if(M!==e[g+x]||M!==e[v+x]){h=!0;break}}}if(h){if(c!==l){t[l]=t[c];const m=c*n,g=l*n;for(let v=0;v!==n;++v)e[g+v]=e[m+v]}++l}}if(r>0){t[l]=t[r];for(let c=r*n,h=l*n,f=0;f!==n;++f)e[h+f]=e[c+f];++l}return l!==t.length?(this.times=t.slice(0,l),this.values=e.slice(0,l*n)):(this.times=t,this.values=e),this}clone(){const t=this.times.slice(),e=this.values.slice(),n=this.constructor,i=new n(this.name,t,e);return i.createInterpolant=this.createInterpolant,i}}Gi.prototype.ValueTypeName="";Gi.prototype.TimeBufferType=Float32Array;Gi.prototype.ValueBufferType=Float32Array;Gi.prototype.DefaultInterpolation=Kh;class Cr extends Gi{constructor(t,e,n){super(t,e,n)}}Cr.prototype.ValueTypeName="bool";Cr.prototype.ValueBufferType=Array;Cr.prototype.DefaultInterpolation=nc;Cr.prototype.InterpolantFactoryMethodLinear=void 0;Cr.prototype.InterpolantFactoryMethodSmooth=void 0;class Dg extends Gi{constructor(t,e,n,i){super(t,e,n,i)}}Dg.prototype.ValueTypeName="color";class hc extends Gi{constructor(t,e,n,i){super(t,e,n,i)}}hc.prototype.ValueTypeName="number";class GS extends bc{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t,e,n,i){const r=this.resultBuffer,l=this.sampleValues,c=this.valueSize,h=(n-e)/(i-e);let f=t*c;for(let p=f+c;f!==p;f+=4)qn.slerpFlat(r,0,l,f-c,l,f,h);return r}}class Ec extends Gi{constructor(t,e,n,i){super(t,e,n,i)}InterpolantFactoryMethodLinear(t){return new GS(this.times,this.values,this.getValueSize(),t)}}Ec.prototype.ValueTypeName="quaternion";Ec.prototype.InterpolantFactoryMethodSmooth=void 0;class Rr extends Gi{constructor(t,e,n){super(t,e,n)}}Rr.prototype.ValueTypeName="string";Rr.prototype.ValueBufferType=Array;Rr.prototype.DefaultInterpolation=nc;Rr.prototype.InterpolantFactoryMethodLinear=void 0;Rr.prototype.InterpolantFactoryMethodSmooth=void 0;class fc extends Gi{constructor(t,e,n,i){super(t,e,n,i)}}fc.prototype.ValueTypeName="vector";class dc{constructor(t="",e=-1,n=[],i=vf){this.name=t,this.tracks=n,this.duration=e,this.blendMode=i,this.uuid=Ti(),this.duration<0&&this.resetDuration()}static parse(t){const e=[],n=t.tracks,i=1/(t.fps||1);for(let l=0,c=n.length;l!==c;++l)e.push(bA(n[l]).scale(i));const r=new this(t.name,t.duration,e,t.blendMode);return r.uuid=t.uuid,r}static toJSON(t){const e=[],n=t.tracks,i={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let r=0,l=n.length;r!==l;++r)e.push(Gi.toJSON(n[r]));return i}static CreateFromMorphTargetSequence(t,e,n,i){const r=e.length,l=[];for(let c=0;c<r;c++){let h=[],f=[];h.push((c+r-1)%r,c,(c+1)%r),f.push(0,1,0);const p=FS(h);h=Om(h,1,p),f=Om(f,1,p),!i&&h[0]===0&&(h.push(r),f.push(f[0])),l.push(new hc(".morphTargetInfluences["+e[c].name+"]",h,f).scale(1/n))}return new this(t,-1,l)}static findByName(t,e){let n=t;if(!Array.isArray(t)){const i=t;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===e)return n[i];return null}static CreateClipsFromMorphTargetSequences(t,e,n){const i={},r=/^([\w-]*?)([\d]+)$/;for(let c=0,h=t.length;c<h;c++){const f=t[c],p=f.name.match(r);if(p&&p.length>1){const m=p[1];let g=i[m];g||(i[m]=g=[]),g.push(f)}}const l=[];for(const c in i)l.push(this.CreateFromMorphTargetSequence(c,i[c],e,n));return l}static parseAnimation(t,e){if(console.warn("THREE.AnimationClip: parseAnimation() is deprecated and will be removed with r185"),!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(m,g,v,x,M){if(v.length!==0){const S=[],_=[];Cg(v,S,_,x),S.length!==0&&M.push(new m(g,S,_))}},i=[],r=t.name||"default",l=t.fps||30,c=t.blendMode;let h=t.length||-1;const f=t.hierarchy||[];for(let m=0;m<f.length;m++){const g=f[m].keys;if(!(!g||g.length===0))if(g[0].morphTargets){const v={};let x;for(x=0;x<g.length;x++)if(g[x].morphTargets)for(let M=0;M<g[x].morphTargets.length;M++)v[g[x].morphTargets[M]]=-1;for(const M in v){const S=[],_=[];for(let E=0;E!==g[x].morphTargets.length;++E){const T=g[x];S.push(T.time),_.push(T.morphTarget===M?1:0)}i.push(new hc(".morphTargetInfluence["+M+"]",S,_))}h=v.length*l}else{const v=".bones["+e[m].name+"]";n(fc,v+".position",g,"pos",i),n(Ec,v+".quaternion",g,"rot",i),n(fc,v+".scale",g,"scl",i)}}return i.length===0?null:new this(r,h,i,c)}resetDuration(){const t=this.tracks;let e=0;for(let n=0,i=t.length;n!==i;++n){const r=this.tracks[n];e=Math.max(e,r.times[r.times.length-1])}return this.duration=e,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function MA(s){switch(s.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return hc;case"vector":case"vector2":case"vector3":case"vector4":return fc;case"color":return Dg;case"quaternion":return Ec;case"bool":case"boolean":return Cr;case"string":return Rr}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+s)}function bA(s){if(s.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=MA(s.type);if(s.times===void 0){const e=[],n=[];Cg(s.keys,e,n,"value"),s.times=e,s.values=n}return t.parse!==void 0?t.parse(s):new t(s.name,s.times,s.values,s.interpolation)}const gs={enabled:!1,files:{},add:function(s,t){this.enabled!==!1&&(this.files[s]=t)},get:function(s){if(this.enabled!==!1)return this.files[s]},remove:function(s){delete this.files[s]},clear:function(){this.files={}}};class Ug{constructor(t,e,n){const i=this;let r=!1,l=0,c=0,h;const f=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(p){c++,r===!1&&i.onStart!==void 0&&i.onStart(p,l,c),r=!0},this.itemEnd=function(p){l++,i.onProgress!==void 0&&i.onProgress(p,l,c),l===c&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(p){i.onError!==void 0&&i.onError(p)},this.resolveURL=function(p){return h?h(p):p},this.setURLModifier=function(p){return h=p,this},this.addHandler=function(p,m){return f.push(p,m),this},this.removeHandler=function(p){const m=f.indexOf(p);return m!==-1&&f.splice(m,2),this},this.getHandler=function(p){for(let m=0,g=f.length;m<g;m+=2){const v=f[m],x=f[m+1];if(v.global&&(v.lastIndex=0),v.test(p))return x}return null}}}const Ro=new Ug;let hi=class{constructor(t){this.manager=t!==void 0?t:Ro,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const n=this;return new Promise(function(i,r){n.load(t,i,e,r)})}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}};hi.DEFAULT_MATERIAL_NAME="__DEFAULT";const Fs={};class EA extends Error{constructor(t,e){super(t),this.response=e}}class Js extends hi{constructor(t){super(t),this.mimeType="",this.responseType=""}load(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const r=gs.get(`file:${t}`);if(r!==void 0)return this.manager.itemStart(t),setTimeout(()=>{e&&e(r),this.manager.itemEnd(t)},0),r;if(Fs[t]!==void 0){Fs[t].push({onLoad:e,onProgress:n,onError:i});return}Fs[t]=[],Fs[t].push({onLoad:e,onProgress:n,onError:i});const l=new Request(t,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),c=this.mimeType,h=this.responseType;fetch(l).then(f=>{if(f.status===200||f.status===0){if(f.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||f.body===void 0||f.body.getReader===void 0)return f;const p=Fs[t],m=f.body.getReader(),g=f.headers.get("X-File-Size")||f.headers.get("Content-Length"),v=g?parseInt(g):0,x=v!==0;let M=0;const S=new ReadableStream({start(_){E();function E(){m.read().then(({done:T,value:A})=>{if(T)_.close();else{M+=A.byteLength;const N=new ProgressEvent("progress",{lengthComputable:x,loaded:M,total:v});for(let D=0,I=p.length;D<I;D++){const z=p[D];z.onProgress&&z.onProgress(N)}_.enqueue(A),E()}},T=>{_.error(T)})}}});return new Response(S)}else throw new EA(`fetch for "${f.url}" responded with ${f.status}: ${f.statusText}`,f)}).then(f=>{switch(h){case"arraybuffer":return f.arrayBuffer();case"blob":return f.blob();case"document":return f.text().then(p=>new DOMParser().parseFromString(p,c));case"json":return f.json();default:if(c==="")return f.text();{const m=/charset="?([^;"\s]*)"?/i.exec(c),g=m&&m[1]?m[1].toLowerCase():void 0,v=new TextDecoder(g);return f.arrayBuffer().then(x=>v.decode(x))}}}).then(f=>{gs.add(`file:${t}`,f);const p=Fs[t];delete Fs[t];for(let m=0,g=p.length;m<g;m++){const v=p[m];v.onLoad&&v.onLoad(f)}}).catch(f=>{const p=Fs[t];if(p===void 0)throw this.manager.itemError(t),f;delete Fs[t];for(let m=0,g=p.length;m<g;m++){const v=p[m];v.onError&&v.onError(f)}this.manager.itemError(t)}).finally(()=>{this.manager.itemEnd(t)}),this.manager.itemStart(t)}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}}class TA extends hi{constructor(t){super(t)}load(t,e,n,i){const r=this,l=new Js(this.manager);l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(t,function(c){try{e(r.parse(JSON.parse(c)))}catch(h){i?i(h):console.error(h),r.manager.itemError(t)}},n,i)}parse(t){const e=[];for(let n=0;n<t.length;n++){const i=dc.parse(t[n]);e.push(i)}return e}}class AA extends hi{constructor(t){super(t)}load(t,e,n,i){const r=this,l=[],c=new Af,h=new Js(this.manager);h.setPath(this.path),h.setResponseType("arraybuffer"),h.setRequestHeader(this.requestHeader),h.setWithCredentials(r.withCredentials);let f=0;function p(m){h.load(t[m],function(g){const v=r.parse(g,!0);l[m]={width:v.width,height:v.height,format:v.format,mipmaps:v.mipmaps},f+=1,f===6&&(v.mipmapCount===1&&(c.minFilter=vn),c.image=l,c.format=v.format,c.needsUpdate=!0,e&&e(c))},n,i)}if(Array.isArray(t))for(let m=0,g=t.length;m<g;++m)p(m);else h.load(t,function(m){const g=r.parse(m,!0);if(g.isCubemap){const v=g.mipmaps.length/g.mipmapCount;for(let x=0;x<v;x++){l[x]={mipmaps:[]};for(let M=0;M<g.mipmapCount;M++)l[x].mipmaps.push(g.mipmaps[x*g.mipmapCount+M]),l[x].format=g.format,l[x].width=g.width,l[x].height=g.height}c.image=l}else c.image.width=g.width,c.image.height=g.height,c.mipmaps=g.mipmaps;g.mipmapCount===1&&(c.minFilter=vn),c.format=g.format,c.needsUpdate=!0,e&&e(c)},n,i);return c}}const So=new WeakMap;class pc extends hi{constructor(t){super(t)}load(t,e,n,i){this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,l=gs.get(`image:${t}`);if(l!==void 0){if(l.complete===!0)r.manager.itemStart(t),setTimeout(function(){e&&e(l),r.manager.itemEnd(t)},0);else{let m=So.get(l);m===void 0&&(m=[],So.set(l,m)),m.push({onLoad:e,onError:i})}return l}const c=oc("img");function h(){p(),e&&e(this);const m=So.get(this)||[];for(let g=0;g<m.length;g++){const v=m[g];v.onLoad&&v.onLoad(this)}So.delete(this),r.manager.itemEnd(t)}function f(m){p(),i&&i(m),gs.remove(`image:${t}`);const g=So.get(this)||[];for(let v=0;v<g.length;v++){const x=g[v];x.onError&&x.onError(m)}So.delete(this),r.manager.itemError(t),r.manager.itemEnd(t)}function p(){c.removeEventListener("load",h,!1),c.removeEventListener("error",f,!1)}return c.addEventListener("load",h,!1),c.addEventListener("error",f,!1),t.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(c.crossOrigin=this.crossOrigin),gs.add(`image:${t}`,c),r.manager.itemStart(t),c.src=t,c}}class wA extends hi{constructor(t){super(t)}load(t,e,n,i){const r=new _c;r.colorSpace=Wn;const l=new pc(this.manager);l.setCrossOrigin(this.crossOrigin),l.setPath(this.path);let c=0;function h(f){l.load(t[f],function(p){r.images[f]=p,c++,c===6&&(r.needsUpdate=!0,e&&e(r))},void 0,i)}for(let f=0;f<t.length;++f)h(f);return r}}class CA extends hi{constructor(t){super(t)}load(t,e,n,i){const r=this,l=new _s,c=new Js(this.manager);return c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setPath(this.path),c.setWithCredentials(r.withCredentials),c.load(t,function(h){let f;try{f=r.parse(h)}catch(p){if(i!==void 0)i(p);else{console.error(p);return}}f.image!==void 0?l.image=f.image:f.data!==void 0&&(l.image.width=f.width,l.image.height=f.height,l.image.data=f.data),l.wrapS=f.wrapS!==void 0?f.wrapS:Fi,l.wrapT=f.wrapT!==void 0?f.wrapT:Fi,l.magFilter=f.magFilter!==void 0?f.magFilter:vn,l.minFilter=f.minFilter!==void 0?f.minFilter:vn,l.anisotropy=f.anisotropy!==void 0?f.anisotropy:1,f.colorSpace!==void 0&&(l.colorSpace=f.colorSpace),f.flipY!==void 0&&(l.flipY=f.flipY),f.format!==void 0&&(l.format=f.format),f.type!==void 0&&(l.type=f.type),f.mipmaps!==void 0&&(l.mipmaps=f.mipmaps,l.minFilter=ms),f.mipmapCount===1&&(l.minFilter=vn),f.generateMipmaps!==void 0&&(l.generateMipmaps=f.generateMipmaps),l.needsUpdate=!0,e&&e(l,f)},n,i),l}}class Hf extends hi{constructor(t){super(t)}load(t,e,n,i){const r=new en,l=new pc(this.manager);return l.setCrossOrigin(this.crossOrigin),l.setPath(this.path),l.load(t,function(c){r.image=c,r.needsUpdate=!0,e!==void 0&&e(r)},n,i),r}}class Na extends Le{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new kt(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(e.object.target=this.target.uuid),e}}class kS extends Na{constructor(t,e,n){super(t,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Le.DEFAULT_UP),this.updateMatrix(),this.groundColor=new kt(e)}copy(t,e){return super.copy(t,e),this.groundColor.copy(t.groundColor),this}}const Xp=new he,X_=new L,q_=new L;class Pg{constructor(t){this.camera=t,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ft(512,512),this.mapType=Vi,this.map=null,this.mapPass=null,this.matrix=new he,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Yo,this._frameExtents=new ft(1,1),this._viewportCount=1,this._viewports=[new Ae(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;X_.setFromMatrixPosition(t.matrixWorld),e.position.copy(X_),q_.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(q_),e.updateMatrixWorld(),Xp.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Xp),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(Xp)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.intensity=t.intensity,this.bias=t.bias,this.radius=t.radius,this.autoUpdate=t.autoUpdate,this.needsUpdate=t.needsUpdate,this.normalBias=t.normalBias,this.blurSamples=t.blurSamples,this.mapSize.copy(t.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const t={};return this.intensity!==1&&(t.intensity=this.intensity),this.bias!==0&&(t.bias=this.bias),this.normalBias!==0&&(t.normalBias=this.normalBias),this.radius!==1&&(t.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class RA extends Pg{constructor(){super(new sn(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1,this.aspect=1}updateMatrices(t){const e=this.camera,n=Bo*2*t.angle*this.focus,i=this.mapSize.width/this.mapSize.height*this.aspect,r=t.distance||e.far;(n!==e.fov||i!==e.aspect||r!==e.far)&&(e.fov=n,e.aspect=i,e.far=r,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}class WS extends Na{constructor(t,e,n=0,i=Math.PI/3,r=0,l=2){super(t,e),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Le.DEFAULT_UP),this.updateMatrix(),this.target=new Le,this.distance=n,this.angle=i,this.penumbra=r,this.decay=l,this.map=null,this.shadow=new RA}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}const Y_=new he,Ol=new L,qp=new L;class DA extends Pg{constructor(){super(new sn(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new ft(4,2),this._viewportCount=6,this._viewports=[new Ae(2,1,1,1),new Ae(0,1,1,1),new Ae(3,1,1,1),new Ae(1,1,1,1),new Ae(3,0,1,1),new Ae(1,0,1,1)],this._cubeDirections=[new L(1,0,0),new L(-1,0,0),new L(0,0,1),new L(0,0,-1),new L(0,1,0),new L(0,-1,0)],this._cubeUps=[new L(0,1,0),new L(0,1,0),new L(0,1,0),new L(0,1,0),new L(0,0,1),new L(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,i=this.matrix,r=t.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),Ol.setFromMatrixPosition(t.matrixWorld),n.position.copy(Ol),qp.copy(n.position),qp.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(qp),n.updateMatrixWorld(),i.makeTranslation(-Ol.x,-Ol.y,-Ol.z),Y_.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Y_)}}class XS extends Na{constructor(t,e,n=0,i=2){super(t,e),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new DA}get power(){return this.intensity*4*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}class ys extends xf{constructor(t=-1,e=1,n=1,i=-1,r=.1,l=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=r,this.far=l,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this}setViewOffset(t,e,n,i,r,l){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-t,l=n+t,c=i+e,h=i-e;if(this.view!==null&&this.view.enabled){const f=(this.right-this.left)/this.view.fullWidth/this.zoom,p=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=f*this.view.offsetX,l=r+f*this.view.width,c-=p*this.view.offsetY,h=c-p*this.view.height}this.projectionMatrix.makeOrthographic(r,l,c,h,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}}class UA extends Pg{constructor(){super(new ys(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class qS extends Na{constructor(t,e){super(t,e),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Le.DEFAULT_UP),this.updateMatrix(),this.target=new Le,this.shadow=new UA}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}class YS extends Na{constructor(t,e){super(t,e),this.isAmbientLight=!0,this.type="AmbientLight"}}class jS extends Na{constructor(t,e,n=10,i=10){super(t,e),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(t){this.intensity=t/(this.width*this.height*Math.PI)}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const e=super.toJSON(t);return e.object.width=this.width,e.object.height=this.height,e}}class ZS{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new L)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const n=t.x,i=t.y,r=t.z,l=this.coefficients;return e.copy(l[0]).multiplyScalar(.282095),e.addScaledVector(l[1],.488603*i),e.addScaledVector(l[2],.488603*r),e.addScaledVector(l[3],.488603*n),e.addScaledVector(l[4],1.092548*(n*i)),e.addScaledVector(l[5],1.092548*(i*r)),e.addScaledVector(l[6],.315392*(3*r*r-1)),e.addScaledVector(l[7],1.092548*(n*r)),e.addScaledVector(l[8],.546274*(n*n-i*i)),e}getIrradianceAt(t,e){const n=t.x,i=t.y,r=t.z,l=this.coefficients;return e.copy(l[0]).multiplyScalar(.886227),e.addScaledVector(l[1],2*.511664*i),e.addScaledVector(l[2],2*.511664*r),e.addScaledVector(l[3],2*.511664*n),e.addScaledVector(l[4],2*.429043*n*i),e.addScaledVector(l[5],2*.429043*i*r),e.addScaledVector(l[6],.743125*r*r-.247708),e.addScaledVector(l[7],2*.429043*n*r),e.addScaledVector(l[8],.429043*(n*n-i*i)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(t.coefficients[n],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let n=0;n<9;n++)this.coefficients[n].lerp(t.coefficients[n],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(t,e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(t,e+i*3);return this}toArray(t=[],e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(t,e+i*3);return t}static getBasisAt(t,e){const n=t.x,i=t.y,r=t.z;e[0]=.282095,e[1]=.488603*i,e[2]=.488603*r,e[3]=.488603*n,e[4]=1.092548*n*i,e[5]=1.092548*i*r,e[6]=.315392*(3*r*r-1),e[7]=1.092548*n*r,e[8]=.546274*(n*n-i*i)}}class KS extends Na{constructor(t=new ZS,e=1){super(void 0,e),this.isLightProbe=!0,this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}class Vf extends hi{constructor(t){super(t),this.textures={}}load(t,e,n,i){const r=this,l=new Js(r.manager);l.setPath(r.path),l.setRequestHeader(r.requestHeader),l.setWithCredentials(r.withCredentials),l.load(t,function(c){try{e(r.parse(JSON.parse(c)))}catch(h){i?i(h):console.error(h),r.manager.itemError(t)}},n,i)}parse(t){const e=this.textures;function n(r){return e[r]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",r),e[r]}const i=this.createMaterialFromType(t.type);if(t.uuid!==void 0&&(i.uuid=t.uuid),t.name!==void 0&&(i.name=t.name),t.color!==void 0&&i.color!==void 0&&i.color.setHex(t.color),t.roughness!==void 0&&(i.roughness=t.roughness),t.metalness!==void 0&&(i.metalness=t.metalness),t.sheen!==void 0&&(i.sheen=t.sheen),t.sheenColor!==void 0&&(i.sheenColor=new kt().setHex(t.sheenColor)),t.sheenRoughness!==void 0&&(i.sheenRoughness=t.sheenRoughness),t.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(t.emissive),t.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(t.specular),t.specularIntensity!==void 0&&(i.specularIntensity=t.specularIntensity),t.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(t.specularColor),t.shininess!==void 0&&(i.shininess=t.shininess),t.clearcoat!==void 0&&(i.clearcoat=t.clearcoat),t.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=t.clearcoatRoughness),t.dispersion!==void 0&&(i.dispersion=t.dispersion),t.iridescence!==void 0&&(i.iridescence=t.iridescence),t.iridescenceIOR!==void 0&&(i.iridescenceIOR=t.iridescenceIOR),t.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=t.iridescenceThicknessRange),t.transmission!==void 0&&(i.transmission=t.transmission),t.thickness!==void 0&&(i.thickness=t.thickness),t.attenuationDistance!==void 0&&(i.attenuationDistance=t.attenuationDistance),t.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(t.attenuationColor),t.anisotropy!==void 0&&(i.anisotropy=t.anisotropy),t.anisotropyRotation!==void 0&&(i.anisotropyRotation=t.anisotropyRotation),t.fog!==void 0&&(i.fog=t.fog),t.flatShading!==void 0&&(i.flatShading=t.flatShading),t.blending!==void 0&&(i.blending=t.blending),t.combine!==void 0&&(i.combine=t.combine),t.side!==void 0&&(i.side=t.side),t.shadowSide!==void 0&&(i.shadowSide=t.shadowSide),t.opacity!==void 0&&(i.opacity=t.opacity),t.transparent!==void 0&&(i.transparent=t.transparent),t.alphaTest!==void 0&&(i.alphaTest=t.alphaTest),t.alphaHash!==void 0&&(i.alphaHash=t.alphaHash),t.depthFunc!==void 0&&(i.depthFunc=t.depthFunc),t.depthTest!==void 0&&(i.depthTest=t.depthTest),t.depthWrite!==void 0&&(i.depthWrite=t.depthWrite),t.colorWrite!==void 0&&(i.colorWrite=t.colorWrite),t.blendSrc!==void 0&&(i.blendSrc=t.blendSrc),t.blendDst!==void 0&&(i.blendDst=t.blendDst),t.blendEquation!==void 0&&(i.blendEquation=t.blendEquation),t.blendSrcAlpha!==void 0&&(i.blendSrcAlpha=t.blendSrcAlpha),t.blendDstAlpha!==void 0&&(i.blendDstAlpha=t.blendDstAlpha),t.blendEquationAlpha!==void 0&&(i.blendEquationAlpha=t.blendEquationAlpha),t.blendColor!==void 0&&i.blendColor!==void 0&&i.blendColor.setHex(t.blendColor),t.blendAlpha!==void 0&&(i.blendAlpha=t.blendAlpha),t.stencilWriteMask!==void 0&&(i.stencilWriteMask=t.stencilWriteMask),t.stencilFunc!==void 0&&(i.stencilFunc=t.stencilFunc),t.stencilRef!==void 0&&(i.stencilRef=t.stencilRef),t.stencilFuncMask!==void 0&&(i.stencilFuncMask=t.stencilFuncMask),t.stencilFail!==void 0&&(i.stencilFail=t.stencilFail),t.stencilZFail!==void 0&&(i.stencilZFail=t.stencilZFail),t.stencilZPass!==void 0&&(i.stencilZPass=t.stencilZPass),t.stencilWrite!==void 0&&(i.stencilWrite=t.stencilWrite),t.wireframe!==void 0&&(i.wireframe=t.wireframe),t.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=t.wireframeLinewidth),t.wireframeLinecap!==void 0&&(i.wireframeLinecap=t.wireframeLinecap),t.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=t.wireframeLinejoin),t.rotation!==void 0&&(i.rotation=t.rotation),t.linewidth!==void 0&&(i.linewidth=t.linewidth),t.dashSize!==void 0&&(i.dashSize=t.dashSize),t.gapSize!==void 0&&(i.gapSize=t.gapSize),t.scale!==void 0&&(i.scale=t.scale),t.polygonOffset!==void 0&&(i.polygonOffset=t.polygonOffset),t.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=t.polygonOffsetFactor),t.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=t.polygonOffsetUnits),t.dithering!==void 0&&(i.dithering=t.dithering),t.alphaToCoverage!==void 0&&(i.alphaToCoverage=t.alphaToCoverage),t.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=t.premultipliedAlpha),t.forceSinglePass!==void 0&&(i.forceSinglePass=t.forceSinglePass),t.visible!==void 0&&(i.visible=t.visible),t.toneMapped!==void 0&&(i.toneMapped=t.toneMapped),t.userData!==void 0&&(i.userData=t.userData),t.vertexColors!==void 0&&(typeof t.vertexColors=="number"?i.vertexColors=t.vertexColors>0:i.vertexColors=t.vertexColors),t.uniforms!==void 0)for(const r in t.uniforms){const l=t.uniforms[r];switch(i.uniforms[r]={},l.type){case"t":i.uniforms[r].value=n(l.value);break;case"c":i.uniforms[r].value=new kt().setHex(l.value);break;case"v2":i.uniforms[r].value=new ft().fromArray(l.value);break;case"v3":i.uniforms[r].value=new L().fromArray(l.value);break;case"v4":i.uniforms[r].value=new Ae().fromArray(l.value);break;case"m3":i.uniforms[r].value=new _e().fromArray(l.value);break;case"m4":i.uniforms[r].value=new he().fromArray(l.value);break;default:i.uniforms[r].value=l.value}}if(t.defines!==void 0&&(i.defines=t.defines),t.vertexShader!==void 0&&(i.vertexShader=t.vertexShader),t.fragmentShader!==void 0&&(i.fragmentShader=t.fragmentShader),t.glslVersion!==void 0&&(i.glslVersion=t.glslVersion),t.extensions!==void 0)for(const r in t.extensions)i.extensions[r]=t.extensions[r];if(t.lights!==void 0&&(i.lights=t.lights),t.clipping!==void 0&&(i.clipping=t.clipping),t.size!==void 0&&(i.size=t.size),t.sizeAttenuation!==void 0&&(i.sizeAttenuation=t.sizeAttenuation),t.map!==void 0&&(i.map=n(t.map)),t.matcap!==void 0&&(i.matcap=n(t.matcap)),t.alphaMap!==void 0&&(i.alphaMap=n(t.alphaMap)),t.bumpMap!==void 0&&(i.bumpMap=n(t.bumpMap)),t.bumpScale!==void 0&&(i.bumpScale=t.bumpScale),t.normalMap!==void 0&&(i.normalMap=n(t.normalMap)),t.normalMapType!==void 0&&(i.normalMapType=t.normalMapType),t.normalScale!==void 0){let r=t.normalScale;Array.isArray(r)===!1&&(r=[r,r]),i.normalScale=new ft().fromArray(r)}return t.displacementMap!==void 0&&(i.displacementMap=n(t.displacementMap)),t.displacementScale!==void 0&&(i.displacementScale=t.displacementScale),t.displacementBias!==void 0&&(i.displacementBias=t.displacementBias),t.roughnessMap!==void 0&&(i.roughnessMap=n(t.roughnessMap)),t.metalnessMap!==void 0&&(i.metalnessMap=n(t.metalnessMap)),t.emissiveMap!==void 0&&(i.emissiveMap=n(t.emissiveMap)),t.emissiveIntensity!==void 0&&(i.emissiveIntensity=t.emissiveIntensity),t.specularMap!==void 0&&(i.specularMap=n(t.specularMap)),t.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(t.specularIntensityMap)),t.specularColorMap!==void 0&&(i.specularColorMap=n(t.specularColorMap)),t.envMap!==void 0&&(i.envMap=n(t.envMap)),t.envMapRotation!==void 0&&i.envMapRotation.fromArray(t.envMapRotation),t.envMapIntensity!==void 0&&(i.envMapIntensity=t.envMapIntensity),t.reflectivity!==void 0&&(i.reflectivity=t.reflectivity),t.refractionRatio!==void 0&&(i.refractionRatio=t.refractionRatio),t.lightMap!==void 0&&(i.lightMap=n(t.lightMap)),t.lightMapIntensity!==void 0&&(i.lightMapIntensity=t.lightMapIntensity),t.aoMap!==void 0&&(i.aoMap=n(t.aoMap)),t.aoMapIntensity!==void 0&&(i.aoMapIntensity=t.aoMapIntensity),t.gradientMap!==void 0&&(i.gradientMap=n(t.gradientMap)),t.clearcoatMap!==void 0&&(i.clearcoatMap=n(t.clearcoatMap)),t.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(t.clearcoatRoughnessMap)),t.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(t.clearcoatNormalMap)),t.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new ft().fromArray(t.clearcoatNormalScale)),t.iridescenceMap!==void 0&&(i.iridescenceMap=n(t.iridescenceMap)),t.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(t.iridescenceThicknessMap)),t.transmissionMap!==void 0&&(i.transmissionMap=n(t.transmissionMap)),t.thicknessMap!==void 0&&(i.thicknessMap=n(t.thicknessMap)),t.anisotropyMap!==void 0&&(i.anisotropyMap=n(t.anisotropyMap)),t.sheenColorMap!==void 0&&(i.sheenColorMap=n(t.sheenColorMap)),t.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(t.sheenRoughnessMap)),i}setTextures(t){return this.textures=t,this}createMaterialFromType(t){return Vf.createMaterialFromType(t)}static createMaterialFromType(t){const e={ShadowMaterial:RS,SpriteMaterial:dg,RawShaderMaterial:DS,ShaderMaterial:wi,PointsMaterial:mg,MeshPhysicalMaterial:US,MeshStandardMaterial:Tg,MeshPhongMaterial:PS,MeshToonMaterial:NS,MeshNormalMaterial:LS,MeshLambertMaterial:IS,MeshDepthMaterial:Ag,MeshDistanceMaterial:wg,MeshBasicMaterial:Ua,MeshMatcapMaterial:OS,LineDashedMaterial:zS,LineBasicMaterial:ii,Material:Yn};return new e[t]}}class zm{static extractUrlBase(t){const e=t.lastIndexOf("/");return e===-1?"./":t.slice(0,e+1)}static resolveURL(t,e){return typeof t!="string"||t===""?"":(/^https?:\/\//i.test(e)&&/^\//.test(t)&&(e=e.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(t)||/^data:.*,.*$/i.test(t)||/^blob:.*$/i.test(t)?t:e+t)}}class Ng extends Se{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(t){return super.copy(t),this.instanceCount=t.instanceCount,this}toJSON(){const t=super.toJSON();return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}class JS extends hi{constructor(t){super(t)}load(t,e,n,i){const r=this,l=new Js(r.manager);l.setPath(r.path),l.setRequestHeader(r.requestHeader),l.setWithCredentials(r.withCredentials),l.load(t,function(c){try{e(r.parse(JSON.parse(c)))}catch(h){i?i(h):console.error(h),r.manager.itemError(t)}},n,i)}parse(t){const e={},n={};function i(v,x){if(e[x]!==void 0)return e[x];const S=v.interleavedBuffers[x],_=r(v,S.buffer),E=wo(S.type,_),T=new bf(E,S.stride);return T.uuid=S.uuid,e[x]=T,T}function r(v,x){if(n[x]!==void 0)return n[x];const S=v.arrayBuffers[x],_=new Uint32Array(S).buffer;return n[x]=_,_}const l=t.isInstancedBufferGeometry?new Ng:new Se,c=t.data.index;if(c!==void 0){const v=wo(c.type,c.array);l.setIndex(new qe(v,1))}const h=t.data.attributes;for(const v in h){const x=h[v];let M;if(x.isInterleavedBufferAttribute){const S=i(t.data,x.data);M=new Ei(S,x.itemSize,x.offset,x.normalized)}else{const S=wo(x.type,x.array),_=x.isInstancedBufferAttribute?Vo:qe;M=new _(S,x.itemSize,x.normalized)}x.name!==void 0&&(M.name=x.name),x.usage!==void 0&&M.setUsage(x.usage),l.setAttribute(v,M)}const f=t.data.morphAttributes;if(f)for(const v in f){const x=f[v],M=[];for(let S=0,_=x.length;S<_;S++){const E=x[S];let T;if(E.isInterleavedBufferAttribute){const A=i(t.data,E.data);T=new Ei(A,E.itemSize,E.offset,E.normalized)}else{const A=wo(E.type,E.array);T=new qe(A,E.itemSize,E.normalized)}E.name!==void 0&&(T.name=E.name),M.push(T)}l.morphAttributes[v]=M}t.data.morphTargetsRelative&&(l.morphTargetsRelative=!0);const m=t.data.groups||t.data.drawcalls||t.data.offsets;if(m!==void 0)for(let v=0,x=m.length;v!==x;++v){const M=m[v];l.addGroup(M.start,M.count,M.materialIndex)}const g=t.data.boundingSphere;return g!==void 0&&(l.boundingSphere=new yn().fromJSON(g)),t.name&&(l.name=t.name),t.userData&&(l.userData=t.userData),l}}class PA extends hi{constructor(t){super(t)}load(t,e,n,i){const r=this,l=this.path===""?zm.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||l;const c=new Js(this.manager);c.setPath(this.path),c.setRequestHeader(this.requestHeader),c.setWithCredentials(this.withCredentials),c.load(t,function(h){let f=null;try{f=JSON.parse(h)}catch(m){i!==void 0&&i(m),console.error("THREE:ObjectLoader: Can't parse "+t+".",m.message);return}const p=f.metadata;if(p===void 0||p.type===void 0||p.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+t)),console.error("THREE.ObjectLoader: Can't load "+t);return}r.parse(f,e)},n,i)}async loadAsync(t,e){const n=this,i=this.path===""?zm.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||i;const r=new Js(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials);const l=await r.loadAsync(t,e),c=JSON.parse(l),h=c.metadata;if(h===void 0||h.type===void 0||h.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+t);return await n.parseAsync(c)}parse(t,e){const n=this.parseAnimations(t.animations),i=this.parseShapes(t.shapes),r=this.parseGeometries(t.geometries,i),l=this.parseImages(t.images,function(){e!==void 0&&e(f)}),c=this.parseTextures(t.textures,l),h=this.parseMaterials(t.materials,c),f=this.parseObject(t.object,r,h,c,n),p=this.parseSkeletons(t.skeletons,f);if(this.bindSkeletons(f,p),this.bindLightTargets(f),e!==void 0){let m=!1;for(const g in l)if(l[g].data instanceof HTMLImageElement){m=!0;break}m===!1&&e(f)}return f}async parseAsync(t){const e=this.parseAnimations(t.animations),n=this.parseShapes(t.shapes),i=this.parseGeometries(t.geometries,n),r=await this.parseImagesAsync(t.images),l=this.parseTextures(t.textures,r),c=this.parseMaterials(t.materials,l),h=this.parseObject(t.object,i,c,l,e),f=this.parseSkeletons(t.skeletons,h);return this.bindSkeletons(h,f),this.bindLightTargets(h),h}parseShapes(t){const e={};if(t!==void 0)for(let n=0,i=t.length;n<i;n++){const r=new Sr().fromJSON(t[n]);e[r.uuid]=r}return e}parseSkeletons(t,e){const n={},i={};if(e.traverse(function(r){r.isBone&&(i[r.uuid]=r)}),t!==void 0)for(let r=0,l=t.length;r<l;r++){const c=new Ef().fromJSON(t[r],i);n[c.uuid]=c}return n}parseGeometries(t,e){const n={};if(t!==void 0){const i=new JS;for(let r=0,l=t.length;r<l;r++){let c;const h=t[r];switch(h.type){case"BufferGeometry":case"InstancedBufferGeometry":c=i.parse(h);break;default:h.type in W_?c=W_[h.type].fromJSON(h,e):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${h.type}"`)}c.uuid=h.uuid,h.name!==void 0&&(c.name=h.name),h.userData!==void 0&&(c.userData=h.userData),n[h.uuid]=c}}return n}parseMaterials(t,e){const n={},i={};if(t!==void 0){const r=new Vf;r.setTextures(e);for(let l=0,c=t.length;l<c;l++){const h=t[l];n[h.uuid]===void 0&&(n[h.uuid]=r.parse(h)),i[h.uuid]=n[h.uuid]}}return i}parseAnimations(t){const e={};if(t!==void 0)for(let n=0;n<t.length;n++){const i=t[n],r=dc.parse(i);e[r.uuid]=r}return e}parseImages(t,e){const n=this,i={};let r;function l(h){return n.manager.itemStart(h),r.load(h,function(){n.manager.itemEnd(h)},void 0,function(){n.manager.itemError(h),n.manager.itemEnd(h)})}function c(h){if(typeof h=="string"){const f=h,p=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(f)?f:n.resourcePath+f;return l(p)}else return h.data?{data:wo(h.type,h.data),width:h.width,height:h.height}:null}if(t!==void 0&&t.length>0){const h=new Ug(e);r=new pc(h),r.setCrossOrigin(this.crossOrigin);for(let f=0,p=t.length;f<p;f++){const m=t[f],g=m.url;if(Array.isArray(g)){const v=[];for(let x=0,M=g.length;x<M;x++){const S=g[x],_=c(S);_!==null&&(_ instanceof HTMLImageElement?v.push(_):v.push(new _s(_.data,_.width,_.height)))}i[m.uuid]=new Ea(v)}else{const v=c(m.url);i[m.uuid]=new Ea(v)}}}return i}async parseImagesAsync(t){const e=this,n={};let i;async function r(l){if(typeof l=="string"){const c=l,h=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:e.resourcePath+c;return await i.loadAsync(h)}else return l.data?{data:wo(l.type,l.data),width:l.width,height:l.height}:null}if(t!==void 0&&t.length>0){i=new pc(this.manager),i.setCrossOrigin(this.crossOrigin);for(let l=0,c=t.length;l<c;l++){const h=t[l],f=h.url;if(Array.isArray(f)){const p=[];for(let m=0,g=f.length;m<g;m++){const v=f[m],x=await r(v);x!==null&&(x instanceof HTMLImageElement?p.push(x):p.push(new _s(x.data,x.width,x.height)))}n[h.uuid]=new Ea(p)}else{const p=await r(h.url);n[h.uuid]=new Ea(p)}}}return n}parseTextures(t,e){function n(r,l){return typeof r=="number"?r:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",r),l[r])}const i={};if(t!==void 0)for(let r=0,l=t.length;r<l;r++){const c=t[r];c.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',c.uuid),e[c.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",c.image);const h=e[c.image],f=h.data;let p;Array.isArray(f)?(p=new _c,f.length===6&&(p.needsUpdate=!0)):(f&&f.data?p=new _s:p=new en,f&&(p.needsUpdate=!0)),p.source=h,p.uuid=c.uuid,c.name!==void 0&&(p.name=c.name),c.mapping!==void 0&&(p.mapping=n(c.mapping,NA)),c.channel!==void 0&&(p.channel=c.channel),c.offset!==void 0&&p.offset.fromArray(c.offset),c.repeat!==void 0&&p.repeat.fromArray(c.repeat),c.center!==void 0&&p.center.fromArray(c.center),c.rotation!==void 0&&(p.rotation=c.rotation),c.wrap!==void 0&&(p.wrapS=n(c.wrap[0],j_),p.wrapT=n(c.wrap[1],j_)),c.format!==void 0&&(p.format=c.format),c.internalFormat!==void 0&&(p.internalFormat=c.internalFormat),c.type!==void 0&&(p.type=c.type),c.colorSpace!==void 0&&(p.colorSpace=c.colorSpace),c.minFilter!==void 0&&(p.minFilter=n(c.minFilter,Z_)),c.magFilter!==void 0&&(p.magFilter=n(c.magFilter,Z_)),c.anisotropy!==void 0&&(p.anisotropy=c.anisotropy),c.flipY!==void 0&&(p.flipY=c.flipY),c.generateMipmaps!==void 0&&(p.generateMipmaps=c.generateMipmaps),c.premultiplyAlpha!==void 0&&(p.premultiplyAlpha=c.premultiplyAlpha),c.unpackAlignment!==void 0&&(p.unpackAlignment=c.unpackAlignment),c.compareFunction!==void 0&&(p.compareFunction=c.compareFunction),c.userData!==void 0&&(p.userData=c.userData),i[c.uuid]=p}return i}parseObject(t,e,n,i,r){let l;function c(g){return e[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",g),e[g]}function h(g){if(g!==void 0){if(Array.isArray(g)){const v=[];for(let x=0,M=g.length;x<M;x++){const S=g[x];n[S]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",S),v.push(n[S])}return v}return n[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",g),n[g]}}function f(g){return i[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",g),i[g]}let p,m;switch(t.type){case"Scene":l=new fg,t.background!==void 0&&(Number.isInteger(t.background)?l.background=new kt(t.background):l.background=f(t.background)),t.environment!==void 0&&(l.environment=f(t.environment)),t.fog!==void 0&&(t.fog.type==="Fog"?l.fog=new Mf(t.fog.color,t.fog.near,t.fog.far):t.fog.type==="FogExp2"&&(l.fog=new Sf(t.fog.color,t.fog.density)),t.fog.name!==""&&(l.fog.name=t.fog.name)),t.backgroundBlurriness!==void 0&&(l.backgroundBlurriness=t.backgroundBlurriness),t.backgroundIntensity!==void 0&&(l.backgroundIntensity=t.backgroundIntensity),t.backgroundRotation!==void 0&&l.backgroundRotation.fromArray(t.backgroundRotation),t.environmentIntensity!==void 0&&(l.environmentIntensity=t.environmentIntensity),t.environmentRotation!==void 0&&l.environmentRotation.fromArray(t.environmentRotation);break;case"PerspectiveCamera":l=new sn(t.fov,t.aspect,t.near,t.far),t.focus!==void 0&&(l.focus=t.focus),t.zoom!==void 0&&(l.zoom=t.zoom),t.filmGauge!==void 0&&(l.filmGauge=t.filmGauge),t.filmOffset!==void 0&&(l.filmOffset=t.filmOffset),t.view!==void 0&&(l.view=Object.assign({},t.view));break;case"OrthographicCamera":l=new ys(t.left,t.right,t.top,t.bottom,t.near,t.far),t.zoom!==void 0&&(l.zoom=t.zoom),t.view!==void 0&&(l.view=Object.assign({},t.view));break;case"AmbientLight":l=new YS(t.color,t.intensity);break;case"DirectionalLight":l=new qS(t.color,t.intensity),l.target=t.target||"";break;case"PointLight":l=new XS(t.color,t.intensity,t.distance,t.decay);break;case"RectAreaLight":l=new jS(t.color,t.intensity,t.width,t.height);break;case"SpotLight":l=new WS(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay),l.target=t.target||"";break;case"HemisphereLight":l=new kS(t.color,t.groundColor,t.intensity);break;case"LightProbe":l=new KS().fromJSON(t);break;case"SkinnedMesh":p=c(t.geometry),m=h(t.material),l=new pS(p,m),t.bindMode!==void 0&&(l.bindMode=t.bindMode),t.bindMatrix!==void 0&&l.bindMatrix.fromArray(t.bindMatrix),t.skeleton!==void 0&&(l.skeleton=t.skeleton);break;case"Mesh":p=c(t.geometry),m=h(t.material),l=new hn(p,m);break;case"InstancedMesh":p=c(t.geometry),m=h(t.material);const g=t.count,v=t.instanceMatrix,x=t.instanceColor;l=new mS(p,m,g),l.instanceMatrix=new Vo(new Float32Array(v.array),16),x!==void 0&&(l.instanceColor=new Vo(new Float32Array(x.array),x.itemSize));break;case"BatchedMesh":p=c(t.geometry),m=h(t.material),l=new gS(t.maxInstanceCount,t.maxVertexCount,t.maxIndexCount,m),l.geometry=p,l.perObjectFrustumCulled=t.perObjectFrustumCulled,l.sortObjects=t.sortObjects,l._drawRanges=t.drawRanges,l._reservedRanges=t.reservedRanges,l._geometryInfo=t.geometryInfo.map(M=>{let S=null,_=null;return M.boundingBox!==void 0&&(S=new _n().fromJSON(M.boundingBox)),M.boundingSphere!==void 0&&(_=new yn().fromJSON(M.boundingSphere)),{...M,boundingBox:S,boundingSphere:_}}),l._instanceInfo=t.instanceInfo,l._availableInstanceIds=t._availableInstanceIds,l._availableGeometryIds=t._availableGeometryIds,l._nextIndexStart=t.nextIndexStart,l._nextVertexStart=t.nextVertexStart,l._geometryCount=t.geometryCount,l._maxInstanceCount=t.maxInstanceCount,l._maxVertexCount=t.maxVertexCount,l._maxIndexCount=t.maxIndexCount,l._geometryInitialized=t.geometryInitialized,l._matricesTexture=f(t.matricesTexture.uuid),l._indirectTexture=f(t.indirectTexture.uuid),t.colorsTexture!==void 0&&(l._colorsTexture=f(t.colorsTexture.uuid)),t.boundingSphere!==void 0&&(l.boundingSphere=new yn().fromJSON(t.boundingSphere)),t.boundingBox!==void 0&&(l.boundingBox=new _n().fromJSON(t.boundingBox));break;case"LOD":l=new dS;break;case"Line":l=new Ca(c(t.geometry),h(t.material));break;case"LineLoop":l=new vS(c(t.geometry),h(t.material));break;case"LineSegments":l=new Ms(c(t.geometry),h(t.material));break;case"PointCloud":case"Points":l=new _S(c(t.geometry),h(t.material));break;case"Sprite":l=new fS(h(t.material));break;case"Group":l=new Co;break;case"Bone":l=new pg;break;default:l=new Le}if(l.uuid=t.uuid,t.name!==void 0&&(l.name=t.name),t.matrix!==void 0?(l.matrix.fromArray(t.matrix),t.matrixAutoUpdate!==void 0&&(l.matrixAutoUpdate=t.matrixAutoUpdate),l.matrixAutoUpdate&&l.matrix.decompose(l.position,l.quaternion,l.scale)):(t.position!==void 0&&l.position.fromArray(t.position),t.rotation!==void 0&&l.rotation.fromArray(t.rotation),t.quaternion!==void 0&&l.quaternion.fromArray(t.quaternion),t.scale!==void 0&&l.scale.fromArray(t.scale)),t.up!==void 0&&l.up.fromArray(t.up),t.castShadow!==void 0&&(l.castShadow=t.castShadow),t.receiveShadow!==void 0&&(l.receiveShadow=t.receiveShadow),t.shadow&&(t.shadow.intensity!==void 0&&(l.shadow.intensity=t.shadow.intensity),t.shadow.bias!==void 0&&(l.shadow.bias=t.shadow.bias),t.shadow.normalBias!==void 0&&(l.shadow.normalBias=t.shadow.normalBias),t.shadow.radius!==void 0&&(l.shadow.radius=t.shadow.radius),t.shadow.mapSize!==void 0&&l.shadow.mapSize.fromArray(t.shadow.mapSize),t.shadow.camera!==void 0&&(l.shadow.camera=this.parseObject(t.shadow.camera))),t.visible!==void 0&&(l.visible=t.visible),t.frustumCulled!==void 0&&(l.frustumCulled=t.frustumCulled),t.renderOrder!==void 0&&(l.renderOrder=t.renderOrder),t.userData!==void 0&&(l.userData=t.userData),t.layers!==void 0&&(l.layers.mask=t.layers),t.children!==void 0){const g=t.children;for(let v=0;v<g.length;v++)l.add(this.parseObject(g[v],e,n,i,r))}if(t.animations!==void 0){const g=t.animations;for(let v=0;v<g.length;v++){const x=g[v];l.animations.push(r[x])}}if(t.type==="LOD"){t.autoUpdate!==void 0&&(l.autoUpdate=t.autoUpdate);const g=t.levels;for(let v=0;v<g.length;v++){const x=g[v],M=l.getObjectByProperty("uuid",x.object);M!==void 0&&l.addLevel(M,x.distance,x.hysteresis)}}return l}bindSkeletons(t,e){Object.keys(e).length!==0&&t.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=e[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}bindLightTargets(t){t.traverse(function(e){if(e.isDirectionalLight||e.isSpotLight){const n=e.target,i=t.getObjectByProperty("uuid",n);i!==void 0?e.target=i:e.target=new Le}})}}const NA={UVMapping:uf,CubeReflectionMapping:Zs,CubeRefractionMapping:Aa,EquirectangularReflectionMapping:Ql,EquirectangularRefractionMapping:$l,CubeUVReflectionMapping:Xo},j_={RepeatWrapping:tc,ClampToEdgeWrapping:Fi,MirroredRepeatWrapping:ec},Z_={NearestFilter:Ln,NearestMipmapNearestFilter:Qm,NearestMipmapLinearFilter:Ao,LinearFilter:vn,LinearMipmapNearestFilter:Gl,LinearMipmapLinearFilter:ms},Yp=new WeakMap;class LA extends hi{constructor(t){super(t),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(t){return this.options=t,this}load(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,l=gs.get(`image-bitmap:${t}`);if(l!==void 0){if(r.manager.itemStart(t),l.then){l.then(f=>{if(Yp.has(l)===!0)i&&i(Yp.get(l)),r.manager.itemError(t),r.manager.itemEnd(t);else return e&&e(f),r.manager.itemEnd(t),f});return}return setTimeout(function(){e&&e(l),r.manager.itemEnd(t)},0),l}const c={};c.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",c.headers=this.requestHeader;const h=fetch(t,c).then(function(f){return f.blob()}).then(function(f){return createImageBitmap(f,Object.assign(r.options,{colorSpaceConversion:"none"}))}).then(function(f){return gs.add(`image-bitmap:${t}`,f),e&&e(f),r.manager.itemEnd(t),f}).catch(function(f){i&&i(f),Yp.set(h,f),gs.remove(`image-bitmap:${t}`),r.manager.itemError(t),r.manager.itemEnd(t)});gs.add(`image-bitmap:${t}`,h),r.manager.itemStart(t)}}let Yu;class Lg{static getContext(){return Yu===void 0&&(Yu=new(window.AudioContext||window.webkitAudioContext)),Yu}static setContext(t){Yu=t}}class IA extends hi{constructor(t){super(t)}load(t,e,n,i){const r=this,l=new Js(this.manager);l.setResponseType("arraybuffer"),l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(t,function(h){try{const f=h.slice(0);Lg.getContext().decodeAudioData(f,function(m){e(m)}).catch(c)}catch(f){c(f)}},n,i);function c(h){i?i(h):console.error(h),r.manager.itemError(t)}}}const K_=new he,J_=new he,ar=new he;class OA{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new sn,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new sn,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(t){const e=this._cache;if(e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep,ar.copy(t.projectionMatrix);const i=e.eyeSep/2,r=i*e.near/e.focus,l=e.near*Math.tan(xr*e.fov*.5)/e.zoom;let c,h;J_.elements[12]=-i,K_.elements[12]=i,c=-l*e.aspect+r,h=l*e.aspect+r,ar.elements[0]=2*e.near/(h-c),ar.elements[8]=(h+c)/(h-c),this.cameraL.projectionMatrix.copy(ar),c=-l*e.aspect-r,h=l*e.aspect-r,ar.elements[0]=2*e.near/(h-c),ar.elements[8]=(h+c)/(h-c),this.cameraR.projectionMatrix.copy(ar)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(J_),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(K_)}}class QS extends sn{constructor(t=[]){super(),this.isArrayCamera=!0,this.isMultiViewCamera=!1,this.cameras=t}}class Ig{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=performance.now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=performance.now();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}const rr=new L,jp=new qn,zA=new L,or=new L,lr=new L;class BA extends Le{constructor(){super(),this.type="AudioListener",this.context=Lg.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Ig}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(t){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}updateMatrixWorld(t){super.updateMatrixWorld(t);const e=this.context.listener;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(rr,jp,zA),or.set(0,0,-1).applyQuaternion(jp),lr.set(0,1,0).applyQuaternion(jp),e.positionX){const n=this.context.currentTime+this.timeDelta;e.positionX.linearRampToValueAtTime(rr.x,n),e.positionY.linearRampToValueAtTime(rr.y,n),e.positionZ.linearRampToValueAtTime(rr.z,n),e.forwardX.linearRampToValueAtTime(or.x,n),e.forwardY.linearRampToValueAtTime(or.y,n),e.forwardZ.linearRampToValueAtTime(or.z,n),e.upX.linearRampToValueAtTime(lr.x,n),e.upY.linearRampToValueAtTime(lr.y,n),e.upZ.linearRampToValueAtTime(lr.z,n)}else e.setPosition(rr.x,rr.y,rr.z),e.setOrientation(or.x,or.y,or.z,lr.x,lr.y,lr.z)}}class $S extends Le{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(t=0){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(this.context.currentTime+t),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(t){return t||(t=[]),this._connected===!0?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){return this.detune=t,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=t,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1,this._progress=0}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=t,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}copy(t,e){return super.copy(t,e),t.sourceType!=="buffer"?(console.warn("THREE.Audio: Audio source type cannot be copied."),this):(this.autoplay=t.autoplay,this.buffer=t.buffer,this.detune=t.detune,this.loop=t.loop,this.loopStart=t.loopStart,this.loopEnd=t.loopEnd,this.offset=t.offset,this.duration=t.duration,this.playbackRate=t.playbackRate,this.hasPlaybackControl=t.hasPlaybackControl,this.sourceType=t.sourceType,this.filters=t.filters.slice(),this)}clone(t){return new this.constructor(this.listener).copy(this,t)}}const cr=new L,Q_=new qn,FA=new L,ur=new L;class HA extends $S{constructor(t){super(t),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){return super.connect(),this.panner.connect(this.gain),this}disconnect(){return super.disconnect(),this.panner.disconnect(this.gain),this}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(t){return this.panner.refDistance=t,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(t){return this.panner.rolloffFactor=t,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(t){return this.panner.distanceModel=t,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(t){return this.panner.maxDistance=t,this}setDirectionalCone(t,e,n){return this.panner.coneInnerAngle=t,this.panner.coneOuterAngle=e,this.panner.coneOuterGain=n,this}updateMatrixWorld(t){if(super.updateMatrixWorld(t),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(cr,Q_,FA),ur.set(0,0,1).applyQuaternion(Q_);const e=this.panner;if(e.positionX){const n=this.context.currentTime+this.listener.timeDelta;e.positionX.linearRampToValueAtTime(cr.x,n),e.positionY.linearRampToValueAtTime(cr.y,n),e.positionZ.linearRampToValueAtTime(cr.z,n),e.orientationX.linearRampToValueAtTime(ur.x,n),e.orientationY.linearRampToValueAtTime(ur.y,n),e.orientationZ.linearRampToValueAtTime(ur.z,n)}else e.setPosition(cr.x,cr.y,cr.z),e.setOrientation(ur.x,ur.y,ur.z)}}class VA{constructor(t,e=2048){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=e,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;const e=this.getFrequencyData();for(let n=0;n<e.length;n++)t+=e[n];return t/e.length}}class tM{constructor(t,e,n){this.binding=t,this.valueSize=n;let i,r,l;switch(e){case"quaternion":i=this._slerp,r=this._slerpAdditive,l=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,l=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,r=this._lerpAdditive,l=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=l,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const n=this.buffer,i=this.valueSize,r=t*i+i;let l=this.cumulativeWeight;if(l===0){for(let c=0;c!==i;++c)n[r+c]=n[c];l=e}else{l+=e;const c=e/l;this._mixBufferRegion(n,r,0,c,i)}this.cumulativeWeight=l}accumulateAdditive(t){const e=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(e,i,0,t,n),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,n=this.buffer,i=t*e+e,r=this.cumulativeWeight,l=this.cumulativeWeightAdditive,c=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const h=e*this._origIndex;this._mixBufferRegion(n,i,h,1-r,e)}l>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*e,1,e);for(let h=e,f=e+e;h!==f;++h)if(n[h]!==n[h+e]){c.setValue(n,i);break}}saveOriginalState(){const t=this.binding,e=this.buffer,n=this.valueSize,i=n*this._origIndex;t.getValue(e,i);for(let r=n,l=i;r!==l;++r)e[r]=e[i+r%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=this.valueSize*3;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]}_select(t,e,n,i,r){if(i>=.5)for(let l=0;l!==r;++l)t[e+l]=t[n+l]}_slerp(t,e,n,i){qn.slerpFlat(t,e,t,e,t,n,i)}_slerpAdditive(t,e,n,i,r){const l=this._workIndex*r;qn.multiplyQuaternionsFlat(t,l,t,e,t,n),qn.slerpFlat(t,e,t,e,t,l,i)}_lerp(t,e,n,i,r){const l=1-i;for(let c=0;c!==r;++c){const h=e+c;t[h]=t[h]*l+t[n+c]*i}}_lerpAdditive(t,e,n,i,r){for(let l=0;l!==r;++l){const c=e+l;t[c]=t[c]+t[n+l]*i}}}const Og="\\[\\]\\.:\\/",GA=new RegExp("["+Og+"]","g"),zg="[^"+Og+"]",kA="[^"+Og.replace("\\.","")+"]",WA=/((?:WC+[\/:])*)/.source.replace("WC",zg),XA=/(WCOD+)?/.source.replace("WCOD",kA),qA=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",zg),YA=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",zg),jA=new RegExp("^"+WA+XA+qA+YA+"$"),ZA=["material","materials","bones","map"];class KA{constructor(t,e,n){const i=n||Ne.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,i)}getValue(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(t,e)}setValue(t,e){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(t,e)}bind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()}unbind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}}class Ne{constructor(t,e,n){this.path=e,this.parsedPath=n||Ne.parseTrackName(e),this.node=Ne.findNode(t,this.parsedPath.nodeName),this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,n){return t&&t.isAnimationObjectGroup?new Ne.Composite(t,e,n):new Ne(t,e,n)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(GA,"")}static parseTrackName(t){const e=jA.exec(t);if(e===null)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const r=n.nodeName.substring(i+1);ZA.indexOf(r)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=r)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n}static findNode(t,e){if(e===void 0||e===""||e==="."||e===-1||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(n!==void 0)return n}if(t.children){const n=function(r){for(let l=0;l<r.length;l++){const c=r[l];if(c.name===e||c.uuid===e)return c;const h=n(c.children);if(h)return h}return null},i=n(t.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.targetObject[this.propertyName]}_getValue_array(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)t[e++]=n[i]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,n=e.objectName,i=e.propertyName;let r=e.propertyIndex;if(t||(t=Ne.findNode(this.rootNode,e.nodeName),this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let f=e.objectIndex;switch(n){case"materials":if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}t=t.material.materials;break;case"bones":if(!t.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}t=t.skeleton.bones;for(let p=0;p<t.length;p++)if(t[p].name===f){f=p;break}break;case"map":if("map"in t){t=t.map;break}if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}t=t.material.map;break;default:if(t[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}t=t[n]}if(f!==void 0){if(t[f]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);return}t=t[f]}}const l=t[i];if(l===void 0){const f=e.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+f+"."+i+" but it wasn't found.",t);return}let c=this.Versioning.None;this.targetObject=t,t.isMaterial===!0?c=this.Versioning.NeedsUpdate:t.isObject3D===!0&&(c=this.Versioning.MatrixWorldNeedsUpdate);let h=this.BindingType.Direct;if(r!==void 0){if(i==="morphTargetInfluences"){if(!t.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!t.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}t.morphTargetDictionary[r]!==void 0&&(r=t.morphTargetDictionary[r])}h=this.BindingType.ArrayElement,this.resolvedProperty=l,this.propertyIndex=r}else l.fromArray!==void 0&&l.toArray!==void 0?(h=this.BindingType.HasFromToArray,this.resolvedProperty=l):Array.isArray(l)?(h=this.BindingType.EntireArray,this.resolvedProperty=l):this.propertyName=i;this.getValue=this.GetterByBindingType[h],this.setValue=this.SetterByBindingTypeAndVersioning[h][c]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Ne.Composite=KA;Ne.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Ne.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Ne.prototype.GetterByBindingType=[Ne.prototype._getValue_direct,Ne.prototype._getValue_array,Ne.prototype._getValue_arrayElement,Ne.prototype._getValue_toArray];Ne.prototype.SetterByBindingTypeAndVersioning=[[Ne.prototype._setValue_direct,Ne.prototype._setValue_direct_setNeedsUpdate,Ne.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Ne.prototype._setValue_array,Ne.prototype._setValue_array_setNeedsUpdate,Ne.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Ne.prototype._setValue_arrayElement,Ne.prototype._setValue_arrayElement_setNeedsUpdate,Ne.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Ne.prototype._setValue_fromArray,Ne.prototype._setValue_fromArray_setNeedsUpdate,Ne.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class JA{constructor(){this.isAnimationObjectGroup=!0,this.uuid=Ti(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const t={};this._indicesByUUID=t;for(let n=0,i=arguments.length;n!==i;++n)t[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}add(){const t=this._objects,e=this._indicesByUUID,n=this._paths,i=this._parsedPaths,r=this._bindings,l=r.length;let c,h=t.length,f=this.nCachedObjects_;for(let p=0,m=arguments.length;p!==m;++p){const g=arguments[p],v=g.uuid;let x=e[v];if(x===void 0){x=h++,e[v]=x,t.push(g);for(let M=0,S=l;M!==S;++M)r[M].push(new Ne(g,n[M],i[M]))}else if(x<f){c=t[x];const M=--f,S=t[M];e[S.uuid]=x,t[x]=S,e[v]=M,t[M]=g;for(let _=0,E=l;_!==E;++_){const T=r[_],A=T[M];let N=T[x];T[x]=A,N===void 0&&(N=new Ne(g,n[_],i[_])),T[M]=N}}else t[x]!==c&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=f}remove(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_;for(let l=0,c=arguments.length;l!==c;++l){const h=arguments[l],f=h.uuid,p=e[f];if(p!==void 0&&p>=r){const m=r++,g=t[m];e[g.uuid]=p,t[p]=g,e[f]=m,t[m]=h;for(let v=0,x=i;v!==x;++v){const M=n[v],S=M[m],_=M[p];M[p]=S,M[m]=_}}}this.nCachedObjects_=r}uncache(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_,l=t.length;for(let c=0,h=arguments.length;c!==h;++c){const f=arguments[c],p=f.uuid,m=e[p];if(m!==void 0)if(delete e[p],m<r){const g=--r,v=t[g],x=--l,M=t[x];e[v.uuid]=m,t[m]=v,e[M.uuid]=g,t[g]=M,t.pop();for(let S=0,_=i;S!==_;++S){const E=n[S],T=E[g],A=E[x];E[m]=T,E[g]=A,E.pop()}}else{const g=--l,v=t[g];g>0&&(e[v.uuid]=m),t[m]=v,t.pop();for(let x=0,M=i;x!==M;++x){const S=n[x];S[m]=S[g],S.pop()}}}this.nCachedObjects_=r}subscribe_(t,e){const n=this._bindingsIndicesByPath;let i=n[t];const r=this._bindings;if(i!==void 0)return r[i];const l=this._paths,c=this._parsedPaths,h=this._objects,f=h.length,p=this.nCachedObjects_,m=new Array(f);i=r.length,n[t]=i,l.push(t),c.push(e),r.push(m);for(let g=p,v=h.length;g!==v;++g){const x=h[g];m[g]=new Ne(x,t,e)}return m}unsubscribe_(t){const e=this._bindingsIndicesByPath,n=e[t];if(n!==void 0){const i=this._paths,r=this._parsedPaths,l=this._bindings,c=l.length-1,h=l[c],f=t[c];e[f]=n,l[n]=h,l.pop(),r[n]=r[c],r.pop(),i[n]=i[c],i.pop()}}}class eM{constructor(t,e,n=null,i=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=n,this.blendMode=i;const r=e.tracks,l=r.length,c=new Array(l),h={endingStart:gr,endingEnd:gr};for(let f=0;f!==l;++f){const p=r[f].createInterpolant(null);c[f]=p,p.settings=h}this._interpolantSettings=h,this._interpolants=c,this._propertyBindings=new Array(l),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Xx,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,n=!1){if(t.fadeOut(e),this.fadeIn(e),n===!0){const i=this._clip.duration,r=t._clip.duration,l=r/i,c=i/r;t.warp(1,l,e),this.warp(c,1,e)}return this}crossFadeTo(t,e,n=!1){return t.crossFadeFrom(this,e,n)}stopFading(){const t=this._weightInterpolant;return t!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,n){const i=this._mixer,r=i.time,l=this.timeScale;let c=this._timeScaleInterpolant;c===null&&(c=i._lendControlInterpolant(),this._timeScaleInterpolant=c);const h=c.parameterPositions,f=c.sampleValues;return h[0]=r,h[1]=r+n,f[0]=t/l,f[1]=e/l,this}stopWarping(){const t=this._timeScaleInterpolant;return t!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,n,i){if(!this.enabled){this._updateWeight(t);return}const r=this._startTime;if(r!==null){const h=(t-r)*n;h<0||n===0?e=0:(this._startTime=null,e=n*h)}e*=this._updateTimeScale(t);const l=this._updateTime(e),c=this._updateWeight(t);if(c>0){const h=this._interpolants,f=this._propertyBindings;switch(this.blendMode){case rg:for(let p=0,m=h.length;p!==m;++p)h[p].evaluate(l),f[p].accumulateAdditive(c);break;case vf:default:for(let p=0,m=h.length;p!==m;++p)h[p].evaluate(l),f[p].accumulate(i,c)}}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopWarping(),e===0?this.paused=!0:this.timeScale=e)}}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,n=this.loop;let i=this.time+t,r=this._loopCount;const l=n===qx;if(t===0)return r===-1?i:l&&(r&1)===1?e-i:i;if(n===Wx){r===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(i>=e)i=e;else if(i<0)i=0;else{this.time=i;break t}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(r===-1&&(t>=0?(r=0,this._setEndings(!0,this.repetitions===0,l)):this._setEndings(this.repetitions===0,!0,l)),i>=e||i<0){const c=Math.floor(i/e);i-=e*c,r+=Math.abs(c);const h=this.repetitions-r;if(h<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=t>0?e:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(h===1){const f=t<0;this._setEndings(f,!f,l)}else this._setEndings(!1,!1,l);this._loopCount=r,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:c})}}else this.time=i;if(l&&(r&1)===1)return e-i}return i}_setEndings(t,e,n){const i=this._interpolantSettings;n?(i.endingStart=vr,i.endingEnd=vr):(t?i.endingStart=this.zeroSlopeAtStart?vr:gr:i.endingStart=ic,e?i.endingEnd=this.zeroSlopeAtEnd?vr:gr:i.endingEnd=ic)}_scheduleFading(t,e,n){const i=this._mixer,r=i.time;let l=this._weightInterpolant;l===null&&(l=i._lendControlInterpolant(),this._weightInterpolant=l);const c=l.parameterPositions,h=l.sampleValues;return c[0]=r,h[0]=e,c[1]=r+t,h[1]=n,this}}const QA=new Float32Array(1);class $A extends Ss{constructor(t){super(),this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const n=t._localRoot||this._root,i=t._clip.tracks,r=i.length,l=t._propertyBindings,c=t._interpolants,h=n.uuid,f=this._bindingsByRootAndName;let p=f[h];p===void 0&&(p={},f[h]=p);for(let m=0;m!==r;++m){const g=i[m],v=g.name;let x=p[v];if(x!==void 0)++x.referenceCount,l[m]=x;else{if(x=l[m],x!==void 0){x._cacheIndex===null&&(++x.referenceCount,this._addInactiveBinding(x,h,v));continue}const M=e&&e._propertyBindings[m].binding.parsedPath;x=new tM(Ne.create(n,v,M),g.ValueTypeName,g.getValueSize()),++x.referenceCount,this._addInactiveBinding(x,h,v),l[m]=x}c[m].resultBuffer=x.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(t._cacheIndex===null){const n=(t._localRoot||this._root).uuid,i=t._clip.uuid,r=this._actionsByClip[i];this._bindAction(t,r&&r.knownActions[0]),this._addInactiveAction(t,i,n)}const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const r=e[n];r.useCount++===0&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const r=e[n];--r.useCount===0&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return e!==null&&e<this._nActiveActions}_addInactiveAction(t,e,n){const i=this._actions,r=this._actionsByClip;let l=r[e];if(l===void 0)l={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,r[e]=l;else{const c=l.knownActions;t._byClipCacheIndex=c.length,c.push(t)}t._cacheIndex=i.length,i.push(t),l.actionByRoot[n]=t}_removeInactiveAction(t){const e=this._actions,n=e[e.length-1],i=t._cacheIndex;n._cacheIndex=i,e[i]=n,e.pop(),t._cacheIndex=null;const r=t._clip.uuid,l=this._actionsByClip,c=l[r],h=c.knownActions,f=h[h.length-1],p=t._byClipCacheIndex;f._byClipCacheIndex=p,h[p]=f,h.pop(),t._byClipCacheIndex=null;const m=c.actionByRoot,g=(t._localRoot||this._root).uuid;delete m[g],h.length===0&&delete l[r],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const r=e[n];--r.referenceCount===0&&this._removeInactiveBinding(r)}}_lendAction(t){const e=this._actions,n=t._cacheIndex,i=this._nActiveActions++,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r}_takeBackAction(t){const e=this._actions,n=t._cacheIndex,i=--this._nActiveActions,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r}_addInactiveBinding(t,e,n){const i=this._bindingsByRootAndName,r=this._bindings;let l=i[e];l===void 0&&(l={},i[e]=l),l[n]=t,t._cacheIndex=r.length,r.push(t)}_removeInactiveBinding(t){const e=this._bindings,n=t.binding,i=n.rootNode.uuid,r=n.path,l=this._bindingsByRootAndName,c=l[i],h=e[e.length-1],f=t._cacheIndex;h._cacheIndex=f,e[f]=h,e.pop(),delete c[r],Object.keys(c).length===0&&delete l[i]}_lendBinding(t){const e=this._bindings,n=t._cacheIndex,i=this._nActiveBindings++,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r}_takeBackBinding(t){const e=this._bindings,n=t._cacheIndex,i=--this._nActiveBindings,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return n===void 0&&(n=new Rg(new Float32Array(2),new Float32Array(2),1,QA),n.__cacheIndex=e,t[e]=n),n}_takeBackControlInterpolant(t){const e=this._controlInterpolants,n=t.__cacheIndex,i=--this._nActiveControlInterpolants,r=e[i];t.__cacheIndex=i,e[i]=t,r.__cacheIndex=n,e[n]=r}clipAction(t,e,n){const i=e||this._root,r=i.uuid;let l=typeof t=="string"?dc.findByName(i,t):t;const c=l!==null?l.uuid:t,h=this._actionsByClip[c];let f=null;if(n===void 0&&(l!==null?n=l.blendMode:n=vf),h!==void 0){const m=h.actionByRoot[r];if(m!==void 0&&m.blendMode===n)return m;f=h.knownActions[0],l===null&&(l=f._clip)}if(l===null)return null;const p=new eM(this,l,e,n);return this._bindAction(p,f),this._addInactiveAction(p,c,r),p}existingAction(t,e){const n=e||this._root,i=n.uuid,r=typeof t=="string"?dc.findByName(n,t):t,l=r?r.uuid:t,c=this._actionsByClip[l];return c!==void 0&&c.actionByRoot[i]||null}stopAllAction(){const t=this._actions,e=this._nActiveActions;for(let n=e-1;n>=0;--n)t[n].stop();return this}update(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,i=this.time+=t,r=Math.sign(t),l=this._accuIndex^=1;for(let f=0;f!==n;++f)e[f]._update(i,t,r,l);const c=this._bindings,h=this._nActiveBindings;for(let f=0;f!==h;++f)c[f].apply(l);return this}setTime(t){this.time=0;for(let e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,n=t.uuid,i=this._actionsByClip,r=i[n];if(r!==void 0){const l=r.knownActions;for(let c=0,h=l.length;c!==h;++c){const f=l[c];this._deactivateAction(f);const p=f._cacheIndex,m=e[e.length-1];f._cacheIndex=null,f._byClipCacheIndex=null,m._cacheIndex=p,e[p]=m,e.pop(),this._removeInactiveBindingsForAction(f)}delete i[n]}}uncacheRoot(t){const e=t.uuid,n=this._actionsByClip;for(const l in n){const c=n[l].actionByRoot,h=c[e];h!==void 0&&(this._deactivateAction(h),this._removeInactiveAction(h))}const i=this._bindingsByRootAndName,r=i[e];if(r!==void 0)for(const l in r){const c=r[l];c.restoreOriginalState(),this._removeInactiveBinding(c)}}uncacheAction(t,e){const n=this.existingAction(t,e);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class tw extends cg{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isRenderTarget3D=!0,this.depth=n,this.texture=new yf(null,t,e,n),this._setTextureOptions(i),this.texture.isRenderTargetTexture=!0}}class Bg{constructor(t){this.value=t}clone(){return new Bg(this.value.clone===void 0?this.value:this.value.clone())}}let ew=0;class nw extends Ss{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:ew++}),this.name="",this.usage=ac,this.uniforms=[]}add(t){return this.uniforms.push(t),this}remove(t){const e=this.uniforms.indexOf(t);return e!==-1&&this.uniforms.splice(e,1),this}setName(t){return this.name=t,this}setUsage(t){return this.usage=t,this}dispose(){this.dispatchEvent({type:"dispose"})}copy(t){this.name=t.name,this.usage=t.usage;const e=t.uniforms;this.uniforms.length=0;for(let n=0,i=e.length;n<i;n++){const r=Array.isArray(e[n])?e[n]:[e[n]];for(let l=0;l<r.length;l++)this.uniforms.push(r[l].clone())}return this}clone(){return new this.constructor().copy(this)}}class nf extends bf{constructor(t,e,n=1){super(t,e),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}clone(t){const e=super.clone(t);return e.meshPerAttribute=this.meshPerAttribute,e}toJSON(t){const e=super.toJSON(t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}class iw{constructor(t,e,n,i,r,l=!1){this.isGLBufferAttribute=!0,this.name="",this.buffer=t,this.type=e,this.itemSize=n,this.elementSize=i,this.count=r,this.normalized=l,this.version=0}set needsUpdate(t){t===!0&&this.version++}setBuffer(t){return this.buffer=t,this}setType(t,e){return this.type=t,this.elementSize=e,this}setItemSize(t){return this.itemSize=t,this}setCount(t){return this.count=t,this}}const $_=new he;class nM{constructor(t,e,n=0,i=1/0){this.ray=new Ar(t,e),this.near=n,this.far=i,this.camera=null,this.layers=new Fo,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}setFromXRController(t){return $_.identity().extractRotation(t.matrixWorld),this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4($_),this}intersectObject(t,e=!0,n=[]){return Bm(t,this,n,e),n.sort(ty),n}intersectObjects(t,e=!0,n=[]){for(let i=0,r=t.length;i<r;i++)Bm(t[i],this,n,e);return n.sort(ty),n}}function ty(s,t){return s.distance-t.distance}function Bm(s,t,e,n){let i=!0;if(s.layers.test(t.layers)&&s.raycast(t,e)===!1&&(i=!1),i===!0&&n===!0){const r=s.children;for(let l=0,c=r.length;l<c;l++)Bm(r[l],t,e,!0)}}class sf{constructor(t=1,e=0,n=0){this.radius=t,this.phi=e,this.theta=n}set(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){return this.phi=ve(this.phi,1e-6,Math.PI-1e-6),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(ve(e/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class sw{constructor(t=1,e=0,n=0){this.radius=t,this.theta=e,this.y=n}set(t,e,n){return this.radius=t,this.theta=e,this.y=n,this}copy(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+n*n),this.theta=Math.atan2(t,n),this.y=e,this}clone(){return new this.constructor().copy(this)}}class Fg{constructor(t,e,n,i){Fg.prototype.isMatrix2=!0,this.elements=[1,0,0,1],t!==void 0&&this.set(t,e,n,i)}identity(){return this.set(1,0,0,1),this}fromArray(t,e=0){for(let n=0;n<4;n++)this.elements[n]=t[n+e];return this}set(t,e,n,i){const r=this.elements;return r[0]=t,r[2]=e,r[1]=n,r[3]=i,this}}const ey=new ft;class aw{constructor(t=new ft(1/0,1/0),e=new ft(-1/0,-1/0)){this.isBox2=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=ey.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,ey).distanceTo(t)}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const ny=new L,ju=new L;class iM{constructor(t=new L,e=new L){this.start=t,this.end=e}set(t,e){return this.start.copy(t),this.end.copy(e),this}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,e){return this.delta(e).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,e){ny.subVectors(t,this.start),ju.subVectors(this.end,this.start);const n=ju.dot(ju);let r=ju.dot(ny)/n;return e&&(r=ve(r,0,1)),r}closestPointToPoint(t,e,n){const i=this.closestPointToPointParameter(t,e);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const iy=new L;class rw extends Le{constructor(t,e){super(),this.light=t,this.matrixAutoUpdate=!1,this.color=e,this.type="SpotLightHelper";const n=new Se,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let l=0,c=1,h=32;l<h;l++,c++){const f=l/h*Math.PI*2,p=c/h*Math.PI*2;i.push(Math.cos(f),Math.sin(f),1,Math.cos(p),Math.sin(p),1)}n.setAttribute("position",new Jt(i,3));const r=new ii({fog:!1,toneMapped:!1});this.cone=new Ms(n,r),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const t=this.light.distance?this.light.distance:1e3,e=t*Math.tan(this.light.angle);this.cone.scale.set(e,e,t),iy.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(iy),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Sa=new L,Zu=new he,Zp=new he;class ow extends Ms{constructor(t){const e=sM(t),n=new Se,i=[],r=[],l=new kt(0,0,1),c=new kt(0,1,0);for(let f=0;f<e.length;f++){const p=e[f];p.parent&&p.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),r.push(l.r,l.g,l.b),r.push(c.r,c.g,c.b))}n.setAttribute("position",new Jt(i,3)),n.setAttribute("color",new Jt(r,3));const h=new ii({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,h),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(t){const e=this.bones,n=this.geometry,i=n.getAttribute("position");Zp.copy(this.root.matrixWorld).invert();for(let r=0,l=0;r<e.length;r++){const c=e[r];c.parent&&c.parent.isBone&&(Zu.multiplyMatrices(Zp,c.matrixWorld),Sa.setFromMatrixPosition(Zu),i.setXYZ(l,Sa.x,Sa.y,Sa.z),Zu.multiplyMatrices(Zp,c.parent.matrixWorld),Sa.setFromMatrixPosition(Zu),i.setXYZ(l+1,Sa.x,Sa.y,Sa.z),l+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}dispose(){this.geometry.dispose(),this.material.dispose()}}function sM(s){const t=[];s.isBone===!0&&t.push(s);for(let e=0;e<s.children.length;e++)t.push(...sM(s.children[e]));return t}class lw extends hn{constructor(t,e,n){const i=new Mc(e,4,2),r=new Ua({wireframe:!0,fog:!1,toneMapped:!1});super(i,r),this.light=t,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const cw=new L,sy=new kt,ay=new kt;class uw extends Le{constructor(t,e,n){super(),this.light=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new Sc(e);i.rotateY(Math.PI*.5),this.material=new Ua({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const r=i.getAttribute("position"),l=new Float32Array(r.count*3);i.setAttribute("color",new qe(l,3)),this.add(new hn(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const t=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const e=t.geometry.getAttribute("color");sy.copy(this.light.color),ay.copy(this.light.groundColor);for(let n=0,i=e.count;n<i;n++){const r=n<i/2?sy:ay;e.setXYZ(n,r.r,r.g,r.b)}e.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),t.lookAt(cw.setFromMatrixPosition(this.light.matrixWorld).negate())}}class hw extends Ms{constructor(t=10,e=10,n=4473924,i=8947848){n=new kt(n),i=new kt(i);const r=e/2,l=t/e,c=t/2,h=[],f=[];for(let g=0,v=0,x=-c;g<=e;g++,x+=l){h.push(-c,0,x,c,0,x),h.push(x,0,-c,x,0,c);const M=g===r?n:i;M.toArray(f,v),v+=3,M.toArray(f,v),v+=3,M.toArray(f,v),v+=3,M.toArray(f,v),v+=3}const p=new Se;p.setAttribute("position",new Jt(h,3)),p.setAttribute("color",new Jt(f,3));const m=new ii({vertexColors:!0,toneMapped:!1});super(p,m),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class fw extends Ms{constructor(t=10,e=16,n=8,i=64,r=4473924,l=8947848){r=new kt(r),l=new kt(l);const c=[],h=[];if(e>1)for(let m=0;m<e;m++){const g=m/e*(Math.PI*2),v=Math.sin(g)*t,x=Math.cos(g)*t;c.push(0,0,0),c.push(v,0,x);const M=m&1?r:l;h.push(M.r,M.g,M.b),h.push(M.r,M.g,M.b)}for(let m=0;m<n;m++){const g=m&1?r:l,v=t-t/n*m;for(let x=0;x<i;x++){let M=x/i*(Math.PI*2),S=Math.sin(M)*v,_=Math.cos(M)*v;c.push(S,0,_),h.push(g.r,g.g,g.b),M=(x+1)/i*(Math.PI*2),S=Math.sin(M)*v,_=Math.cos(M)*v,c.push(S,0,_),h.push(g.r,g.g,g.b)}}const f=new Se;f.setAttribute("position",new Jt(c,3)),f.setAttribute("color",new Jt(h,3));const p=new ii({vertexColors:!0,toneMapped:!1});super(f,p),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const ry=new L,Ku=new L,oy=new L;class dw extends Le{constructor(t,e,n){super(),this.light=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",e===void 0&&(e=1);let i=new Se;i.setAttribute("position",new Jt([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));const r=new ii({fog:!1,toneMapped:!1});this.lightPlane=new Ca(i,r),this.add(this.lightPlane),i=new Se,i.setAttribute("position",new Jt([0,0,0,0,0,1],3)),this.targetLine=new Ca(i,r),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),ry.setFromMatrixPosition(this.light.matrixWorld),Ku.setFromMatrixPosition(this.light.target.matrixWorld),oy.subVectors(Ku,ry),this.lightPlane.lookAt(Ku),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Ku),this.targetLine.scale.z=oy.length()}}const Ju=new L,cn=new xf;class pw extends Ms{constructor(t){const e=new Se,n=new ii({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],r=[],l={};c("n1","n2"),c("n2","n4"),c("n4","n3"),c("n3","n1"),c("f1","f2"),c("f2","f4"),c("f4","f3"),c("f3","f1"),c("n1","f1"),c("n2","f2"),c("n3","f3"),c("n4","f4"),c("p","n1"),c("p","n2"),c("p","n3"),c("p","n4"),c("u1","u2"),c("u2","u3"),c("u3","u1"),c("c","t"),c("p","c"),c("cn1","cn2"),c("cn3","cn4"),c("cf1","cf2"),c("cf3","cf4");function c(x,M){h(x),h(M)}function h(x){i.push(0,0,0),r.push(0,0,0),l[x]===void 0&&(l[x]=[]),l[x].push(i.length/3-1)}e.setAttribute("position",new Jt(i,3)),e.setAttribute("color",new Jt(r,3)),super(e,n),this.type="CameraHelper",this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=l,this.update();const f=new kt(16755200),p=new kt(16711680),m=new kt(43775),g=new kt(16777215),v=new kt(3355443);this.setColors(f,p,m,g,v)}setColors(t,e,n,i,r){const c=this.geometry.getAttribute("color");c.setXYZ(0,t.r,t.g,t.b),c.setXYZ(1,t.r,t.g,t.b),c.setXYZ(2,t.r,t.g,t.b),c.setXYZ(3,t.r,t.g,t.b),c.setXYZ(4,t.r,t.g,t.b),c.setXYZ(5,t.r,t.g,t.b),c.setXYZ(6,t.r,t.g,t.b),c.setXYZ(7,t.r,t.g,t.b),c.setXYZ(8,t.r,t.g,t.b),c.setXYZ(9,t.r,t.g,t.b),c.setXYZ(10,t.r,t.g,t.b),c.setXYZ(11,t.r,t.g,t.b),c.setXYZ(12,t.r,t.g,t.b),c.setXYZ(13,t.r,t.g,t.b),c.setXYZ(14,t.r,t.g,t.b),c.setXYZ(15,t.r,t.g,t.b),c.setXYZ(16,t.r,t.g,t.b),c.setXYZ(17,t.r,t.g,t.b),c.setXYZ(18,t.r,t.g,t.b),c.setXYZ(19,t.r,t.g,t.b),c.setXYZ(20,t.r,t.g,t.b),c.setXYZ(21,t.r,t.g,t.b),c.setXYZ(22,t.r,t.g,t.b),c.setXYZ(23,t.r,t.g,t.b),c.setXYZ(24,e.r,e.g,e.b),c.setXYZ(25,e.r,e.g,e.b),c.setXYZ(26,e.r,e.g,e.b),c.setXYZ(27,e.r,e.g,e.b),c.setXYZ(28,e.r,e.g,e.b),c.setXYZ(29,e.r,e.g,e.b),c.setXYZ(30,e.r,e.g,e.b),c.setXYZ(31,e.r,e.g,e.b),c.setXYZ(32,n.r,n.g,n.b),c.setXYZ(33,n.r,n.g,n.b),c.setXYZ(34,n.r,n.g,n.b),c.setXYZ(35,n.r,n.g,n.b),c.setXYZ(36,n.r,n.g,n.b),c.setXYZ(37,n.r,n.g,n.b),c.setXYZ(38,i.r,i.g,i.b),c.setXYZ(39,i.r,i.g,i.b),c.setXYZ(40,r.r,r.g,r.b),c.setXYZ(41,r.r,r.g,r.b),c.setXYZ(42,r.r,r.g,r.b),c.setXYZ(43,r.r,r.g,r.b),c.setXYZ(44,r.r,r.g,r.b),c.setXYZ(45,r.r,r.g,r.b),c.setXYZ(46,r.r,r.g,r.b),c.setXYZ(47,r.r,r.g,r.b),c.setXYZ(48,r.r,r.g,r.b),c.setXYZ(49,r.r,r.g,r.b),c.needsUpdate=!0}update(){const t=this.geometry,e=this.pointMap,n=1,i=1;cn.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse);const r=this.camera.coordinateSystem===Hi?-1:0;un("c",e,t,cn,0,0,r),un("t",e,t,cn,0,0,1),un("n1",e,t,cn,-n,-i,r),un("n2",e,t,cn,n,-i,r),un("n3",e,t,cn,-n,i,r),un("n4",e,t,cn,n,i,r),un("f1",e,t,cn,-n,-i,1),un("f2",e,t,cn,n,-i,1),un("f3",e,t,cn,-n,i,1),un("f4",e,t,cn,n,i,1),un("u1",e,t,cn,n*.7,i*1.1,r),un("u2",e,t,cn,-n*.7,i*1.1,r),un("u3",e,t,cn,0,i*2,r),un("cf1",e,t,cn,-n,0,1),un("cf2",e,t,cn,n,0,1),un("cf3",e,t,cn,0,-i,1),un("cf4",e,t,cn,0,i,1),un("cn1",e,t,cn,-n,0,r),un("cn2",e,t,cn,n,0,r),un("cn3",e,t,cn,0,-i,r),un("cn4",e,t,cn,0,i,r),t.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function un(s,t,e,n,i,r,l){Ju.set(i,r,l).unproject(n);const c=t[s];if(c!==void 0){const h=e.getAttribute("position");for(let f=0,p=c.length;f<p;f++)h.setXYZ(c[f],Ju.x,Ju.y,Ju.z)}}const Qu=new _n;class mw extends Ms{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),r=new Se;r.setIndex(new qe(n,1)),r.setAttribute("position",new qe(i,3)),super(r,new ii({color:e,toneMapped:!1})),this.object=t,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(){if(this.object!==void 0&&Qu.setFromObject(this.object),Qu.isEmpty())return;const t=Qu.min,e=Qu.max,n=this.geometry.attributes.position,i=n.array;i[0]=e.x,i[1]=e.y,i[2]=e.z,i[3]=t.x,i[4]=e.y,i[5]=e.z,i[6]=t.x,i[7]=t.y,i[8]=e.z,i[9]=e.x,i[10]=t.y,i[11]=e.z,i[12]=e.x,i[13]=e.y,i[14]=t.z,i[15]=t.x,i[16]=e.y,i[17]=t.z,i[18]=t.x,i[19]=t.y,i[20]=t.z,i[21]=e.x,i[22]=t.y,i[23]=t.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(t){return this.object=t,this.update(),this}copy(t,e){return super.copy(t,e),this.object=t.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class gw extends Ms{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],r=new Se;r.setIndex(new qe(n,1)),r.setAttribute("position",new Jt(i,3)),super(r,new ii({color:e,toneMapped:!1})),this.box=t,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(t){const e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(t))}dispose(){this.geometry.dispose(),this.material.dispose()}}class vw extends Ca{constructor(t,e=1,n=16776960){const i=n,r=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],l=new Se;l.setAttribute("position",new Jt(r,3)),l.computeBoundingSphere(),super(l,new ii({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=t,this.size=e;const c=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],h=new Se;h.setAttribute("position",new Jt(c,3)),h.computeBoundingSphere(),this.add(new hn(h,new Ua({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(t){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(t)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const ly=new L;let $u,Kp;class _w extends Le{constructor(t=new L(0,0,1),e=new L(0,0,0),n=1,i=16776960,r=n*.2,l=r*.2){super(),this.type="ArrowHelper",$u===void 0&&($u=new Se,$u.setAttribute("position",new Jt([0,0,0,0,1,0],3)),Kp=new xc(.5,1,5,1),Kp.translate(0,-.5,0)),this.position.copy(e),this.line=new Ca($u,new ii({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new hn(Kp,new Ua({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(n,r,l)}setDirection(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{ly.set(t.z,0,-t.x).normalize();const e=Math.acos(t.y);this.quaternion.setFromAxisAngle(ly,e)}}setLength(t,e=t*.2,n=e*.2){this.line.scale.set(1,Math.max(1e-4,t-e),1),this.line.updateMatrix(),this.cone.scale.set(n,e,n),this.cone.position.y=t,this.cone.updateMatrix()}setColor(t){this.line.material.color.set(t),this.cone.material.color.set(t)}copy(t){return super.copy(t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class yw extends Ms{constructor(t=1){const e=[0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new Se;i.setAttribute("position",new Jt(e,3)),i.setAttribute("color",new Jt(n,3));const r=new ii({vertexColors:!0,toneMapped:!1});super(i,r),this.type="AxesHelper"}setColors(t,e,n){const i=new kt,r=this.geometry.attributes.color.array;return i.set(t),i.toArray(r,0),i.toArray(r,3),i.set(e),i.toArray(r,6),i.toArray(r,9),i.set(n),i.toArray(r,12),i.toArray(r,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class xw{constructor(){this.type="ShapePath",this.color=new kt,this.subPaths=[],this.currentPath=null}moveTo(t,e){return this.currentPath=new ef,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this}lineTo(t,e){return this.currentPath.lineTo(t,e),this}quadraticCurveTo(t,e,n,i){return this.currentPath.quadraticCurveTo(t,e,n,i),this}bezierCurveTo(t,e,n,i,r,l){return this.currentPath.bezierCurveTo(t,e,n,i,r,l),this}splineThru(t){return this.currentPath.splineThru(t),this}toShapes(t){function e(_){const E=[];for(let T=0,A=_.length;T<A;T++){const N=_[T],D=new Sr;D.curves=N.curves,E.push(D)}return E}function n(_,E){const T=E.length;let A=!1;for(let N=T-1,D=0;D<T;N=D++){let I=E[N],z=E[D],C=z.x-I.x,w=z.y-I.y;if(Math.abs(w)>Number.EPSILON){if(w<0&&(I=E[D],C=-C,z=E[N],w=-w),_.y<I.y||_.y>z.y)continue;if(_.y===I.y){if(_.x===I.x)return!0}else{const B=w*(_.x-I.x)-C*(_.y-I.y);if(B===0)return!0;if(B<0)continue;A=!A}}else{if(_.y!==I.y)continue;if(z.x<=_.x&&_.x<=I.x||I.x<=_.x&&_.x<=z.x)return!0}}return A}const i=es.isClockWise,r=this.subPaths;if(r.length===0)return[];let l,c,h;const f=[];if(r.length===1)return c=r[0],h=new Sr,h.curves=c.curves,f.push(h),f;let p=!i(r[0].getPoints());p=t?!p:p;const m=[],g=[];let v=[],x=0,M;g[x]=void 0,v[x]=[];for(let _=0,E=r.length;_<E;_++)c=r[_],M=c.getPoints(),l=i(M),l=t?!l:l,l?(!p&&g[x]&&x++,g[x]={s:new Sr,p:M},g[x].s.curves=c.curves,p&&x++,v[x]=[]):v[x].push({h:c,p:M[0]});if(!g[0])return e(r);if(g.length>1){let _=!1,E=0;for(let T=0,A=g.length;T<A;T++)m[T]=[];for(let T=0,A=g.length;T<A;T++){const N=v[T];for(let D=0;D<N.length;D++){const I=N[D];let z=!0;for(let C=0;C<g.length;C++)n(I.p,g[C].p)&&(T!==C&&E++,z?(z=!1,m[C].push(I)):_=!0);z&&m[T].push(I)}}E>0&&_===!1&&(v=m)}let S;for(let _=0,E=g.length;_<E;_++){h=g[_].s,f.push(h),S=v[_];for(let T=0,A=S.length;T<A;T++)h.holes.push(S[T].h)}return f}}class Sw extends Ss{constructor(t,e=null){super(),this.object=t,this.domElement=e,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(t){if(t===void 0){console.warn("THREE.Controls: connect() now requires an element.");return}this.domElement!==null&&this.disconnect(),this.domElement=t}disconnect(){}dispose(){}update(){}}function Mw(s,t){const e=s.image&&s.image.width?s.image.width/s.image.height:1;return e>t?(s.repeat.x=1,s.repeat.y=e/t,s.offset.x=0,s.offset.y=(1-s.repeat.y)/2):(s.repeat.x=t/e,s.repeat.y=1,s.offset.x=(1-s.repeat.x)/2,s.offset.y=0),s}function bw(s,t){const e=s.image&&s.image.width?s.image.width/s.image.height:1;return e>t?(s.repeat.x=t/e,s.repeat.y=1,s.offset.x=(1-s.repeat.x)/2,s.offset.y=0):(s.repeat.x=1,s.repeat.y=e/t,s.offset.x=0,s.offset.y=(1-s.repeat.y)/2),s}function Ew(s){return s.repeat.x=1,s.repeat.y=1,s.offset.x=0,s.offset.y=0,s}function Fm(s,t,e,n){const i=Tw(n);switch(e){case ng:return s*t;case pf:return s*t/i.components*i.byteLength;case vc:return s*t/i.components*i.byteLength;case sg:return s*t*2/i.components*i.byteLength;case mf:return s*t*2/i.components*i.byteLength;case ig:return s*t*3/i.components*i.byteLength;case Xn:return s*t*4/i.components*i.byteLength;case gf:return s*t*4/i.components*i.byteLength;case kl:case Wl:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*8;case Xl:case ql:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*16;case Th:case wh:return Math.max(s,16)*Math.max(t,8)/4;case Eh:case Ah:return Math.max(s,8)*Math.max(t,8)/2;case Ch:case Rh:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*8;case Dh:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*16;case Uh:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*16;case Ph:return Math.floor((s+4)/5)*Math.floor((t+3)/4)*16;case Nh:return Math.floor((s+4)/5)*Math.floor((t+4)/5)*16;case Lh:return Math.floor((s+5)/6)*Math.floor((t+4)/5)*16;case Ih:return Math.floor((s+5)/6)*Math.floor((t+5)/6)*16;case Oh:return Math.floor((s+7)/8)*Math.floor((t+4)/5)*16;case zh:return Math.floor((s+7)/8)*Math.floor((t+5)/6)*16;case Bh:return Math.floor((s+7)/8)*Math.floor((t+7)/8)*16;case Fh:return Math.floor((s+9)/10)*Math.floor((t+4)/5)*16;case Hh:return Math.floor((s+9)/10)*Math.floor((t+5)/6)*16;case Vh:return Math.floor((s+9)/10)*Math.floor((t+7)/8)*16;case Gh:return Math.floor((s+9)/10)*Math.floor((t+9)/10)*16;case kh:return Math.floor((s+11)/12)*Math.floor((t+9)/10)*16;case Wh:return Math.floor((s+11)/12)*Math.floor((t+11)/12)*16;case Yl:case Xh:case qh:return Math.ceil(s/4)*Math.ceil(t/4)*16;case ag:case Yh:return Math.ceil(s/4)*Math.ceil(t/4)*8;case jh:case Zh:return Math.ceil(s/4)*Math.ceil(t/4)*16}throw new Error(`Unable to determine texture byte length for ${e} format.`)}function Tw(s){switch(s){case Vi:case $m:return{byteLength:1,components:1};case Lo:case tg:case qo:return{byteLength:2,components:1};case ff:case df:return{byteLength:2,components:4};case Ks:case hf:case ui:return{byteLength:4,components:1};case eg:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${s}.`)}class Aw{static contain(t,e){return Mw(t,e)}static cover(t,e){return bw(t,e)}static fill(t){return Ew(t)}static getByteLength(t,e,n,i){return Fm(t,e,n,i)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Wo}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Wo);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function aM(){let s=null,t=!1,e=null,n=null;function i(r,l){e(r,l),n=s.requestAnimationFrame(i)}return{start:function(){t!==!0&&e!==null&&(n=s.requestAnimationFrame(i),t=!0)},stop:function(){s.cancelAnimationFrame(n),t=!1},setAnimationLoop:function(r){e=r},setContext:function(r){s=r}}}function ww(s){const t=new WeakMap;function e(c,h){const f=c.array,p=c.usage,m=f.byteLength,g=s.createBuffer();s.bindBuffer(h,g),s.bufferData(h,f,p),c.onUploadCallback();let v;if(f instanceof Float32Array)v=s.FLOAT;else if(typeof Float16Array<"u"&&f instanceof Float16Array)v=s.HALF_FLOAT;else if(f instanceof Uint16Array)c.isFloat16BufferAttribute?v=s.HALF_FLOAT:v=s.UNSIGNED_SHORT;else if(f instanceof Int16Array)v=s.SHORT;else if(f instanceof Uint32Array)v=s.UNSIGNED_INT;else if(f instanceof Int32Array)v=s.INT;else if(f instanceof Int8Array)v=s.BYTE;else if(f instanceof Uint8Array)v=s.UNSIGNED_BYTE;else if(f instanceof Uint8ClampedArray)v=s.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+f);return{buffer:g,type:v,bytesPerElement:f.BYTES_PER_ELEMENT,version:c.version,size:m}}function n(c,h,f){const p=h.array,m=h.updateRanges;if(s.bindBuffer(f,c),m.length===0)s.bufferSubData(f,0,p);else{m.sort((v,x)=>v.start-x.start);let g=0;for(let v=1;v<m.length;v++){const x=m[g],M=m[v];M.start<=x.start+x.count+1?x.count=Math.max(x.count,M.start+M.count-x.start):(++g,m[g]=M)}m.length=g+1;for(let v=0,x=m.length;v<x;v++){const M=m[v];s.bufferSubData(f,M.start*p.BYTES_PER_ELEMENT,p,M.start,M.count)}h.clearUpdateRanges()}h.onUploadCallback()}function i(c){return c.isInterleavedBufferAttribute&&(c=c.data),t.get(c)}function r(c){c.isInterleavedBufferAttribute&&(c=c.data);const h=t.get(c);h&&(s.deleteBuffer(h.buffer),t.delete(c))}function l(c,h){if(c.isInterleavedBufferAttribute&&(c=c.data),c.isGLBufferAttribute){const p=t.get(c);(!p||p.version<c.version)&&t.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}const f=t.get(c);if(f===void 0)t.set(c,e(c,h));else if(f.version<c.version){if(f.size!==c.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");n(f.buffer,c,h),f.version=c.version}}return{get:i,remove:r,update:l}}var Cw=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,Rw=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,Dw=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,Uw=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Pw=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,Nw=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,Lw=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,Iw=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,Ow=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,zw=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,Bw=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,Fw=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,Hw=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,Vw=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,Gw=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,kw=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,Ww=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,Xw=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,qw=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,Yw=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,jw=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,Zw=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,Kw=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,Jw=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,Qw=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,$w=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,tC=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,eC=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,nC=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,iC=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,sC="gl_FragColor = linearToOutputTexel( gl_FragColor );",aC=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,rC=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,oC=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,lC=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,cC=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,uC=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,hC=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,fC=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,dC=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,pC=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,mC=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,gC=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,vC=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,_C=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,yC=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,xC=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,SC=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,MC=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,bC=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,EC=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,TC=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,AC=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,wC=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,CC=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,RC=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,DC=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,UC=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,PC=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,NC=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,LC=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,IC=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,OC=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,zC=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,BC=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,FC=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,HC=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,VC=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,GC=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,kC=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,WC=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,XC=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,qC=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,YC=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,jC=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,ZC=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,KC=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,JC=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,QC=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,$C=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,tR=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,eR=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,nR=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,iR=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,sR=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,aR=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,rR=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,oR=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,lR=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,cR=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,uR=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,hR=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,fR=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,dR=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,pR=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,mR=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,gR=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,vR=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,_R=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,yR=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,xR=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,SR=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,MR=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,bR=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,ER=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,TR=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,AR=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const wR=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,CR=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,RR=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,DR=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,UR=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,PR=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,NR=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,LR=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,IR=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,OR=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,zR=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,BR=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,FR=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,HR=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,VR=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,GR=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,kR=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,WR=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,XR=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,qR=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,YR=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,jR=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,ZR=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,KR=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,JR=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,QR=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,$R=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,t2=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,e2=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,n2=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,i2=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,s2=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,a2=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,r2=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Me={alphahash_fragment:Cw,alphahash_pars_fragment:Rw,alphamap_fragment:Dw,alphamap_pars_fragment:Uw,alphatest_fragment:Pw,alphatest_pars_fragment:Nw,aomap_fragment:Lw,aomap_pars_fragment:Iw,batching_pars_vertex:Ow,batching_vertex:zw,begin_vertex:Bw,beginnormal_vertex:Fw,bsdfs:Hw,iridescence_fragment:Vw,bumpmap_pars_fragment:Gw,clipping_planes_fragment:kw,clipping_planes_pars_fragment:Ww,clipping_planes_pars_vertex:Xw,clipping_planes_vertex:qw,color_fragment:Yw,color_pars_fragment:jw,color_pars_vertex:Zw,color_vertex:Kw,common:Jw,cube_uv_reflection_fragment:Qw,defaultnormal_vertex:$w,displacementmap_pars_vertex:tC,displacementmap_vertex:eC,emissivemap_fragment:nC,emissivemap_pars_fragment:iC,colorspace_fragment:sC,colorspace_pars_fragment:aC,envmap_fragment:rC,envmap_common_pars_fragment:oC,envmap_pars_fragment:lC,envmap_pars_vertex:cC,envmap_physical_pars_fragment:xC,envmap_vertex:uC,fog_vertex:hC,fog_pars_vertex:fC,fog_fragment:dC,fog_pars_fragment:pC,gradientmap_pars_fragment:mC,lightmap_pars_fragment:gC,lights_lambert_fragment:vC,lights_lambert_pars_fragment:_C,lights_pars_begin:yC,lights_toon_fragment:SC,lights_toon_pars_fragment:MC,lights_phong_fragment:bC,lights_phong_pars_fragment:EC,lights_physical_fragment:TC,lights_physical_pars_fragment:AC,lights_fragment_begin:wC,lights_fragment_maps:CC,lights_fragment_end:RC,logdepthbuf_fragment:DC,logdepthbuf_pars_fragment:UC,logdepthbuf_pars_vertex:PC,logdepthbuf_vertex:NC,map_fragment:LC,map_pars_fragment:IC,map_particle_fragment:OC,map_particle_pars_fragment:zC,metalnessmap_fragment:BC,metalnessmap_pars_fragment:FC,morphinstance_vertex:HC,morphcolor_vertex:VC,morphnormal_vertex:GC,morphtarget_pars_vertex:kC,morphtarget_vertex:WC,normal_fragment_begin:XC,normal_fragment_maps:qC,normal_pars_fragment:YC,normal_pars_vertex:jC,normal_vertex:ZC,normalmap_pars_fragment:KC,clearcoat_normal_fragment_begin:JC,clearcoat_normal_fragment_maps:QC,clearcoat_pars_fragment:$C,iridescence_pars_fragment:tR,opaque_fragment:eR,packing:nR,premultiplied_alpha_fragment:iR,project_vertex:sR,dithering_fragment:aR,dithering_pars_fragment:rR,roughnessmap_fragment:oR,roughnessmap_pars_fragment:lR,shadowmap_pars_fragment:cR,shadowmap_pars_vertex:uR,shadowmap_vertex:hR,shadowmask_pars_fragment:fR,skinbase_vertex:dR,skinning_pars_vertex:pR,skinning_vertex:mR,skinnormal_vertex:gR,specularmap_fragment:vR,specularmap_pars_fragment:_R,tonemapping_fragment:yR,tonemapping_pars_fragment:xR,transmission_fragment:SR,transmission_pars_fragment:MR,uv_pars_fragment:bR,uv_pars_vertex:ER,uv_vertex:TR,worldpos_vertex:AR,background_vert:wR,background_frag:CR,backgroundCube_vert:RR,backgroundCube_frag:DR,cube_vert:UR,cube_frag:PR,depth_vert:NR,depth_frag:LR,distanceRGBA_vert:IR,distanceRGBA_frag:OR,equirect_vert:zR,equirect_frag:BR,linedashed_vert:FR,linedashed_frag:HR,meshbasic_vert:VR,meshbasic_frag:GR,meshlambert_vert:kR,meshlambert_frag:WR,meshmatcap_vert:XR,meshmatcap_frag:qR,meshnormal_vert:YR,meshnormal_frag:jR,meshphong_vert:ZR,meshphong_frag:KR,meshphysical_vert:JR,meshphysical_frag:QR,meshtoon_vert:$R,meshtoon_frag:t2,points_vert:e2,points_frag:n2,shadow_vert:i2,shadow_frag:s2,sprite_vert:a2,sprite_frag:r2},It={common:{diffuse:{value:new kt(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new _e},alphaMap:{value:null},alphaMapTransform:{value:new _e},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new _e}},envmap:{envMap:{value:null},envMapRotation:{value:new _e},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new _e}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new _e}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new _e},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new _e},normalScale:{value:new ft(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new _e},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new _e}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new _e}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new _e}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new kt(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new kt(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new _e},alphaTest:{value:0},uvTransform:{value:new _e}},sprite:{diffuse:{value:new kt(16777215)},opacity:{value:1},center:{value:new ft(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new _e},alphaMap:{value:null},alphaMapTransform:{value:new _e},alphaTest:{value:0}}},$i={basic:{uniforms:$n([It.common,It.specularmap,It.envmap,It.aomap,It.lightmap,It.fog]),vertexShader:Me.meshbasic_vert,fragmentShader:Me.meshbasic_frag},lambert:{uniforms:$n([It.common,It.specularmap,It.envmap,It.aomap,It.lightmap,It.emissivemap,It.bumpmap,It.normalmap,It.displacementmap,It.fog,It.lights,{emissive:{value:new kt(0)}}]),vertexShader:Me.meshlambert_vert,fragmentShader:Me.meshlambert_frag},phong:{uniforms:$n([It.common,It.specularmap,It.envmap,It.aomap,It.lightmap,It.emissivemap,It.bumpmap,It.normalmap,It.displacementmap,It.fog,It.lights,{emissive:{value:new kt(0)},specular:{value:new kt(1118481)},shininess:{value:30}}]),vertexShader:Me.meshphong_vert,fragmentShader:Me.meshphong_frag},standard:{uniforms:$n([It.common,It.envmap,It.aomap,It.lightmap,It.emissivemap,It.bumpmap,It.normalmap,It.displacementmap,It.roughnessmap,It.metalnessmap,It.fog,It.lights,{emissive:{value:new kt(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Me.meshphysical_vert,fragmentShader:Me.meshphysical_frag},toon:{uniforms:$n([It.common,It.aomap,It.lightmap,It.emissivemap,It.bumpmap,It.normalmap,It.displacementmap,It.gradientmap,It.fog,It.lights,{emissive:{value:new kt(0)}}]),vertexShader:Me.meshtoon_vert,fragmentShader:Me.meshtoon_frag},matcap:{uniforms:$n([It.common,It.bumpmap,It.normalmap,It.displacementmap,It.fog,{matcap:{value:null}}]),vertexShader:Me.meshmatcap_vert,fragmentShader:Me.meshmatcap_frag},points:{uniforms:$n([It.points,It.fog]),vertexShader:Me.points_vert,fragmentShader:Me.points_frag},dashed:{uniforms:$n([It.common,It.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Me.linedashed_vert,fragmentShader:Me.linedashed_frag},depth:{uniforms:$n([It.common,It.displacementmap]),vertexShader:Me.depth_vert,fragmentShader:Me.depth_frag},normal:{uniforms:$n([It.common,It.bumpmap,It.normalmap,It.displacementmap,{opacity:{value:1}}]),vertexShader:Me.meshnormal_vert,fragmentShader:Me.meshnormal_frag},sprite:{uniforms:$n([It.sprite,It.fog]),vertexShader:Me.sprite_vert,fragmentShader:Me.sprite_frag},background:{uniforms:{uvTransform:{value:new _e},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Me.background_vert,fragmentShader:Me.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new _e}},vertexShader:Me.backgroundCube_vert,fragmentShader:Me.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Me.cube_vert,fragmentShader:Me.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Me.equirect_vert,fragmentShader:Me.equirect_frag},distanceRGBA:{uniforms:$n([It.common,It.displacementmap,{referencePosition:{value:new L},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Me.distanceRGBA_vert,fragmentShader:Me.distanceRGBA_frag},shadow:{uniforms:$n([It.lights,It.fog,{color:{value:new kt(0)},opacity:{value:1}}]),vertexShader:Me.shadow_vert,fragmentShader:Me.shadow_frag}};$i.physical={uniforms:$n([$i.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new _e},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new _e},clearcoatNormalScale:{value:new ft(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new _e},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new _e},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new _e},sheen:{value:0},sheenColor:{value:new kt(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new _e},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new _e},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new _e},transmissionSamplerSize:{value:new ft},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new _e},attenuationDistance:{value:0},attenuationColor:{value:new kt(0)},specularColor:{value:new kt(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new _e},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new _e},anisotropyVector:{value:new ft},anisotropyMap:{value:null},anisotropyMapTransform:{value:new _e}}]),vertexShader:Me.meshphysical_vert,fragmentShader:Me.meshphysical_frag};const th={r:0,b:0,g:0},hr=new Ai,o2=new he;function l2(s,t,e,n,i,r,l){const c=new kt(0);let h=r===!0?0:1,f,p,m=null,g=0,v=null;function x(T){let A=T.isScene===!0?T.background:null;return A&&A.isTexture&&(A=(T.backgroundBlurriness>0?e:t).get(A)),A}function M(T){let A=!1;const N=x(T);N===null?_(c,h):N&&N.isColor&&(_(N,1),A=!0);const D=s.xr.getEnvironmentBlendMode();D==="additive"?n.buffers.color.setClear(0,0,0,1,l):D==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,l),(s.autoClear||A)&&(n.buffers.depth.setTest(!0),n.buffers.depth.setMask(!0),n.buffers.color.setMask(!0),s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil))}function S(T,A){const N=x(A);N&&(N.isCubeTexture||N.mapping===Xo)?(p===void 0&&(p=new hn(new wr(1,1,1),new wi({name:"BackgroundCubeMaterial",uniforms:Ho($i.backgroundCube.uniforms),vertexShader:$i.backgroundCube.vertexShader,fragmentShader:$i.backgroundCube.fragmentShader,side:ni,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),p.geometry.deleteAttribute("normal"),p.geometry.deleteAttribute("uv"),p.onBeforeRender=function(D,I,z){this.matrixWorld.copyPosition(z.matrixWorld)},Object.defineProperty(p.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(p)),hr.copy(A.backgroundRotation),hr.x*=-1,hr.y*=-1,hr.z*=-1,N.isCubeTexture&&N.isRenderTargetTexture===!1&&(hr.y*=-1,hr.z*=-1),p.material.uniforms.envMap.value=N,p.material.uniforms.flipEnvMap.value=N.isCubeTexture&&N.isRenderTargetTexture===!1?-1:1,p.material.uniforms.backgroundBlurriness.value=A.backgroundBlurriness,p.material.uniforms.backgroundIntensity.value=A.backgroundIntensity,p.material.uniforms.backgroundRotation.value.setFromMatrix4(o2.makeRotationFromEuler(hr)),p.material.toneMapped=Ue.getTransfer(N.colorSpace)!==ke,(m!==N||g!==N.version||v!==s.toneMapping)&&(p.material.needsUpdate=!0,m=N,g=N.version,v=s.toneMapping),p.layers.enableAll(),T.unshift(p,p.geometry,p.material,0,0,null)):N&&N.isTexture&&(f===void 0&&(f=new hn(new jo(2,2),new wi({name:"BackgroundMaterial",uniforms:Ho($i.background.uniforms),vertexShader:$i.background.vertexShader,fragmentShader:$i.background.fragmentShader,side:js,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),f.geometry.deleteAttribute("normal"),Object.defineProperty(f.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(f)),f.material.uniforms.t2D.value=N,f.material.uniforms.backgroundIntensity.value=A.backgroundIntensity,f.material.toneMapped=Ue.getTransfer(N.colorSpace)!==ke,N.matrixAutoUpdate===!0&&N.updateMatrix(),f.material.uniforms.uvTransform.value.copy(N.matrix),(m!==N||g!==N.version||v!==s.toneMapping)&&(f.material.needsUpdate=!0,m=N,g=N.version,v=s.toneMapping),f.layers.enableAll(),T.unshift(f,f.geometry,f.material,0,0,null))}function _(T,A){T.getRGB(th,lS(s)),n.buffers.color.setClear(th.r,th.g,th.b,A,l)}function E(){p!==void 0&&(p.geometry.dispose(),p.material.dispose(),p=void 0),f!==void 0&&(f.geometry.dispose(),f.material.dispose(),f=void 0)}return{getClearColor:function(){return c},setClearColor:function(T,A=1){c.set(T),h=A,_(c,h)},getClearAlpha:function(){return h},setClearAlpha:function(T){h=T,_(c,h)},render:M,addToRenderList:S,dispose:E}}function c2(s,t){const e=s.getParameter(s.MAX_VERTEX_ATTRIBS),n={},i=g(null);let r=i,l=!1;function c(w,B,$,q,J){let nt=!1;const F=m(q,$,B);r!==F&&(r=F,f(r.object)),nt=v(w,q,$,J),nt&&x(w,q,$,J),J!==null&&t.update(J,s.ELEMENT_ARRAY_BUFFER),(nt||l)&&(l=!1,A(w,B,$,q),J!==null&&s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,t.get(J).buffer))}function h(){return s.createVertexArray()}function f(w){return s.bindVertexArray(w)}function p(w){return s.deleteVertexArray(w)}function m(w,B,$){const q=$.wireframe===!0;let J=n[w.id];J===void 0&&(J={},n[w.id]=J);let nt=J[B.id];nt===void 0&&(nt={},J[B.id]=nt);let F=nt[q];return F===void 0&&(F=g(h()),nt[q]=F),F}function g(w){const B=[],$=[],q=[];for(let J=0;J<e;J++)B[J]=0,$[J]=0,q[J]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:B,enabledAttributes:$,attributeDivisors:q,object:w,attributes:{},index:null}}function v(w,B,$,q){const J=r.attributes,nt=B.attributes;let F=0;const X=$.getAttributes();for(const G in X)if(X[G].location>=0){const ct=J[G];let _t=nt[G];if(_t===void 0&&(G==="instanceMatrix"&&w.instanceMatrix&&(_t=w.instanceMatrix),G==="instanceColor"&&w.instanceColor&&(_t=w.instanceColor)),ct===void 0||ct.attribute!==_t||_t&&ct.data!==_t.data)return!0;F++}return r.attributesNum!==F||r.index!==q}function x(w,B,$,q){const J={},nt=B.attributes;let F=0;const X=$.getAttributes();for(const G in X)if(X[G].location>=0){let ct=nt[G];ct===void 0&&(G==="instanceMatrix"&&w.instanceMatrix&&(ct=w.instanceMatrix),G==="instanceColor"&&w.instanceColor&&(ct=w.instanceColor));const _t={};_t.attribute=ct,ct&&ct.data&&(_t.data=ct.data),J[G]=_t,F++}r.attributes=J,r.attributesNum=F,r.index=q}function M(){const w=r.newAttributes;for(let B=0,$=w.length;B<$;B++)w[B]=0}function S(w){_(w,0)}function _(w,B){const $=r.newAttributes,q=r.enabledAttributes,J=r.attributeDivisors;$[w]=1,q[w]===0&&(s.enableVertexAttribArray(w),q[w]=1),J[w]!==B&&(s.vertexAttribDivisor(w,B),J[w]=B)}function E(){const w=r.newAttributes,B=r.enabledAttributes;for(let $=0,q=B.length;$<q;$++)B[$]!==w[$]&&(s.disableVertexAttribArray($),B[$]=0)}function T(w,B,$,q,J,nt,F){F===!0?s.vertexAttribIPointer(w,B,$,J,nt):s.vertexAttribPointer(w,B,$,q,J,nt)}function A(w,B,$,q){M();const J=q.attributes,nt=$.getAttributes(),F=B.defaultAttributeValues;for(const X in nt){const G=nt[X];if(G.location>=0){let st=J[X];if(st===void 0&&(X==="instanceMatrix"&&w.instanceMatrix&&(st=w.instanceMatrix),X==="instanceColor"&&w.instanceColor&&(st=w.instanceColor)),st!==void 0){const ct=st.normalized,_t=st.itemSize,Dt=t.get(st);if(Dt===void 0)continue;const Xt=Dt.buffer,tt=Dt.type,yt=Dt.bytesPerElement,Yt=tt===s.INT||tt===s.UNSIGNED_INT||st.gpuType===hf;if(st.isInterleavedBufferAttribute){const Nt=st.data,Vt=Nt.stride,fe=st.offset;if(Nt.isInstancedInterleavedBuffer){for(let qt=0;qt<G.locationSize;qt++)_(G.location+qt,Nt.meshPerAttribute);w.isInstancedMesh!==!0&&q._maxInstanceCount===void 0&&(q._maxInstanceCount=Nt.meshPerAttribute*Nt.count)}else for(let qt=0;qt<G.locationSize;qt++)S(G.location+qt);s.bindBuffer(s.ARRAY_BUFFER,Xt);for(let qt=0;qt<G.locationSize;qt++)T(G.location+qt,_t/G.locationSize,tt,ct,Vt*yt,(fe+_t/G.locationSize*qt)*yt,Yt)}else{if(st.isInstancedBufferAttribute){for(let Nt=0;Nt<G.locationSize;Nt++)_(G.location+Nt,st.meshPerAttribute);w.isInstancedMesh!==!0&&q._maxInstanceCount===void 0&&(q._maxInstanceCount=st.meshPerAttribute*st.count)}else for(let Nt=0;Nt<G.locationSize;Nt++)S(G.location+Nt);s.bindBuffer(s.ARRAY_BUFFER,Xt);for(let Nt=0;Nt<G.locationSize;Nt++)T(G.location+Nt,_t/G.locationSize,tt,ct,_t*yt,_t/G.locationSize*Nt*yt,Yt)}}else if(F!==void 0){const ct=F[X];if(ct!==void 0)switch(ct.length){case 2:s.vertexAttrib2fv(G.location,ct);break;case 3:s.vertexAttrib3fv(G.location,ct);break;case 4:s.vertexAttrib4fv(G.location,ct);break;default:s.vertexAttrib1fv(G.location,ct)}}}}E()}function N(){z();for(const w in n){const B=n[w];for(const $ in B){const q=B[$];for(const J in q)p(q[J].object),delete q[J];delete B[$]}delete n[w]}}function D(w){if(n[w.id]===void 0)return;const B=n[w.id];for(const $ in B){const q=B[$];for(const J in q)p(q[J].object),delete q[J];delete B[$]}delete n[w.id]}function I(w){for(const B in n){const $=n[B];if($[w.id]===void 0)continue;const q=$[w.id];for(const J in q)p(q[J].object),delete q[J];delete $[w.id]}}function z(){C(),l=!0,r!==i&&(r=i,f(r.object))}function C(){i.geometry=null,i.program=null,i.wireframe=!1}return{setup:c,reset:z,resetDefaultState:C,dispose:N,releaseStatesOfGeometry:D,releaseStatesOfProgram:I,initAttributes:M,enableAttribute:S,disableUnusedAttributes:E}}function u2(s,t,e){let n;function i(f){n=f}function r(f,p){s.drawArrays(n,f,p),e.update(p,n,1)}function l(f,p,m){m!==0&&(s.drawArraysInstanced(n,f,p,m),e.update(p,n,m))}function c(f,p,m){if(m===0)return;t.get("WEBGL_multi_draw").multiDrawArraysWEBGL(n,f,0,p,0,m);let v=0;for(let x=0;x<m;x++)v+=p[x];e.update(v,n,1)}function h(f,p,m,g){if(m===0)return;const v=t.get("WEBGL_multi_draw");if(v===null)for(let x=0;x<f.length;x++)l(f[x],p[x],g[x]);else{v.multiDrawArraysInstancedWEBGL(n,f,0,p,0,g,0,m);let x=0;for(let M=0;M<m;M++)x+=p[M]*g[M];e.update(x,n,1)}}this.setMode=i,this.render=r,this.renderInstances=l,this.renderMultiDraw=c,this.renderMultiDrawInstances=h}function h2(s,t,e,n){let i;function r(){if(i!==void 0)return i;if(t.has("EXT_texture_filter_anisotropic")===!0){const I=t.get("EXT_texture_filter_anisotropic");i=s.getParameter(I.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function l(I){return!(I!==Xn&&n.convert(I)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_FORMAT))}function c(I){const z=I===qo&&(t.has("EXT_color_buffer_half_float")||t.has("EXT_color_buffer_float"));return!(I!==Vi&&n.convert(I)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_TYPE)&&I!==ui&&!z)}function h(I){if(I==="highp"){if(s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.HIGH_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.HIGH_FLOAT).precision>0)return"highp";I="mediump"}return I==="mediump"&&s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.MEDIUM_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let f=e.precision!==void 0?e.precision:"highp";const p=h(f);p!==f&&(console.warn("THREE.WebGLRenderer:",f,"not supported, using",p,"instead."),f=p);const m=e.logarithmicDepthBuffer===!0,g=e.reverseDepthBuffer===!0&&t.has("EXT_clip_control"),v=s.getParameter(s.MAX_TEXTURE_IMAGE_UNITS),x=s.getParameter(s.MAX_VERTEX_TEXTURE_IMAGE_UNITS),M=s.getParameter(s.MAX_TEXTURE_SIZE),S=s.getParameter(s.MAX_CUBE_MAP_TEXTURE_SIZE),_=s.getParameter(s.MAX_VERTEX_ATTRIBS),E=s.getParameter(s.MAX_VERTEX_UNIFORM_VECTORS),T=s.getParameter(s.MAX_VARYING_VECTORS),A=s.getParameter(s.MAX_FRAGMENT_UNIFORM_VECTORS),N=x>0,D=s.getParameter(s.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:r,getMaxPrecision:h,textureFormatReadable:l,textureTypeReadable:c,precision:f,logarithmicDepthBuffer:m,reverseDepthBuffer:g,maxTextures:v,maxVertexTextures:x,maxTextureSize:M,maxCubemapSize:S,maxAttributes:_,maxVertexUniforms:E,maxVaryings:T,maxFragmentUniforms:A,vertexTextures:N,maxSamples:D}}function f2(s){const t=this;let e=null,n=0,i=!1,r=!1;const l=new Gs,c=new _e,h={value:null,needsUpdate:!1};this.uniform=h,this.numPlanes=0,this.numIntersection=0,this.init=function(m,g){const v=m.length!==0||g||n!==0||i;return i=g,n=m.length,v},this.beginShadows=function(){r=!0,p(null)},this.endShadows=function(){r=!1},this.setGlobalState=function(m,g){e=p(m,g,0)},this.setState=function(m,g,v){const x=m.clippingPlanes,M=m.clipIntersection,S=m.clipShadows,_=s.get(m);if(!i||x===null||x.length===0||r&&!S)r?p(null):f();else{const E=r?0:n,T=E*4;let A=_.clippingState||null;h.value=A,A=p(x,g,T,v);for(let N=0;N!==T;++N)A[N]=e[N];_.clippingState=A,this.numIntersection=M?this.numPlanes:0,this.numPlanes+=E}};function f(){h.value!==e&&(h.value=e,h.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0}function p(m,g,v,x){const M=m!==null?m.length:0;let S=null;if(M!==0){if(S=h.value,x!==!0||S===null){const _=v+M*4,E=g.matrixWorldInverse;c.getNormalMatrix(E),(S===null||S.length<_)&&(S=new Float32Array(_));for(let T=0,A=v;T!==M;++T,A+=4)l.copy(m[T]).applyMatrix4(E,c),l.normal.toArray(S,A),S[A+3]=l.constant}h.value=S,h.needsUpdate=!0}return t.numPlanes=M,t.numIntersection=0,S}}function d2(s){let t=new WeakMap;function e(l,c){return c===Ql?l.mapping=Zs:c===$l&&(l.mapping=Aa),l}function n(l){if(l&&l.isTexture){const c=l.mapping;if(c===Ql||c===$l)if(t.has(l)){const h=t.get(l).texture;return e(h,l.mapping)}else{const h=l.image;if(h&&h.height>0){const f=new uS(h.height);return f.fromEquirectangularTexture(s,l),t.set(l,f),l.addEventListener("dispose",i),e(f.texture,l.mapping)}else return null}}return l}function i(l){const c=l.target;c.removeEventListener("dispose",i);const h=t.get(c);h!==void 0&&(t.delete(c),h.dispose())}function r(){t=new WeakMap}return{get:n,dispose:r}}const Do=4,cy=[.125,.215,.35,.446,.526,.582],mr=20,Jp=new ys,uy=new kt;let Qp=null,$p=0,tm=0,em=!1;const pr=(1+Math.sqrt(5))/2,Mo=1/pr,hy=[new L(-pr,Mo,0),new L(pr,Mo,0),new L(-Mo,0,pr),new L(Mo,0,pr),new L(0,pr,-Mo),new L(0,pr,Mo),new L(-1,1,-1),new L(1,1,-1),new L(-1,1,1),new L(1,1,1)],p2=new L;class Hm{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,i=100,r={}){const{size:l=256,position:c=p2}=r;Qp=this._renderer.getRenderTarget(),$p=this._renderer.getActiveCubeFace(),tm=this._renderer.getActiveMipmapLevel(),em=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(l);const h=this._allocateTargets();return h.depthBuffer=!0,this._sceneToCubeUV(t,n,i,h,c),e>0&&this._blur(h,0,0,e),this._applyPMREM(h),this._cleanup(h),h}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=py(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=dy(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(Qp,$p,tm),this._renderer.xr.enabled=em,t.scissorTest=!1,eh(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===Zs||t.mapping===Aa?this._setSize(t.image.length===0?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),Qp=this._renderer.getRenderTarget(),$p=this._renderer.getActiveCubeFace(),tm=this._renderer.getActiveMipmapLevel(),em=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=e||this._allocateTargets();return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,n={magFilter:vn,minFilter:vn,generateMipmaps:!1,type:qo,format:Xn,colorSpace:wa,depthBuffer:!1},i=fy(t,e,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==t||this._pingPongRenderTarget.height!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=fy(t,e,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=m2(r)),this._blurMaterial=g2(r,t,e)}return i}_compileMaterial(t){const e=new hn(this._lodPlanes[0],t);this._renderer.compile(e,Jp)}_sceneToCubeUV(t,e,n,i,r){const h=new sn(90,1,e,n),f=[1,-1,1,1,1,1],p=[1,1,1,-1,-1,-1],m=this._renderer,g=m.autoClear,v=m.toneMapping;m.getClearColor(uy),m.toneMapping=vs,m.autoClear=!1;const x=new Ua({name:"PMREM.Background",side:ni,depthWrite:!1,depthTest:!1}),M=new hn(new wr,x);let S=!1;const _=t.background;_?_.isColor&&(x.color.copy(_),t.background=null,S=!0):(x.color.copy(uy),S=!0);for(let E=0;E<6;E++){const T=E%3;T===0?(h.up.set(0,f[E],0),h.position.set(r.x,r.y,r.z),h.lookAt(r.x+p[E],r.y,r.z)):T===1?(h.up.set(0,0,f[E]),h.position.set(r.x,r.y,r.z),h.lookAt(r.x,r.y+p[E],r.z)):(h.up.set(0,f[E],0),h.position.set(r.x,r.y,r.z),h.lookAt(r.x,r.y,r.z+p[E]));const A=this._cubeSize;eh(i,T*A,E>2?A:0,A,A),m.setRenderTarget(i),S&&m.render(M,h),m.render(t,h)}M.geometry.dispose(),M.material.dispose(),m.toneMapping=v,m.autoClear=g,t.background=_}_textureToCubeUV(t,e){const n=this._renderer,i=t.mapping===Zs||t.mapping===Aa;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=py()),this._cubemapMaterial.uniforms.flipEnvMap.value=t.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=dy());const r=i?this._cubemapMaterial:this._equirectMaterial,l=new hn(this._lodPlanes[0],r),c=r.uniforms;c.envMap.value=t;const h=this._cubeSize;eh(e,0,0,3*h,2*h),n.setRenderTarget(e),n.render(l,Jp)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;const i=this._lodPlanes.length;for(let r=1;r<i;r++){const l=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),c=hy[(i-r-1)%hy.length];this._blur(t,r-1,r,l,c)}e.autoClear=n}_blur(t,e,n,i,r){const l=this._pingPongRenderTarget;this._halfBlur(t,l,e,n,i,"latitudinal",r),this._halfBlur(l,t,n,n,i,"longitudinal",r)}_halfBlur(t,e,n,i,r,l,c){const h=this._renderer,f=this._blurMaterial;l!=="latitudinal"&&l!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const p=3,m=new hn(this._lodPlanes[i],f),g=f.uniforms,v=this._sizeLods[n]-1,x=isFinite(r)?Math.PI/(2*v):2*Math.PI/(2*mr-1),M=r/x,S=isFinite(r)?1+Math.floor(p*M):mr;S>mr&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${S} samples when the maximum is set to ${mr}`);const _=[];let E=0;for(let I=0;I<mr;++I){const z=I/M,C=Math.exp(-z*z/2);_.push(C),I===0?E+=C:I<S&&(E+=2*C)}for(let I=0;I<_.length;I++)_[I]=_[I]/E;g.envMap.value=t.texture,g.samples.value=S,g.weights.value=_,g.latitudinal.value=l==="latitudinal",c&&(g.poleAxis.value=c);const{_lodMax:T}=this;g.dTheta.value=x,g.mipInt.value=T-n;const A=this._sizeLods[i],N=3*A*(i>T-Do?i-T+Do:0),D=4*(this._cubeSize-A);eh(e,N,D,3*A,2*A),h.setRenderTarget(e),h.render(m,Jp)}}function m2(s){const t=[],e=[],n=[];let i=s;const r=s-Do+1+cy.length;for(let l=0;l<r;l++){const c=Math.pow(2,i);e.push(c);let h=1/c;l>s-Do?h=cy[l-s+Do-1]:l===0&&(h=0),n.push(h);const f=1/(c-2),p=-f,m=1+f,g=[p,p,m,p,m,m,p,p,m,m,p,m],v=6,x=6,M=3,S=2,_=1,E=new Float32Array(M*x*v),T=new Float32Array(S*x*v),A=new Float32Array(_*x*v);for(let D=0;D<v;D++){const I=D%3*2/3-1,z=D>2?0:-1,C=[I,z,0,I+2/3,z,0,I+2/3,z+1,0,I,z,0,I+2/3,z+1,0,I,z+1,0];E.set(C,M*x*D),T.set(g,S*x*D);const w=[D,D,D,D,D,D];A.set(w,_*x*D)}const N=new Se;N.setAttribute("position",new qe(E,M)),N.setAttribute("uv",new qe(T,S)),N.setAttribute("faceIndex",new qe(A,_)),t.push(N),i>Do&&i--}return{lodPlanes:t,sizeLods:e,sigmas:n}}function fy(s,t,e){const n=new xs(s,t,e);return n.texture.mapping=Xo,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function eh(s,t,e,n,i){s.viewport.set(t,e,n,i),s.scissor.set(t,e,n,i)}function g2(s,t,e){const n=new Float32Array(mr),i=new L(0,1,0);return new wi({name:"SphericalGaussianBlur",defines:{n:mr,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/e,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Hg(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:qs,depthTest:!1,depthWrite:!1})}function dy(){return new wi({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Hg(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:qs,depthTest:!1,depthWrite:!1})}function py(){return new wi({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Hg(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:qs,depthTest:!1,depthWrite:!1})}function Hg(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function v2(s){let t=new WeakMap,e=null;function n(c){if(c&&c.isTexture){const h=c.mapping,f=h===Ql||h===$l,p=h===Zs||h===Aa;if(f||p){let m=t.get(c);const g=m!==void 0?m.texture.pmremVersion:0;if(c.isRenderTargetTexture&&c.pmremVersion!==g)return e===null&&(e=new Hm(s)),m=f?e.fromEquirectangular(c,m):e.fromCubemap(c,m),m.texture.pmremVersion=c.pmremVersion,t.set(c,m),m.texture;if(m!==void 0)return m.texture;{const v=c.image;return f&&v&&v.height>0||p&&v&&i(v)?(e===null&&(e=new Hm(s)),m=f?e.fromEquirectangular(c):e.fromCubemap(c),m.texture.pmremVersion=c.pmremVersion,t.set(c,m),c.addEventListener("dispose",r),m.texture):null}}}return c}function i(c){let h=0;const f=6;for(let p=0;p<f;p++)c[p]!==void 0&&h++;return h===f}function r(c){const h=c.target;h.removeEventListener("dispose",r);const f=t.get(h);f!==void 0&&(t.delete(h),f.dispose())}function l(){t=new WeakMap,e!==null&&(e.dispose(),e=null)}return{get:n,dispose:l}}function _2(s){const t={};function e(n){if(t[n]!==void 0)return t[n];let i;switch(n){case"WEBGL_depth_texture":i=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=s.getExtension(n)}return t[n]=i,i}return{has:function(n){return e(n)!==null},init:function(){e("EXT_color_buffer_float"),e("WEBGL_clip_cull_distance"),e("OES_texture_float_linear"),e("EXT_color_buffer_half_float"),e("WEBGL_multisampled_render_to_texture"),e("WEBGL_render_shared_exponent")},get:function(n){const i=e(n);return i===null&&Uo("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function y2(s,t,e,n){const i={},r=new WeakMap;function l(m){const g=m.target;g.index!==null&&t.remove(g.index);for(const x in g.attributes)t.remove(g.attributes[x]);g.removeEventListener("dispose",l),delete i[g.id];const v=r.get(g);v&&(t.remove(v),r.delete(g)),n.releaseStatesOfGeometry(g),g.isInstancedBufferGeometry===!0&&delete g._maxInstanceCount,e.memory.geometries--}function c(m,g){return i[g.id]===!0||(g.addEventListener("dispose",l),i[g.id]=!0,e.memory.geometries++),g}function h(m){const g=m.attributes;for(const v in g)t.update(g[v],s.ARRAY_BUFFER)}function f(m){const g=[],v=m.index,x=m.attributes.position;let M=0;if(v!==null){const E=v.array;M=v.version;for(let T=0,A=E.length;T<A;T+=3){const N=E[T+0],D=E[T+1],I=E[T+2];g.push(N,D,D,I,I,N)}}else if(x!==void 0){const E=x.array;M=x.version;for(let T=0,A=E.length/3-1;T<A;T+=3){const N=T+0,D=T+1,I=T+2;g.push(N,D,D,I,I,N)}}else return;const S=new(sS(g)?hg:ug)(g,1);S.version=M;const _=r.get(m);_&&t.remove(_),r.set(m,S)}function p(m){const g=r.get(m);if(g){const v=m.index;v!==null&&g.version<v.version&&f(m)}else f(m);return r.get(m)}return{get:c,update:h,getWireframeAttribute:p}}function x2(s,t,e){let n;function i(g){n=g}let r,l;function c(g){r=g.type,l=g.bytesPerElement}function h(g,v){s.drawElements(n,v,r,g*l),e.update(v,n,1)}function f(g,v,x){x!==0&&(s.drawElementsInstanced(n,v,r,g*l,x),e.update(v,n,x))}function p(g,v,x){if(x===0)return;t.get("WEBGL_multi_draw").multiDrawElementsWEBGL(n,v,0,r,g,0,x);let S=0;for(let _=0;_<x;_++)S+=v[_];e.update(S,n,1)}function m(g,v,x,M){if(x===0)return;const S=t.get("WEBGL_multi_draw");if(S===null)for(let _=0;_<g.length;_++)f(g[_]/l,v[_],M[_]);else{S.multiDrawElementsInstancedWEBGL(n,v,0,r,g,0,M,0,x);let _=0;for(let E=0;E<x;E++)_+=v[E]*M[E];e.update(_,n,1)}}this.setMode=i,this.setIndex=c,this.render=h,this.renderInstances=f,this.renderMultiDraw=p,this.renderMultiDrawInstances=m}function S2(s){const t={geometries:0,textures:0},e={frame:0,calls:0,triangles:0,points:0,lines:0};function n(r,l,c){switch(e.calls++,l){case s.TRIANGLES:e.triangles+=c*(r/3);break;case s.LINES:e.lines+=c*(r/2);break;case s.LINE_STRIP:e.lines+=c*(r-1);break;case s.LINE_LOOP:e.lines+=c*r;break;case s.POINTS:e.points+=c*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",l);break}}function i(){e.calls=0,e.triangles=0,e.points=0,e.lines=0}return{memory:t,render:e,programs:null,autoReset:!0,reset:i,update:n}}function M2(s,t,e){const n=new WeakMap,i=new Ae;function r(l,c,h){const f=l.morphTargetInfluences,p=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,m=p!==void 0?p.length:0;let g=n.get(c);if(g===void 0||g.count!==m){let C=function(){I.dispose(),n.delete(c),c.removeEventListener("dispose",C)};g!==void 0&&g.texture.dispose();const v=c.morphAttributes.position!==void 0,x=c.morphAttributes.normal!==void 0,M=c.morphAttributes.color!==void 0,S=c.morphAttributes.position||[],_=c.morphAttributes.normal||[],E=c.morphAttributes.color||[];let T=0;v===!0&&(T=1),x===!0&&(T=2),M===!0&&(T=3);let A=c.attributes.position.count*T,N=1;A>t.maxTextureSize&&(N=Math.ceil(A/t.maxTextureSize),A=t.maxTextureSize);const D=new Float32Array(A*N*4*m),I=new _f(D,A,N,m);I.type=ui,I.needsUpdate=!0;const z=T*4;for(let w=0;w<m;w++){const B=S[w],$=_[w],q=E[w],J=A*N*4*w;for(let nt=0;nt<B.count;nt++){const F=nt*z;v===!0&&(i.fromBufferAttribute(B,nt),D[J+F+0]=i.x,D[J+F+1]=i.y,D[J+F+2]=i.z,D[J+F+3]=0),x===!0&&(i.fromBufferAttribute($,nt),D[J+F+4]=i.x,D[J+F+5]=i.y,D[J+F+6]=i.z,D[J+F+7]=0),M===!0&&(i.fromBufferAttribute(q,nt),D[J+F+8]=i.x,D[J+F+9]=i.y,D[J+F+10]=i.z,D[J+F+11]=q.itemSize===4?i.w:1)}}g={count:m,texture:I,size:new ft(A,N)},n.set(c,g),c.addEventListener("dispose",C)}if(l.isInstancedMesh===!0&&l.morphTexture!==null)h.getUniforms().setValue(s,"morphTexture",l.morphTexture,e);else{let v=0;for(let M=0;M<f.length;M++)v+=f[M];const x=c.morphTargetsRelative?1:1-v;h.getUniforms().setValue(s,"morphTargetBaseInfluence",x),h.getUniforms().setValue(s,"morphTargetInfluences",f)}h.getUniforms().setValue(s,"morphTargetsTexture",g.texture,e),h.getUniforms().setValue(s,"morphTargetsTextureSize",g.size)}return{update:r}}function b2(s,t,e,n){let i=new WeakMap;function r(h){const f=n.render.frame,p=h.geometry,m=t.get(h,p);if(i.get(m)!==f&&(t.update(m),i.set(m,f)),h.isInstancedMesh&&(h.hasEventListener("dispose",c)===!1&&h.addEventListener("dispose",c),i.get(h)!==f&&(e.update(h.instanceMatrix,s.ARRAY_BUFFER),h.instanceColor!==null&&e.update(h.instanceColor,s.ARRAY_BUFFER),i.set(h,f))),h.isSkinnedMesh){const g=h.skeleton;i.get(g)!==f&&(g.update(),i.set(g,f))}return m}function l(){i=new WeakMap}function c(h){const f=h.target;f.removeEventListener("dispose",c),e.remove(f.instanceMatrix),f.instanceColor!==null&&e.remove(f.instanceColor)}return{update:r,dispose:l}}const rM=new en,my=new gg(1,1),oM=new _f,lM=new yf,cM=new _c,gy=[],vy=[],_y=new Float32Array(16),yy=new Float32Array(9),xy=new Float32Array(4);function Zo(s,t,e){const n=s[0];if(n<=0||n>0)return s;const i=t*e;let r=gy[i];if(r===void 0&&(r=new Float32Array(i),gy[i]=r),t!==0){n.toArray(r,0);for(let l=1,c=0;l!==t;++l)c+=e,s[l].toArray(r,c)}return r}function xn(s,t){if(s.length!==t.length)return!1;for(let e=0,n=s.length;e<n;e++)if(s[e]!==t[e])return!1;return!0}function Sn(s,t){for(let e=0,n=t.length;e<n;e++)s[e]=t[e]}function Gf(s,t){let e=vy[t];e===void 0&&(e=new Int32Array(t),vy[t]=e);for(let n=0;n!==t;++n)e[n]=s.allocateTextureUnit();return e}function E2(s,t){const e=this.cache;e[0]!==t&&(s.uniform1f(this.addr,t),e[0]=t)}function T2(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2f(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(xn(e,t))return;s.uniform2fv(this.addr,t),Sn(e,t)}}function A2(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3f(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else if(t.r!==void 0)(e[0]!==t.r||e[1]!==t.g||e[2]!==t.b)&&(s.uniform3f(this.addr,t.r,t.g,t.b),e[0]=t.r,e[1]=t.g,e[2]=t.b);else{if(xn(e,t))return;s.uniform3fv(this.addr,t),Sn(e,t)}}function w2(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4f(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(xn(e,t))return;s.uniform4fv(this.addr,t),Sn(e,t)}}function C2(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(xn(e,t))return;s.uniformMatrix2fv(this.addr,!1,t),Sn(e,t)}else{if(xn(e,n))return;xy.set(n),s.uniformMatrix2fv(this.addr,!1,xy),Sn(e,n)}}function R2(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(xn(e,t))return;s.uniformMatrix3fv(this.addr,!1,t),Sn(e,t)}else{if(xn(e,n))return;yy.set(n),s.uniformMatrix3fv(this.addr,!1,yy),Sn(e,n)}}function D2(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(xn(e,t))return;s.uniformMatrix4fv(this.addr,!1,t),Sn(e,t)}else{if(xn(e,n))return;_y.set(n),s.uniformMatrix4fv(this.addr,!1,_y),Sn(e,n)}}function U2(s,t){const e=this.cache;e[0]!==t&&(s.uniform1i(this.addr,t),e[0]=t)}function P2(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2i(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(xn(e,t))return;s.uniform2iv(this.addr,t),Sn(e,t)}}function N2(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3i(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(xn(e,t))return;s.uniform3iv(this.addr,t),Sn(e,t)}}function L2(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4i(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(xn(e,t))return;s.uniform4iv(this.addr,t),Sn(e,t)}}function I2(s,t){const e=this.cache;e[0]!==t&&(s.uniform1ui(this.addr,t),e[0]=t)}function O2(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2ui(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(xn(e,t))return;s.uniform2uiv(this.addr,t),Sn(e,t)}}function z2(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3ui(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(xn(e,t))return;s.uniform3uiv(this.addr,t),Sn(e,t)}}function B2(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4ui(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(xn(e,t))return;s.uniform4uiv(this.addr,t),Sn(e,t)}}function F2(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i);let r;this.type===s.SAMPLER_2D_SHADOW?(my.compareFunction=og,r=my):r=rM,e.setTexture2D(t||r,i)}function H2(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTexture3D(t||lM,i)}function V2(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTextureCube(t||cM,i)}function G2(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTexture2DArray(t||oM,i)}function k2(s){switch(s){case 5126:return E2;case 35664:return T2;case 35665:return A2;case 35666:return w2;case 35674:return C2;case 35675:return R2;case 35676:return D2;case 5124:case 35670:return U2;case 35667:case 35671:return P2;case 35668:case 35672:return N2;case 35669:case 35673:return L2;case 5125:return I2;case 36294:return O2;case 36295:return z2;case 36296:return B2;case 35678:case 36198:case 36298:case 36306:case 35682:return F2;case 35679:case 36299:case 36307:return H2;case 35680:case 36300:case 36308:case 36293:return V2;case 36289:case 36303:case 36311:case 36292:return G2}}function W2(s,t){s.uniform1fv(this.addr,t)}function X2(s,t){const e=Zo(t,this.size,2);s.uniform2fv(this.addr,e)}function q2(s,t){const e=Zo(t,this.size,3);s.uniform3fv(this.addr,e)}function Y2(s,t){const e=Zo(t,this.size,4);s.uniform4fv(this.addr,e)}function j2(s,t){const e=Zo(t,this.size,4);s.uniformMatrix2fv(this.addr,!1,e)}function Z2(s,t){const e=Zo(t,this.size,9);s.uniformMatrix3fv(this.addr,!1,e)}function K2(s,t){const e=Zo(t,this.size,16);s.uniformMatrix4fv(this.addr,!1,e)}function J2(s,t){s.uniform1iv(this.addr,t)}function Q2(s,t){s.uniform2iv(this.addr,t)}function $2(s,t){s.uniform3iv(this.addr,t)}function t3(s,t){s.uniform4iv(this.addr,t)}function e3(s,t){s.uniform1uiv(this.addr,t)}function n3(s,t){s.uniform2uiv(this.addr,t)}function i3(s,t){s.uniform3uiv(this.addr,t)}function s3(s,t){s.uniform4uiv(this.addr,t)}function a3(s,t,e){const n=this.cache,i=t.length,r=Gf(e,i);xn(n,r)||(s.uniform1iv(this.addr,r),Sn(n,r));for(let l=0;l!==i;++l)e.setTexture2D(t[l]||rM,r[l])}function r3(s,t,e){const n=this.cache,i=t.length,r=Gf(e,i);xn(n,r)||(s.uniform1iv(this.addr,r),Sn(n,r));for(let l=0;l!==i;++l)e.setTexture3D(t[l]||lM,r[l])}function o3(s,t,e){const n=this.cache,i=t.length,r=Gf(e,i);xn(n,r)||(s.uniform1iv(this.addr,r),Sn(n,r));for(let l=0;l!==i;++l)e.setTextureCube(t[l]||cM,r[l])}function l3(s,t,e){const n=this.cache,i=t.length,r=Gf(e,i);xn(n,r)||(s.uniform1iv(this.addr,r),Sn(n,r));for(let l=0;l!==i;++l)e.setTexture2DArray(t[l]||oM,r[l])}function c3(s){switch(s){case 5126:return W2;case 35664:return X2;case 35665:return q2;case 35666:return Y2;case 35674:return j2;case 35675:return Z2;case 35676:return K2;case 5124:case 35670:return J2;case 35667:case 35671:return Q2;case 35668:case 35672:return $2;case 35669:case 35673:return t3;case 5125:return e3;case 36294:return n3;case 36295:return i3;case 36296:return s3;case 35678:case 36198:case 36298:case 36306:case 35682:return a3;case 35679:case 36299:case 36307:return r3;case 35680:case 36300:case 36308:case 36293:return o3;case 36289:case 36303:case 36311:case 36292:return l3}}class u3{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.setValue=k2(e.type)}}class h3{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.size=e.size,this.setValue=c3(e.type)}}class f3{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,n){const i=this.seq;for(let r=0,l=i.length;r!==l;++r){const c=i[r];c.setValue(t,e[c.id],n)}}}const nm=/(\w+)(\])?(\[|\.)?/g;function Sy(s,t){s.seq.push(t),s.map[t.id]=t}function d3(s,t,e){const n=s.name,i=n.length;for(nm.lastIndex=0;;){const r=nm.exec(n),l=nm.lastIndex;let c=r[1];const h=r[2]==="]",f=r[3];if(h&&(c=c|0),f===void 0||f==="["&&l+2===i){Sy(e,f===void 0?new u3(c,s,t):new h3(c,s,t));break}else{let m=e.map[c];m===void 0&&(m=new f3(c),Sy(e,m)),e=m}}}class hh{constructor(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,t.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const r=t.getActiveUniform(e,i),l=t.getUniformLocation(e,r.name);d3(r,l,this)}}setValue(t,e,n,i){const r=this.map[e];r!==void 0&&r.setValue(t,n,i)}setOptional(t,e,n){const i=e[n];i!==void 0&&this.setValue(t,n,i)}static upload(t,e,n,i){for(let r=0,l=e.length;r!==l;++r){const c=e[r],h=n[c.id];h.needsUpdate!==!1&&c.setValue(t,h.value,i)}}static seqWithValue(t,e){const n=[];for(let i=0,r=t.length;i!==r;++i){const l=t[i];l.id in e&&n.push(l)}return n}}function My(s,t,e){const n=s.createShader(t);return s.shaderSource(n,e),s.compileShader(n),n}const p3=37297;let m3=0;function g3(s,t){const e=s.split(`
`),n=[],i=Math.max(t-6,0),r=Math.min(t+6,e.length);for(let l=i;l<r;l++){const c=l+1;n.push(`${c===t?">":" "} ${c}: ${e[l]}`)}return n.join(`
`)}const by=new _e;function v3(s){Ue._getMatrix(by,Ue.workingColorSpace,s);const t=`mat3( ${by.elements.map(e=>e.toFixed(4))} )`;switch(Ue.getTransfer(s)){case sc:return[t,"LinearTransferOETF"];case ke:return[t,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",s),[t,"LinearTransferOETF"]}}function Ey(s,t,e){const n=s.getShaderParameter(t,s.COMPILE_STATUS),i=s.getShaderInfoLog(t).trim();if(n&&i==="")return"";const r=/ERROR: 0:(\d+)/.exec(i);if(r){const l=parseInt(r[1]);return e.toUpperCase()+`

`+i+`

`+g3(s.getShaderSource(t),l)}else return i}function _3(s,t){const e=v3(t);return[`vec4 ${s}( vec4 value ) {`,`	return ${e[1]}( vec4( value.rgb * ${e[0]}, value.a ) );`,"}"].join(`
`)}function y3(s,t){let e;switch(t){case zx:e="Linear";break;case Bx:e="Reinhard";break;case Fx:e="Cineon";break;case Jm:e="ACESFilmic";break;case Vx:e="AgX";break;case Gx:e="Neutral";break;case Hx:e="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),e="Linear"}return"vec3 "+s+"( vec3 color ) { return "+e+"ToneMapping( color ); }"}const nh=new L;function x3(){Ue.getLuminanceCoefficients(nh);const s=nh.x.toFixed(4),t=nh.y.toFixed(4),e=nh.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${s}, ${t}, ${e} );`,"	return dot( weights, rgb );","}"].join(`
`)}function S3(s){return[s.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",s.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(Hl).join(`
`)}function M3(s){const t=[];for(const e in s){const n=s[e];n!==!1&&t.push("#define "+e+" "+n)}return t.join(`
`)}function b3(s,t){const e={},n=s.getProgramParameter(t,s.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const r=s.getActiveAttrib(t,i),l=r.name;let c=1;r.type===s.FLOAT_MAT2&&(c=2),r.type===s.FLOAT_MAT3&&(c=3),r.type===s.FLOAT_MAT4&&(c=4),e[l]={type:r.type,location:s.getAttribLocation(t,l),locationSize:c}}return e}function Hl(s){return s!==""}function Ty(s,t){const e=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return s.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,e).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function Ay(s,t){return s.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const E3=/^[ \t]*#include +<([\w\d./]+)>/gm;function Vm(s){return s.replace(E3,A3)}const T3=new Map;function A3(s,t){let e=Me[t];if(e===void 0){const n=T3.get(t);if(n!==void 0)e=Me[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',t,n);else throw new Error("Can not resolve #include <"+t+">")}return Vm(e)}const w3=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function wy(s){return s.replace(w3,C3)}function C3(s,t,e,n){let i="";for(let r=parseInt(t);r<parseInt(e);r++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return i}function Cy(s){let t=`precision ${s.precision} float;
	precision ${s.precision} int;
	precision ${s.precision} sampler2D;
	precision ${s.precision} samplerCube;
	precision ${s.precision} sampler3D;
	precision ${s.precision} sampler2DArray;
	precision ${s.precision} sampler2DShadow;
	precision ${s.precision} samplerCubeShadow;
	precision ${s.precision} sampler2DArrayShadow;
	precision ${s.precision} isampler2D;
	precision ${s.precision} isampler3D;
	precision ${s.precision} isamplerCube;
	precision ${s.precision} isampler2DArray;
	precision ${s.precision} usampler2D;
	precision ${s.precision} usampler3D;
	precision ${s.precision} usamplerCube;
	precision ${s.precision} usampler2DArray;
	`;return s.precision==="highp"?t+=`
#define HIGH_PRECISION`:s.precision==="mediump"?t+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(t+=`
#define LOW_PRECISION`),t}function R3(s){let t="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===cf?t="SHADOWMAP_TYPE_PCF":s.shadowMapType===Vl?t="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===Qi&&(t="SHADOWMAP_TYPE_VSM"),t}function D3(s){let t="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case Zs:case Aa:t="ENVMAP_TYPE_CUBE";break;case Xo:t="ENVMAP_TYPE_CUBE_UV";break}return t}function U3(s){let t="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case Aa:t="ENVMAP_MODE_REFRACTION";break}return t}function P3(s){let t="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case gc:t="ENVMAP_BLENDING_MULTIPLY";break;case Ix:t="ENVMAP_BLENDING_MIX";break;case Ox:t="ENVMAP_BLENDING_ADD";break}return t}function N3(s){const t=s.envMapCubeUVHeight;if(t===null)return null;const e=Math.log2(t)-2,n=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,e),7*16)),texelHeight:n,maxMip:e}}function L3(s,t,e,n){const i=s.getContext(),r=e.defines;let l=e.vertexShader,c=e.fragmentShader;const h=R3(e),f=D3(e),p=U3(e),m=P3(e),g=N3(e),v=S3(e),x=M3(r),M=i.createProgram();let S,_,E=e.glslVersion?"#version "+e.glslVersion+`
`:"";e.isRawShaderMaterial?(S=["#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,x].filter(Hl).join(`
`),S.length>0&&(S+=`
`),_=["#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,x].filter(Hl).join(`
`),_.length>0&&(_+=`
`)):(S=[Cy(e),"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,x,e.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",e.batching?"#define USE_BATCHING":"",e.batchingColor?"#define USE_BATCHING_COLOR":"",e.instancing?"#define USE_INSTANCING":"",e.instancingColor?"#define USE_INSTANCING_COLOR":"",e.instancingMorph?"#define USE_INSTANCING_MORPH":"",e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+p:"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",e.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",e.displacementMap?"#define USE_DISPLACEMENTMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.anisotropy?"#define USE_ANISOTROPY":"",e.anisotropyMap?"#define USE_ANISOTROPYMAP":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",e.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaHash?"#define USE_ALPHAHASH":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",e.mapUv?"#define MAP_UV "+e.mapUv:"",e.alphaMapUv?"#define ALPHAMAP_UV "+e.alphaMapUv:"",e.lightMapUv?"#define LIGHTMAP_UV "+e.lightMapUv:"",e.aoMapUv?"#define AOMAP_UV "+e.aoMapUv:"",e.emissiveMapUv?"#define EMISSIVEMAP_UV "+e.emissiveMapUv:"",e.bumpMapUv?"#define BUMPMAP_UV "+e.bumpMapUv:"",e.normalMapUv?"#define NORMALMAP_UV "+e.normalMapUv:"",e.displacementMapUv?"#define DISPLACEMENTMAP_UV "+e.displacementMapUv:"",e.metalnessMapUv?"#define METALNESSMAP_UV "+e.metalnessMapUv:"",e.roughnessMapUv?"#define ROUGHNESSMAP_UV "+e.roughnessMapUv:"",e.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+e.anisotropyMapUv:"",e.clearcoatMapUv?"#define CLEARCOATMAP_UV "+e.clearcoatMapUv:"",e.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+e.clearcoatNormalMapUv:"",e.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+e.clearcoatRoughnessMapUv:"",e.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+e.iridescenceMapUv:"",e.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+e.iridescenceThicknessMapUv:"",e.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+e.sheenColorMapUv:"",e.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+e.sheenRoughnessMapUv:"",e.specularMapUv?"#define SPECULARMAP_UV "+e.specularMapUv:"",e.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+e.specularColorMapUv:"",e.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+e.specularIntensityMapUv:"",e.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+e.transmissionMapUv:"",e.thicknessMapUv?"#define THICKNESSMAP_UV "+e.thicknessMapUv:"",e.vertexTangents&&e.flatShading===!1?"#define USE_TANGENT":"",e.vertexColors?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUv1s?"#define USE_UV1":"",e.vertexUv2s?"#define USE_UV2":"",e.vertexUv3s?"#define USE_UV3":"",e.pointsUvs?"#define USE_POINTS_UV":"",e.flatShading?"#define FLAT_SHADED":"",e.skinning?"#define USE_SKINNING":"",e.morphTargets?"#define USE_MORPHTARGETS":"",e.morphNormals&&e.flatShading===!1?"#define USE_MORPHNORMALS":"",e.morphColors?"#define USE_MORPHCOLORS":"",e.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+e.morphTextureStride:"",e.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+e.morphTargetsCount:"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+h:"",e.sizeAttenuation?"#define USE_SIZEATTENUATION":"",e.numLightProbes>0?"#define USE_LIGHT_PROBES":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Hl).join(`
`),_=[Cy(e),"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,x,e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",e.map?"#define USE_MAP":"",e.matcap?"#define USE_MATCAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+f:"",e.envMap?"#define "+p:"",e.envMap?"#define "+m:"",g?"#define CUBEUV_TEXEL_WIDTH "+g.texelWidth:"",g?"#define CUBEUV_TEXEL_HEIGHT "+g.texelHeight:"",g?"#define CUBEUV_MAX_MIP "+g.maxMip+".0":"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",e.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.anisotropy?"#define USE_ANISOTROPY":"",e.anisotropyMap?"#define USE_ANISOTROPYMAP":"",e.clearcoat?"#define USE_CLEARCOAT":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.dispersion?"#define USE_DISPERSION":"",e.iridescence?"#define USE_IRIDESCENCE":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",e.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaTest?"#define USE_ALPHATEST":"",e.alphaHash?"#define USE_ALPHAHASH":"",e.sheen?"#define USE_SHEEN":"",e.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.vertexTangents&&e.flatShading===!1?"#define USE_TANGENT":"",e.vertexColors||e.instancingColor||e.batchingColor?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUv1s?"#define USE_UV1":"",e.vertexUv2s?"#define USE_UV2":"",e.vertexUv3s?"#define USE_UV3":"",e.pointsUvs?"#define USE_POINTS_UV":"",e.gradientMap?"#define USE_GRADIENTMAP":"",e.flatShading?"#define FLAT_SHADED":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+h:"",e.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",e.numLightProbes>0?"#define USE_LIGHT_PROBES":"",e.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",e.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",e.toneMapping!==vs?"#define TONE_MAPPING":"",e.toneMapping!==vs?Me.tonemapping_pars_fragment:"",e.toneMapping!==vs?y3("toneMapping",e.toneMapping):"",e.dithering?"#define DITHERING":"",e.opaque?"#define OPAQUE":"",Me.colorspace_pars_fragment,_3("linearToOutputTexel",e.outputColorSpace),x3(),e.useDepthPacking?"#define DEPTH_PACKING "+e.depthPacking:"",`
`].filter(Hl).join(`
`)),l=Vm(l),l=Ty(l,e),l=Ay(l,e),c=Vm(c),c=Ty(c,e),c=Ay(c,e),l=wy(l),c=wy(c),e.isRawShaderMaterial!==!0&&(E=`#version 300 es
`,S=[v,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+S,_=["#define varying in",e.glslVersion===Pm?"":"layout(location = 0) out highp vec4 pc_fragColor;",e.glslVersion===Pm?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+_);const T=E+S+l,A=E+_+c,N=My(i,i.VERTEX_SHADER,T),D=My(i,i.FRAGMENT_SHADER,A);i.attachShader(M,N),i.attachShader(M,D),e.index0AttributeName!==void 0?i.bindAttribLocation(M,0,e.index0AttributeName):e.morphTargets===!0&&i.bindAttribLocation(M,0,"position"),i.linkProgram(M);function I(B){if(s.debug.checkShaderErrors){const $=i.getProgramInfoLog(M).trim(),q=i.getShaderInfoLog(N).trim(),J=i.getShaderInfoLog(D).trim();let nt=!0,F=!0;if(i.getProgramParameter(M,i.LINK_STATUS)===!1)if(nt=!1,typeof s.debug.onShaderError=="function")s.debug.onShaderError(i,M,N,D);else{const X=Ey(i,N,"vertex"),G=Ey(i,D,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(M,i.VALIDATE_STATUS)+`

Material Name: `+B.name+`
Material Type: `+B.type+`

Program Info Log: `+$+`
`+X+`
`+G)}else $!==""?console.warn("THREE.WebGLProgram: Program Info Log:",$):(q===""||J==="")&&(F=!1);F&&(B.diagnostics={runnable:nt,programLog:$,vertexShader:{log:q,prefix:S},fragmentShader:{log:J,prefix:_}})}i.deleteShader(N),i.deleteShader(D),z=new hh(i,M),C=b3(i,M)}let z;this.getUniforms=function(){return z===void 0&&I(this),z};let C;this.getAttributes=function(){return C===void 0&&I(this),C};let w=e.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return w===!1&&(w=i.getProgramParameter(M,p3)),w},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(M),this.program=void 0},this.type=e.shaderType,this.name=e.shaderName,this.id=m3++,this.cacheKey=t,this.usedTimes=1,this.program=M,this.vertexShader=N,this.fragmentShader=D,this}let I3=0;class O3{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,n=t.fragmentShader,i=this._getShaderStage(e),r=this._getShaderStage(n),l=this._getShaderCacheForMaterial(t);return l.has(i)===!1&&(l.add(i),i.usedTimes++),l.has(r)===!1&&(l.add(r),r.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const n of e)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;let n=e.get(t);return n===void 0&&(n=new Set,e.set(t,n)),n}_getShaderStage(t){const e=this.shaderCache;let n=e.get(t);return n===void 0&&(n=new z3(t),e.set(t,n)),n}}class z3{constructor(t){this.id=I3++,this.code=t,this.usedTimes=0}}function B3(s,t,e,n,i,r,l){const c=new Fo,h=new O3,f=new Set,p=[],m=i.logarithmicDepthBuffer,g=i.vertexTextures;let v=i.precision;const x={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function M(C){return f.add(C),C===0?"uv":`uv${C}`}function S(C,w,B,$,q){const J=$.fog,nt=q.geometry,F=C.isMeshStandardMaterial?$.environment:null,X=(C.isMeshStandardMaterial?e:t).get(C.envMap||F),G=X&&X.mapping===Xo?X.image.height:null,st=x[C.type];C.precision!==null&&(v=i.getMaxPrecision(C.precision),v!==C.precision&&console.warn("THREE.WebGLProgram.getParameters:",C.precision,"not supported, using",v,"instead."));const ct=nt.morphAttributes.position||nt.morphAttributes.normal||nt.morphAttributes.color,_t=ct!==void 0?ct.length:0;let Dt=0;nt.morphAttributes.position!==void 0&&(Dt=1),nt.morphAttributes.normal!==void 0&&(Dt=2),nt.morphAttributes.color!==void 0&&(Dt=3);let Xt,tt,yt,Yt;if(st){const be=$i[st];Xt=be.vertexShader,tt=be.fragmentShader}else Xt=C.vertexShader,tt=C.fragmentShader,h.update(C),yt=h.getVertexShaderID(C),Yt=h.getFragmentShaderID(C);const Nt=s.getRenderTarget(),Vt=s.state.buffers.depth.getReversed(),fe=q.isInstancedMesh===!0,qt=q.isBatchedMesh===!0,ne=!!C.map,ce=!!C.matcap,ee=!!X,O=!!C.aoMap,Ct=!!C.lightMap,Mt=!!C.bumpMap,bt=!!C.normalMap,ht=!!C.displacementMap,Ot=!!C.emissiveMap,St=!!C.metalnessMap,Ft=!!C.roughnessMap,ue=C.anisotropy>0,H=C.clearcoat>0,R=C.dispersion>0,Q=C.iridescence>0,lt=C.sheen>0,pt=C.transmission>0,ut=ue&&!!C.anisotropyMap,te=H&&!!C.clearcoatMap,Lt=H&&!!C.clearcoatNormalMap,Kt=H&&!!C.clearcoatRoughnessMap,Qt=Q&&!!C.iridescenceMap,vt=Q&&!!C.iridescenceThicknessMap,zt=lt&&!!C.sheenColorMap,ie=lt&&!!C.sheenRoughnessMap,k=!!C.specularMap,et=!!C.specularColorMap,Tt=!!C.specularIntensityMap,V=pt&&!!C.transmissionMap,wt=pt&&!!C.thicknessMap,xt=!!C.gradientMap,Ht=!!C.alphaMap,At=C.alphaTest>0,gt=!!C.alphaHash,Gt=!!C.extensions;let se=vs;C.toneMapped&&(Nt===null||Nt.isXRRenderTarget===!0)&&(se=s.toneMapping);const we={shaderID:st,shaderType:C.type,shaderName:C.name,vertexShader:Xt,fragmentShader:tt,defines:C.defines,customVertexShaderID:yt,customFragmentShaderID:Yt,isRawShaderMaterial:C.isRawShaderMaterial===!0,glslVersion:C.glslVersion,precision:v,batching:qt,batchingColor:qt&&q._colorsTexture!==null,instancing:fe,instancingColor:fe&&q.instanceColor!==null,instancingMorph:fe&&q.morphTexture!==null,supportsVertexTextures:g,outputColorSpace:Nt===null?s.outputColorSpace:Nt.isXRRenderTarget===!0?Nt.texture.colorSpace:wa,alphaToCoverage:!!C.alphaToCoverage,map:ne,matcap:ce,envMap:ee,envMapMode:ee&&X.mapping,envMapCubeUVHeight:G,aoMap:O,lightMap:Ct,bumpMap:Mt,normalMap:bt,displacementMap:g&&ht,emissiveMap:Ot,normalMapObjectSpace:bt&&C.normalMapType===Zx,normalMapTangentSpace:bt&&C.normalMapType===Da,metalnessMap:St,roughnessMap:Ft,anisotropy:ue,anisotropyMap:ut,clearcoat:H,clearcoatMap:te,clearcoatNormalMap:Lt,clearcoatRoughnessMap:Kt,dispersion:R,iridescence:Q,iridescenceMap:Qt,iridescenceThicknessMap:vt,sheen:lt,sheenColorMap:zt,sheenRoughnessMap:ie,specularMap:k,specularColorMap:et,specularIntensityMap:Tt,transmission:pt,transmissionMap:V,thicknessMap:wt,gradientMap:xt,opaque:C.transparent===!1&&C.blending===Ta&&C.alphaToCoverage===!1,alphaMap:Ht,alphaTest:At,alphaHash:gt,combine:C.combine,mapUv:ne&&M(C.map.channel),aoMapUv:O&&M(C.aoMap.channel),lightMapUv:Ct&&M(C.lightMap.channel),bumpMapUv:Mt&&M(C.bumpMap.channel),normalMapUv:bt&&M(C.normalMap.channel),displacementMapUv:ht&&M(C.displacementMap.channel),emissiveMapUv:Ot&&M(C.emissiveMap.channel),metalnessMapUv:St&&M(C.metalnessMap.channel),roughnessMapUv:Ft&&M(C.roughnessMap.channel),anisotropyMapUv:ut&&M(C.anisotropyMap.channel),clearcoatMapUv:te&&M(C.clearcoatMap.channel),clearcoatNormalMapUv:Lt&&M(C.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:Kt&&M(C.clearcoatRoughnessMap.channel),iridescenceMapUv:Qt&&M(C.iridescenceMap.channel),iridescenceThicknessMapUv:vt&&M(C.iridescenceThicknessMap.channel),sheenColorMapUv:zt&&M(C.sheenColorMap.channel),sheenRoughnessMapUv:ie&&M(C.sheenRoughnessMap.channel),specularMapUv:k&&M(C.specularMap.channel),specularColorMapUv:et&&M(C.specularColorMap.channel),specularIntensityMapUv:Tt&&M(C.specularIntensityMap.channel),transmissionMapUv:V&&M(C.transmissionMap.channel),thicknessMapUv:wt&&M(C.thicknessMap.channel),alphaMapUv:Ht&&M(C.alphaMap.channel),vertexTangents:!!nt.attributes.tangent&&(bt||ue),vertexColors:C.vertexColors,vertexAlphas:C.vertexColors===!0&&!!nt.attributes.color&&nt.attributes.color.itemSize===4,pointsUvs:q.isPoints===!0&&!!nt.attributes.uv&&(ne||Ht),fog:!!J,useFog:C.fog===!0,fogExp2:!!J&&J.isFogExp2,flatShading:C.flatShading===!0&&C.wireframe===!1,sizeAttenuation:C.sizeAttenuation===!0,logarithmicDepthBuffer:m,reverseDepthBuffer:Vt,skinning:q.isSkinnedMesh===!0,morphTargets:nt.morphAttributes.position!==void 0,morphNormals:nt.morphAttributes.normal!==void 0,morphColors:nt.morphAttributes.color!==void 0,morphTargetsCount:_t,morphTextureStride:Dt,numDirLights:w.directional.length,numPointLights:w.point.length,numSpotLights:w.spot.length,numSpotLightMaps:w.spotLightMap.length,numRectAreaLights:w.rectArea.length,numHemiLights:w.hemi.length,numDirLightShadows:w.directionalShadowMap.length,numPointLightShadows:w.pointShadowMap.length,numSpotLightShadows:w.spotShadowMap.length,numSpotLightShadowsWithMaps:w.numSpotLightShadowsWithMaps,numLightProbes:w.numLightProbes,numClippingPlanes:l.numPlanes,numClipIntersection:l.numIntersection,dithering:C.dithering,shadowMapEnabled:s.shadowMap.enabled&&B.length>0,shadowMapType:s.shadowMap.type,toneMapping:se,decodeVideoTexture:ne&&C.map.isVideoTexture===!0&&Ue.getTransfer(C.map.colorSpace)===ke,decodeVideoTextureEmissive:Ot&&C.emissiveMap.isVideoTexture===!0&&Ue.getTransfer(C.emissiveMap.colorSpace)===ke,premultipliedAlpha:C.premultipliedAlpha,doubleSided:C.side===ts,flipSided:C.side===ni,useDepthPacking:C.depthPacking>=0,depthPacking:C.depthPacking||0,index0AttributeName:C.index0AttributeName,extensionClipCullDistance:Gt&&C.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(Gt&&C.extensions.multiDraw===!0||qt)&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:C.customProgramCacheKey()};return we.vertexUv1s=f.has(1),we.vertexUv2s=f.has(2),we.vertexUv3s=f.has(3),f.clear(),we}function _(C){const w=[];if(C.shaderID?w.push(C.shaderID):(w.push(C.customVertexShaderID),w.push(C.customFragmentShaderID)),C.defines!==void 0)for(const B in C.defines)w.push(B),w.push(C.defines[B]);return C.isRawShaderMaterial===!1&&(E(w,C),T(w,C),w.push(s.outputColorSpace)),w.push(C.customProgramCacheKey),w.join()}function E(C,w){C.push(w.precision),C.push(w.outputColorSpace),C.push(w.envMapMode),C.push(w.envMapCubeUVHeight),C.push(w.mapUv),C.push(w.alphaMapUv),C.push(w.lightMapUv),C.push(w.aoMapUv),C.push(w.bumpMapUv),C.push(w.normalMapUv),C.push(w.displacementMapUv),C.push(w.emissiveMapUv),C.push(w.metalnessMapUv),C.push(w.roughnessMapUv),C.push(w.anisotropyMapUv),C.push(w.clearcoatMapUv),C.push(w.clearcoatNormalMapUv),C.push(w.clearcoatRoughnessMapUv),C.push(w.iridescenceMapUv),C.push(w.iridescenceThicknessMapUv),C.push(w.sheenColorMapUv),C.push(w.sheenRoughnessMapUv),C.push(w.specularMapUv),C.push(w.specularColorMapUv),C.push(w.specularIntensityMapUv),C.push(w.transmissionMapUv),C.push(w.thicknessMapUv),C.push(w.combine),C.push(w.fogExp2),C.push(w.sizeAttenuation),C.push(w.morphTargetsCount),C.push(w.morphAttributeCount),C.push(w.numDirLights),C.push(w.numPointLights),C.push(w.numSpotLights),C.push(w.numSpotLightMaps),C.push(w.numHemiLights),C.push(w.numRectAreaLights),C.push(w.numDirLightShadows),C.push(w.numPointLightShadows),C.push(w.numSpotLightShadows),C.push(w.numSpotLightShadowsWithMaps),C.push(w.numLightProbes),C.push(w.shadowMapType),C.push(w.toneMapping),C.push(w.numClippingPlanes),C.push(w.numClipIntersection),C.push(w.depthPacking)}function T(C,w){c.disableAll(),w.supportsVertexTextures&&c.enable(0),w.instancing&&c.enable(1),w.instancingColor&&c.enable(2),w.instancingMorph&&c.enable(3),w.matcap&&c.enable(4),w.envMap&&c.enable(5),w.normalMapObjectSpace&&c.enable(6),w.normalMapTangentSpace&&c.enable(7),w.clearcoat&&c.enable(8),w.iridescence&&c.enable(9),w.alphaTest&&c.enable(10),w.vertexColors&&c.enable(11),w.vertexAlphas&&c.enable(12),w.vertexUv1s&&c.enable(13),w.vertexUv2s&&c.enable(14),w.vertexUv3s&&c.enable(15),w.vertexTangents&&c.enable(16),w.anisotropy&&c.enable(17),w.alphaHash&&c.enable(18),w.batching&&c.enable(19),w.dispersion&&c.enable(20),w.batchingColor&&c.enable(21),w.gradientMap&&c.enable(22),C.push(c.mask),c.disableAll(),w.fog&&c.enable(0),w.useFog&&c.enable(1),w.flatShading&&c.enable(2),w.logarithmicDepthBuffer&&c.enable(3),w.reverseDepthBuffer&&c.enable(4),w.skinning&&c.enable(5),w.morphTargets&&c.enable(6),w.morphNormals&&c.enable(7),w.morphColors&&c.enable(8),w.premultipliedAlpha&&c.enable(9),w.shadowMapEnabled&&c.enable(10),w.doubleSided&&c.enable(11),w.flipSided&&c.enable(12),w.useDepthPacking&&c.enable(13),w.dithering&&c.enable(14),w.transmission&&c.enable(15),w.sheen&&c.enable(16),w.opaque&&c.enable(17),w.pointsUvs&&c.enable(18),w.decodeVideoTexture&&c.enable(19),w.decodeVideoTextureEmissive&&c.enable(20),w.alphaToCoverage&&c.enable(21),C.push(c.mask)}function A(C){const w=x[C.type];let B;if(w){const $=$i[w];B=Jh.clone($.uniforms)}else B=C.uniforms;return B}function N(C,w){let B;for(let $=0,q=p.length;$<q;$++){const J=p[$];if(J.cacheKey===w){B=J,++B.usedTimes;break}}return B===void 0&&(B=new L3(s,w,C,r),p.push(B)),B}function D(C){if(--C.usedTimes===0){const w=p.indexOf(C);p[w]=p[p.length-1],p.pop(),C.destroy()}}function I(C){h.remove(C)}function z(){h.dispose()}return{getParameters:S,getProgramCacheKey:_,getUniforms:A,acquireProgram:N,releaseProgram:D,releaseShaderCache:I,programs:p,dispose:z}}function F3(){let s=new WeakMap;function t(l){return s.has(l)}function e(l){let c=s.get(l);return c===void 0&&(c={},s.set(l,c)),c}function n(l){s.delete(l)}function i(l,c,h){s.get(l)[c]=h}function r(){s=new WeakMap}return{has:t,get:e,remove:n,update:i,dispose:r}}function H3(s,t){return s.groupOrder!==t.groupOrder?s.groupOrder-t.groupOrder:s.renderOrder!==t.renderOrder?s.renderOrder-t.renderOrder:s.material.id!==t.material.id?s.material.id-t.material.id:s.z!==t.z?s.z-t.z:s.id-t.id}function Ry(s,t){return s.groupOrder!==t.groupOrder?s.groupOrder-t.groupOrder:s.renderOrder!==t.renderOrder?s.renderOrder-t.renderOrder:s.z!==t.z?t.z-s.z:s.id-t.id}function Dy(){const s=[];let t=0;const e=[],n=[],i=[];function r(){t=0,e.length=0,n.length=0,i.length=0}function l(m,g,v,x,M,S){let _=s[t];return _===void 0?(_={id:m.id,object:m,geometry:g,material:v,groupOrder:x,renderOrder:m.renderOrder,z:M,group:S},s[t]=_):(_.id=m.id,_.object=m,_.geometry=g,_.material=v,_.groupOrder=x,_.renderOrder=m.renderOrder,_.z=M,_.group=S),t++,_}function c(m,g,v,x,M,S){const _=l(m,g,v,x,M,S);v.transmission>0?n.push(_):v.transparent===!0?i.push(_):e.push(_)}function h(m,g,v,x,M,S){const _=l(m,g,v,x,M,S);v.transmission>0?n.unshift(_):v.transparent===!0?i.unshift(_):e.unshift(_)}function f(m,g){e.length>1&&e.sort(m||H3),n.length>1&&n.sort(g||Ry),i.length>1&&i.sort(g||Ry)}function p(){for(let m=t,g=s.length;m<g;m++){const v=s[m];if(v.id===null)break;v.id=null,v.object=null,v.geometry=null,v.material=null,v.group=null}}return{opaque:e,transmissive:n,transparent:i,init:r,push:c,unshift:h,finish:p,sort:f}}function V3(){let s=new WeakMap;function t(n,i){const r=s.get(n);let l;return r===void 0?(l=new Dy,s.set(n,[l])):i>=r.length?(l=new Dy,r.push(l)):l=r[i],l}function e(){s=new WeakMap}return{get:t,dispose:e}}function G3(){const s={};return{get:function(t){if(s[t.id]!==void 0)return s[t.id];let e;switch(t.type){case"DirectionalLight":e={direction:new L,color:new kt};break;case"SpotLight":e={position:new L,direction:new L,color:new kt,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":e={position:new L,color:new kt,distance:0,decay:0};break;case"HemisphereLight":e={direction:new L,skyColor:new kt,groundColor:new kt};break;case"RectAreaLight":e={color:new kt,position:new L,halfWidth:new L,halfHeight:new L};break}return s[t.id]=e,e}}}function k3(){const s={};return{get:function(t){if(s[t.id]!==void 0)return s[t.id];let e;switch(t.type){case"DirectionalLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ft};break;case"SpotLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ft};break;case"PointLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ft,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[t.id]=e,e}}}let W3=0;function X3(s,t){return(t.castShadow?2:0)-(s.castShadow?2:0)+(t.map?1:0)-(s.map?1:0)}function q3(s){const t=new G3,e=k3(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let f=0;f<9;f++)n.probe.push(new L);const i=new L,r=new he,l=new he;function c(f){let p=0,m=0,g=0;for(let C=0;C<9;C++)n.probe[C].set(0,0,0);let v=0,x=0,M=0,S=0,_=0,E=0,T=0,A=0,N=0,D=0,I=0;f.sort(X3);for(let C=0,w=f.length;C<w;C++){const B=f[C],$=B.color,q=B.intensity,J=B.distance,nt=B.shadow&&B.shadow.map?B.shadow.map.texture:null;if(B.isAmbientLight)p+=$.r*q,m+=$.g*q,g+=$.b*q;else if(B.isLightProbe){for(let F=0;F<9;F++)n.probe[F].addScaledVector(B.sh.coefficients[F],q);I++}else if(B.isDirectionalLight){const F=t.get(B);if(F.color.copy(B.color).multiplyScalar(B.intensity),B.castShadow){const X=B.shadow,G=e.get(B);G.shadowIntensity=X.intensity,G.shadowBias=X.bias,G.shadowNormalBias=X.normalBias,G.shadowRadius=X.radius,G.shadowMapSize=X.mapSize,n.directionalShadow[v]=G,n.directionalShadowMap[v]=nt,n.directionalShadowMatrix[v]=B.shadow.matrix,E++}n.directional[v]=F,v++}else if(B.isSpotLight){const F=t.get(B);F.position.setFromMatrixPosition(B.matrixWorld),F.color.copy($).multiplyScalar(q),F.distance=J,F.coneCos=Math.cos(B.angle),F.penumbraCos=Math.cos(B.angle*(1-B.penumbra)),F.decay=B.decay,n.spot[M]=F;const X=B.shadow;if(B.map&&(n.spotLightMap[N]=B.map,N++,X.updateMatrices(B),B.castShadow&&D++),n.spotLightMatrix[M]=X.matrix,B.castShadow){const G=e.get(B);G.shadowIntensity=X.intensity,G.shadowBias=X.bias,G.shadowNormalBias=X.normalBias,G.shadowRadius=X.radius,G.shadowMapSize=X.mapSize,n.spotShadow[M]=G,n.spotShadowMap[M]=nt,A++}M++}else if(B.isRectAreaLight){const F=t.get(B);F.color.copy($).multiplyScalar(q),F.halfWidth.set(B.width*.5,0,0),F.halfHeight.set(0,B.height*.5,0),n.rectArea[S]=F,S++}else if(B.isPointLight){const F=t.get(B);if(F.color.copy(B.color).multiplyScalar(B.intensity),F.distance=B.distance,F.decay=B.decay,B.castShadow){const X=B.shadow,G=e.get(B);G.shadowIntensity=X.intensity,G.shadowBias=X.bias,G.shadowNormalBias=X.normalBias,G.shadowRadius=X.radius,G.shadowMapSize=X.mapSize,G.shadowCameraNear=X.camera.near,G.shadowCameraFar=X.camera.far,n.pointShadow[x]=G,n.pointShadowMap[x]=nt,n.pointShadowMatrix[x]=B.shadow.matrix,T++}n.point[x]=F,x++}else if(B.isHemisphereLight){const F=t.get(B);F.skyColor.copy(B.color).multiplyScalar(q),F.groundColor.copy(B.groundColor).multiplyScalar(q),n.hemi[_]=F,_++}}S>0&&(s.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=It.LTC_FLOAT_1,n.rectAreaLTC2=It.LTC_FLOAT_2):(n.rectAreaLTC1=It.LTC_HALF_1,n.rectAreaLTC2=It.LTC_HALF_2)),n.ambient[0]=p,n.ambient[1]=m,n.ambient[2]=g;const z=n.hash;(z.directionalLength!==v||z.pointLength!==x||z.spotLength!==M||z.rectAreaLength!==S||z.hemiLength!==_||z.numDirectionalShadows!==E||z.numPointShadows!==T||z.numSpotShadows!==A||z.numSpotMaps!==N||z.numLightProbes!==I)&&(n.directional.length=v,n.spot.length=M,n.rectArea.length=S,n.point.length=x,n.hemi.length=_,n.directionalShadow.length=E,n.directionalShadowMap.length=E,n.pointShadow.length=T,n.pointShadowMap.length=T,n.spotShadow.length=A,n.spotShadowMap.length=A,n.directionalShadowMatrix.length=E,n.pointShadowMatrix.length=T,n.spotLightMatrix.length=A+N-D,n.spotLightMap.length=N,n.numSpotLightShadowsWithMaps=D,n.numLightProbes=I,z.directionalLength=v,z.pointLength=x,z.spotLength=M,z.rectAreaLength=S,z.hemiLength=_,z.numDirectionalShadows=E,z.numPointShadows=T,z.numSpotShadows=A,z.numSpotMaps=N,z.numLightProbes=I,n.version=W3++)}function h(f,p){let m=0,g=0,v=0,x=0,M=0;const S=p.matrixWorldInverse;for(let _=0,E=f.length;_<E;_++){const T=f[_];if(T.isDirectionalLight){const A=n.directional[m];A.direction.setFromMatrixPosition(T.matrixWorld),i.setFromMatrixPosition(T.target.matrixWorld),A.direction.sub(i),A.direction.transformDirection(S),m++}else if(T.isSpotLight){const A=n.spot[v];A.position.setFromMatrixPosition(T.matrixWorld),A.position.applyMatrix4(S),A.direction.setFromMatrixPosition(T.matrixWorld),i.setFromMatrixPosition(T.target.matrixWorld),A.direction.sub(i),A.direction.transformDirection(S),v++}else if(T.isRectAreaLight){const A=n.rectArea[x];A.position.setFromMatrixPosition(T.matrixWorld),A.position.applyMatrix4(S),l.identity(),r.copy(T.matrixWorld),r.premultiply(S),l.extractRotation(r),A.halfWidth.set(T.width*.5,0,0),A.halfHeight.set(0,T.height*.5,0),A.halfWidth.applyMatrix4(l),A.halfHeight.applyMatrix4(l),x++}else if(T.isPointLight){const A=n.point[g];A.position.setFromMatrixPosition(T.matrixWorld),A.position.applyMatrix4(S),g++}else if(T.isHemisphereLight){const A=n.hemi[M];A.direction.setFromMatrixPosition(T.matrixWorld),A.direction.transformDirection(S),M++}}}return{setup:c,setupView:h,state:n}}function Uy(s){const t=new q3(s),e=[],n=[];function i(p){f.camera=p,e.length=0,n.length=0}function r(p){e.push(p)}function l(p){n.push(p)}function c(){t.setup(e)}function h(p){t.setupView(e,p)}const f={lightsArray:e,shadowsArray:n,camera:null,lights:t,transmissionRenderTarget:{}};return{init:i,state:f,setupLights:c,setupLightsView:h,pushLight:r,pushShadow:l}}function Y3(s){let t=new WeakMap;function e(i,r=0){const l=t.get(i);let c;return l===void 0?(c=new Uy(s),t.set(i,[c])):r>=l.length?(c=new Uy(s),l.push(c)):c=l[r],c}function n(){t=new WeakMap}return{get:e,dispose:n}}const j3=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,Z3=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function K3(s,t,e){let n=new Yo;const i=new ft,r=new ft,l=new Ae,c=new Ag({depthPacking:jx}),h=new wg,f={},p=e.maxTextureSize,m={[js]:ni,[ni]:js,[ts]:ts},g=new wi({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ft},radius:{value:4}},vertexShader:j3,fragmentShader:Z3}),v=g.clone();v.defines.HORIZONTAL_PASS=1;const x=new Se;x.setAttribute("position",new qe(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const M=new hn(x,g),S=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=cf;let _=this.type;this.render=function(D,I,z){if(S.enabled===!1||S.autoUpdate===!1&&S.needsUpdate===!1||D.length===0)return;const C=s.getRenderTarget(),w=s.getActiveCubeFace(),B=s.getActiveMipmapLevel(),$=s.state;$.setBlending(qs),$.buffers.color.setClear(1,1,1,1),$.buffers.depth.setTest(!0),$.setScissorTest(!1);const q=_!==Qi&&this.type===Qi,J=_===Qi&&this.type!==Qi;for(let nt=0,F=D.length;nt<F;nt++){const X=D[nt],G=X.shadow;if(G===void 0){console.warn("THREE.WebGLShadowMap:",X,"has no shadow.");continue}if(G.autoUpdate===!1&&G.needsUpdate===!1)continue;i.copy(G.mapSize);const st=G.getFrameExtents();if(i.multiply(st),r.copy(G.mapSize),(i.x>p||i.y>p)&&(i.x>p&&(r.x=Math.floor(p/st.x),i.x=r.x*st.x,G.mapSize.x=r.x),i.y>p&&(r.y=Math.floor(p/st.y),i.y=r.y*st.y,G.mapSize.y=r.y)),G.map===null||q===!0||J===!0){const _t=this.type!==Qi?{minFilter:Ln,magFilter:Ln}:{};G.map!==null&&G.map.dispose(),G.map=new xs(i.x,i.y,_t),G.map.texture.name=X.name+".shadowMap",G.camera.updateProjectionMatrix()}s.setRenderTarget(G.map),s.clear();const ct=G.getViewportCount();for(let _t=0;_t<ct;_t++){const Dt=G.getViewport(_t);l.set(r.x*Dt.x,r.y*Dt.y,r.x*Dt.z,r.y*Dt.w),$.viewport(l),G.updateMatrices(X,_t),n=G.getFrustum(),A(I,z,G.camera,X,this.type)}G.isPointLightShadow!==!0&&this.type===Qi&&E(G,z),G.needsUpdate=!1}_=this.type,S.needsUpdate=!1,s.setRenderTarget(C,w,B)};function E(D,I){const z=t.update(M);g.defines.VSM_SAMPLES!==D.blurSamples&&(g.defines.VSM_SAMPLES=D.blurSamples,v.defines.VSM_SAMPLES=D.blurSamples,g.needsUpdate=!0,v.needsUpdate=!0),D.mapPass===null&&(D.mapPass=new xs(i.x,i.y)),g.uniforms.shadow_pass.value=D.map.texture,g.uniforms.resolution.value=D.mapSize,g.uniforms.radius.value=D.radius,s.setRenderTarget(D.mapPass),s.clear(),s.renderBufferDirect(I,null,z,g,M,null),v.uniforms.shadow_pass.value=D.mapPass.texture,v.uniforms.resolution.value=D.mapSize,v.uniforms.radius.value=D.radius,s.setRenderTarget(D.map),s.clear(),s.renderBufferDirect(I,null,z,v,M,null)}function T(D,I,z,C){let w=null;const B=z.isPointLight===!0?D.customDistanceMaterial:D.customDepthMaterial;if(B!==void 0)w=B;else if(w=z.isPointLight===!0?h:c,s.localClippingEnabled&&I.clipShadows===!0&&Array.isArray(I.clippingPlanes)&&I.clippingPlanes.length!==0||I.displacementMap&&I.displacementScale!==0||I.alphaMap&&I.alphaTest>0||I.map&&I.alphaTest>0||I.alphaToCoverage===!0){const $=w.uuid,q=I.uuid;let J=f[$];J===void 0&&(J={},f[$]=J);let nt=J[q];nt===void 0&&(nt=w.clone(),J[q]=nt,I.addEventListener("dispose",N)),w=nt}if(w.visible=I.visible,w.wireframe=I.wireframe,C===Qi?w.side=I.shadowSide!==null?I.shadowSide:I.side:w.side=I.shadowSide!==null?I.shadowSide:m[I.side],w.alphaMap=I.alphaMap,w.alphaTest=I.alphaToCoverage===!0?.5:I.alphaTest,w.map=I.map,w.clipShadows=I.clipShadows,w.clippingPlanes=I.clippingPlanes,w.clipIntersection=I.clipIntersection,w.displacementMap=I.displacementMap,w.displacementScale=I.displacementScale,w.displacementBias=I.displacementBias,w.wireframeLinewidth=I.wireframeLinewidth,w.linewidth=I.linewidth,z.isPointLight===!0&&w.isMeshDistanceMaterial===!0){const $=s.properties.get(w);$.light=z}return w}function A(D,I,z,C,w){if(D.visible===!1)return;if(D.layers.test(I.layers)&&(D.isMesh||D.isLine||D.isPoints)&&(D.castShadow||D.receiveShadow&&w===Qi)&&(!D.frustumCulled||n.intersectsObject(D))){D.modelViewMatrix.multiplyMatrices(z.matrixWorldInverse,D.matrixWorld);const q=t.update(D),J=D.material;if(Array.isArray(J)){const nt=q.groups;for(let F=0,X=nt.length;F<X;F++){const G=nt[F],st=J[G.materialIndex];if(st&&st.visible){const ct=T(D,st,C,w);D.onBeforeShadow(s,D,I,z,q,ct,G),s.renderBufferDirect(z,null,q,ct,D,G),D.onAfterShadow(s,D,I,z,q,ct,G)}}}else if(J.visible){const nt=T(D,J,C,w);D.onBeforeShadow(s,D,I,z,q,nt,null),s.renderBufferDirect(z,null,q,nt,D,null),D.onAfterShadow(s,D,I,z,q,nt,null)}}const $=D.children;for(let q=0,J=$.length;q<J;q++)A($[q],I,z,C,w)}function N(D){D.target.removeEventListener("dispose",N);for(const z in f){const C=f[z],w=D.target.uuid;w in C&&(C[w].dispose(),delete C[w])}}}const J3={[vh]:_h,[yh]:Mh,[xh]:bh,[br]:Sh,[_h]:vh,[Mh]:yh,[bh]:xh,[Sh]:br};function Q3(s,t){function e(){let V=!1;const wt=new Ae;let xt=null;const Ht=new Ae(0,0,0,0);return{setMask:function(At){xt!==At&&!V&&(s.colorMask(At,At,At,At),xt=At)},setLocked:function(At){V=At},setClear:function(At,gt,Gt,se,we){we===!0&&(At*=se,gt*=se,Gt*=se),wt.set(At,gt,Gt,se),Ht.equals(wt)===!1&&(s.clearColor(At,gt,Gt,se),Ht.copy(wt))},reset:function(){V=!1,xt=null,Ht.set(-1,0,0,0)}}}function n(){let V=!1,wt=!1,xt=null,Ht=null,At=null;return{setReversed:function(gt){if(wt!==gt){const Gt=t.get("EXT_clip_control");gt?Gt.clipControlEXT(Gt.LOWER_LEFT_EXT,Gt.ZERO_TO_ONE_EXT):Gt.clipControlEXT(Gt.LOWER_LEFT_EXT,Gt.NEGATIVE_ONE_TO_ONE_EXT),wt=gt;const se=At;At=null,this.setClear(se)}},getReversed:function(){return wt},setTest:function(gt){gt?Nt(s.DEPTH_TEST):Vt(s.DEPTH_TEST)},setMask:function(gt){xt!==gt&&!V&&(s.depthMask(gt),xt=gt)},setFunc:function(gt){if(wt&&(gt=J3[gt]),Ht!==gt){switch(gt){case vh:s.depthFunc(s.NEVER);break;case _h:s.depthFunc(s.ALWAYS);break;case yh:s.depthFunc(s.LESS);break;case br:s.depthFunc(s.LEQUAL);break;case xh:s.depthFunc(s.EQUAL);break;case Sh:s.depthFunc(s.GEQUAL);break;case Mh:s.depthFunc(s.GREATER);break;case bh:s.depthFunc(s.NOTEQUAL);break;default:s.depthFunc(s.LEQUAL)}Ht=gt}},setLocked:function(gt){V=gt},setClear:function(gt){At!==gt&&(wt&&(gt=1-gt),s.clearDepth(gt),At=gt)},reset:function(){V=!1,xt=null,Ht=null,At=null,wt=!1}}}function i(){let V=!1,wt=null,xt=null,Ht=null,At=null,gt=null,Gt=null,se=null,we=null;return{setTest:function(be){V||(be?Nt(s.STENCIL_TEST):Vt(s.STENCIL_TEST))},setMask:function(be){wt!==be&&!V&&(s.stencilMask(be),wt=be)},setFunc:function(be,fn,An){(xt!==be||Ht!==fn||At!==An)&&(s.stencilFunc(be,fn,An),xt=be,Ht=fn,At=An)},setOp:function(be,fn,An){(gt!==be||Gt!==fn||se!==An)&&(s.stencilOp(be,fn,An),gt=be,Gt=fn,se=An)},setLocked:function(be){V=be},setClear:function(be){we!==be&&(s.clearStencil(be),we=be)},reset:function(){V=!1,wt=null,xt=null,Ht=null,At=null,gt=null,Gt=null,se=null,we=null}}}const r=new e,l=new n,c=new i,h=new WeakMap,f=new WeakMap;let p={},m={},g=new WeakMap,v=[],x=null,M=!1,S=null,_=null,E=null,T=null,A=null,N=null,D=null,I=new kt(0,0,0),z=0,C=!1,w=null,B=null,$=null,q=null,J=null;const nt=s.getParameter(s.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let F=!1,X=0;const G=s.getParameter(s.VERSION);G.indexOf("WebGL")!==-1?(X=parseFloat(/^WebGL (\d)/.exec(G)[1]),F=X>=1):G.indexOf("OpenGL ES")!==-1&&(X=parseFloat(/^OpenGL ES (\d)/.exec(G)[1]),F=X>=2);let st=null,ct={};const _t=s.getParameter(s.SCISSOR_BOX),Dt=s.getParameter(s.VIEWPORT),Xt=new Ae().fromArray(_t),tt=new Ae().fromArray(Dt);function yt(V,wt,xt,Ht){const At=new Uint8Array(4),gt=s.createTexture();s.bindTexture(V,gt),s.texParameteri(V,s.TEXTURE_MIN_FILTER,s.NEAREST),s.texParameteri(V,s.TEXTURE_MAG_FILTER,s.NEAREST);for(let Gt=0;Gt<xt;Gt++)V===s.TEXTURE_3D||V===s.TEXTURE_2D_ARRAY?s.texImage3D(wt,0,s.RGBA,1,1,Ht,0,s.RGBA,s.UNSIGNED_BYTE,At):s.texImage2D(wt+Gt,0,s.RGBA,1,1,0,s.RGBA,s.UNSIGNED_BYTE,At);return gt}const Yt={};Yt[s.TEXTURE_2D]=yt(s.TEXTURE_2D,s.TEXTURE_2D,1),Yt[s.TEXTURE_CUBE_MAP]=yt(s.TEXTURE_CUBE_MAP,s.TEXTURE_CUBE_MAP_POSITIVE_X,6),Yt[s.TEXTURE_2D_ARRAY]=yt(s.TEXTURE_2D_ARRAY,s.TEXTURE_2D_ARRAY,1,1),Yt[s.TEXTURE_3D]=yt(s.TEXTURE_3D,s.TEXTURE_3D,1,1),r.setClear(0,0,0,1),l.setClear(1),c.setClear(0),Nt(s.DEPTH_TEST),l.setFunc(br),Mt(!1),bt(wm),Nt(s.CULL_FACE),O(qs);function Nt(V){p[V]!==!0&&(s.enable(V),p[V]=!0)}function Vt(V){p[V]!==!1&&(s.disable(V),p[V]=!1)}function fe(V,wt){return m[V]!==wt?(s.bindFramebuffer(V,wt),m[V]=wt,V===s.DRAW_FRAMEBUFFER&&(m[s.FRAMEBUFFER]=wt),V===s.FRAMEBUFFER&&(m[s.DRAW_FRAMEBUFFER]=wt),!0):!1}function qt(V,wt){let xt=v,Ht=!1;if(V){xt=g.get(wt),xt===void 0&&(xt=[],g.set(wt,xt));const At=V.textures;if(xt.length!==At.length||xt[0]!==s.COLOR_ATTACHMENT0){for(let gt=0,Gt=At.length;gt<Gt;gt++)xt[gt]=s.COLOR_ATTACHMENT0+gt;xt.length=At.length,Ht=!0}}else xt[0]!==s.BACK&&(xt[0]=s.BACK,Ht=!0);Ht&&s.drawBuffers(xt)}function ne(V){return x!==V?(s.useProgram(V),x=V,!0):!1}const ce={[Ma]:s.FUNC_ADD,[_x]:s.FUNC_SUBTRACT,[yx]:s.FUNC_REVERSE_SUBTRACT};ce[xx]=s.MIN,ce[Sx]=s.MAX;const ee={[Mx]:s.ZERO,[bx]:s.ONE,[Ex]:s.SRC_COLOR,[mh]:s.SRC_ALPHA,[Dx]:s.SRC_ALPHA_SATURATE,[Cx]:s.DST_COLOR,[Ax]:s.DST_ALPHA,[Tx]:s.ONE_MINUS_SRC_COLOR,[gh]:s.ONE_MINUS_SRC_ALPHA,[Rx]:s.ONE_MINUS_DST_COLOR,[wx]:s.ONE_MINUS_DST_ALPHA,[Ux]:s.CONSTANT_COLOR,[Px]:s.ONE_MINUS_CONSTANT_COLOR,[Nx]:s.CONSTANT_ALPHA,[Lx]:s.ONE_MINUS_CONSTANT_ALPHA};function O(V,wt,xt,Ht,At,gt,Gt,se,we,be){if(V===qs){M===!0&&(Vt(s.BLEND),M=!1);return}if(M===!1&&(Nt(s.BLEND),M=!0),V!==vx){if(V!==S||be!==C){if((_!==Ma||A!==Ma)&&(s.blendEquation(s.FUNC_ADD),_=Ma,A=Ma),be)switch(V){case Ta:s.blendFuncSeparate(s.ONE,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case ph:s.blendFunc(s.ONE,s.ONE);break;case Cm:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case Rm:s.blendFuncSeparate(s.DST_COLOR,s.ONE_MINUS_SRC_ALPHA,s.ZERO,s.ONE);break;default:console.error("THREE.WebGLState: Invalid blending: ",V);break}else switch(V){case Ta:s.blendFuncSeparate(s.SRC_ALPHA,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case ph:s.blendFuncSeparate(s.SRC_ALPHA,s.ONE,s.ONE,s.ONE);break;case Cm:console.error("THREE.WebGLState: SubtractiveBlending requires material.premultipliedAlpha = true");break;case Rm:console.error("THREE.WebGLState: MultiplyBlending requires material.premultipliedAlpha = true");break;default:console.error("THREE.WebGLState: Invalid blending: ",V);break}E=null,T=null,N=null,D=null,I.set(0,0,0),z=0,S=V,C=be}return}At=At||wt,gt=gt||xt,Gt=Gt||Ht,(wt!==_||At!==A)&&(s.blendEquationSeparate(ce[wt],ce[At]),_=wt,A=At),(xt!==E||Ht!==T||gt!==N||Gt!==D)&&(s.blendFuncSeparate(ee[xt],ee[Ht],ee[gt],ee[Gt]),E=xt,T=Ht,N=gt,D=Gt),(se.equals(I)===!1||we!==z)&&(s.blendColor(se.r,se.g,se.b,we),I.copy(se),z=we),S=V,C=!1}function Ct(V,wt){V.side===ts?Vt(s.CULL_FACE):Nt(s.CULL_FACE);let xt=V.side===ni;wt&&(xt=!xt),Mt(xt),V.blending===Ta&&V.transparent===!1?O(qs):O(V.blending,V.blendEquation,V.blendSrc,V.blendDst,V.blendEquationAlpha,V.blendSrcAlpha,V.blendDstAlpha,V.blendColor,V.blendAlpha,V.premultipliedAlpha),l.setFunc(V.depthFunc),l.setTest(V.depthTest),l.setMask(V.depthWrite),r.setMask(V.colorWrite);const Ht=V.stencilWrite;c.setTest(Ht),Ht&&(c.setMask(V.stencilWriteMask),c.setFunc(V.stencilFunc,V.stencilRef,V.stencilFuncMask),c.setOp(V.stencilFail,V.stencilZFail,V.stencilZPass)),Ot(V.polygonOffset,V.polygonOffsetFactor,V.polygonOffsetUnits),V.alphaToCoverage===!0?Nt(s.SAMPLE_ALPHA_TO_COVERAGE):Vt(s.SAMPLE_ALPHA_TO_COVERAGE)}function Mt(V){w!==V&&(V?s.frontFace(s.CW):s.frontFace(s.CCW),w=V)}function bt(V){V!==px?(Nt(s.CULL_FACE),V!==B&&(V===wm?s.cullFace(s.BACK):V===mx?s.cullFace(s.FRONT):s.cullFace(s.FRONT_AND_BACK))):Vt(s.CULL_FACE),B=V}function ht(V){V!==$&&(F&&s.lineWidth(V),$=V)}function Ot(V,wt,xt){V?(Nt(s.POLYGON_OFFSET_FILL),(q!==wt||J!==xt)&&(s.polygonOffset(wt,xt),q=wt,J=xt)):Vt(s.POLYGON_OFFSET_FILL)}function St(V){V?Nt(s.SCISSOR_TEST):Vt(s.SCISSOR_TEST)}function Ft(V){V===void 0&&(V=s.TEXTURE0+nt-1),st!==V&&(s.activeTexture(V),st=V)}function ue(V,wt,xt){xt===void 0&&(st===null?xt=s.TEXTURE0+nt-1:xt=st);let Ht=ct[xt];Ht===void 0&&(Ht={type:void 0,texture:void 0},ct[xt]=Ht),(Ht.type!==V||Ht.texture!==wt)&&(st!==xt&&(s.activeTexture(xt),st=xt),s.bindTexture(V,wt||Yt[V]),Ht.type=V,Ht.texture=wt)}function H(){const V=ct[st];V!==void 0&&V.type!==void 0&&(s.bindTexture(V.type,null),V.type=void 0,V.texture=void 0)}function R(){try{s.compressedTexImage2D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Q(){try{s.compressedTexImage3D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function lt(){try{s.texSubImage2D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function pt(){try{s.texSubImage3D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function ut(){try{s.compressedTexSubImage2D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function te(){try{s.compressedTexSubImage3D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Lt(){try{s.texStorage2D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Kt(){try{s.texStorage3D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function Qt(){try{s.texImage2D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function vt(){try{s.texImage3D(...arguments)}catch(V){console.error("THREE.WebGLState:",V)}}function zt(V){Xt.equals(V)===!1&&(s.scissor(V.x,V.y,V.z,V.w),Xt.copy(V))}function ie(V){tt.equals(V)===!1&&(s.viewport(V.x,V.y,V.z,V.w),tt.copy(V))}function k(V,wt){let xt=f.get(wt);xt===void 0&&(xt=new WeakMap,f.set(wt,xt));let Ht=xt.get(V);Ht===void 0&&(Ht=s.getUniformBlockIndex(wt,V.name),xt.set(V,Ht))}function et(V,wt){const Ht=f.get(wt).get(V);h.get(wt)!==Ht&&(s.uniformBlockBinding(wt,Ht,V.__bindingPointIndex),h.set(wt,Ht))}function Tt(){s.disable(s.BLEND),s.disable(s.CULL_FACE),s.disable(s.DEPTH_TEST),s.disable(s.POLYGON_OFFSET_FILL),s.disable(s.SCISSOR_TEST),s.disable(s.STENCIL_TEST),s.disable(s.SAMPLE_ALPHA_TO_COVERAGE),s.blendEquation(s.FUNC_ADD),s.blendFunc(s.ONE,s.ZERO),s.blendFuncSeparate(s.ONE,s.ZERO,s.ONE,s.ZERO),s.blendColor(0,0,0,0),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(s.LESS),l.setReversed(!1),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(s.ALWAYS,0,4294967295),s.stencilOp(s.KEEP,s.KEEP,s.KEEP),s.clearStencil(0),s.cullFace(s.BACK),s.frontFace(s.CCW),s.polygonOffset(0,0),s.activeTexture(s.TEXTURE0),s.bindFramebuffer(s.FRAMEBUFFER,null),s.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),s.bindFramebuffer(s.READ_FRAMEBUFFER,null),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),p={},st=null,ct={},m={},g=new WeakMap,v=[],x=null,M=!1,S=null,_=null,E=null,T=null,A=null,N=null,D=null,I=new kt(0,0,0),z=0,C=!1,w=null,B=null,$=null,q=null,J=null,Xt.set(0,0,s.canvas.width,s.canvas.height),tt.set(0,0,s.canvas.width,s.canvas.height),r.reset(),l.reset(),c.reset()}return{buffers:{color:r,depth:l,stencil:c},enable:Nt,disable:Vt,bindFramebuffer:fe,drawBuffers:qt,useProgram:ne,setBlending:O,setMaterial:Ct,setFlipSided:Mt,setCullFace:bt,setLineWidth:ht,setPolygonOffset:Ot,setScissorTest:St,activeTexture:Ft,bindTexture:ue,unbindTexture:H,compressedTexImage2D:R,compressedTexImage3D:Q,texImage2D:Qt,texImage3D:vt,updateUBOMapping:k,uniformBlockBinding:et,texStorage2D:Lt,texStorage3D:Kt,texSubImage2D:lt,texSubImage3D:pt,compressedTexSubImage2D:ut,compressedTexSubImage3D:te,scissor:zt,viewport:ie,reset:Tt}}function $3(s,t,e,n,i,r,l){const c=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,h=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),f=new ft,p=new WeakMap;let m;const g=new WeakMap;let v=!1;try{v=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function x(H,R){return v?new OffscreenCanvas(H,R):oc("canvas")}function M(H,R,Q){let lt=1;const pt=ue(H);if((pt.width>Q||pt.height>Q)&&(lt=Q/Math.max(pt.width,pt.height)),lt<1)if(typeof HTMLImageElement<"u"&&H instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&H instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&H instanceof ImageBitmap||typeof VideoFrame<"u"&&H instanceof VideoFrame){const ut=Math.floor(lt*pt.width),te=Math.floor(lt*pt.height);m===void 0&&(m=x(ut,te));const Lt=R?x(ut,te):m;return Lt.width=ut,Lt.height=te,Lt.getContext("2d").drawImage(H,0,0,ut,te),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+pt.width+"x"+pt.height+") to ("+ut+"x"+te+")."),Lt}else return"data"in H&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+pt.width+"x"+pt.height+")."),H;return H}function S(H){return H.generateMipmaps}function _(H){s.generateMipmap(H)}function E(H){return H.isWebGLCubeRenderTarget?s.TEXTURE_CUBE_MAP:H.isWebGL3DRenderTarget?s.TEXTURE_3D:H.isWebGLArrayRenderTarget||H.isCompressedArrayTexture?s.TEXTURE_2D_ARRAY:s.TEXTURE_2D}function T(H,R,Q,lt,pt=!1){if(H!==null){if(s[H]!==void 0)return s[H];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+H+"'")}let ut=R;if(R===s.RED&&(Q===s.FLOAT&&(ut=s.R32F),Q===s.HALF_FLOAT&&(ut=s.R16F),Q===s.UNSIGNED_BYTE&&(ut=s.R8)),R===s.RED_INTEGER&&(Q===s.UNSIGNED_BYTE&&(ut=s.R8UI),Q===s.UNSIGNED_SHORT&&(ut=s.R16UI),Q===s.UNSIGNED_INT&&(ut=s.R32UI),Q===s.BYTE&&(ut=s.R8I),Q===s.SHORT&&(ut=s.R16I),Q===s.INT&&(ut=s.R32I)),R===s.RG&&(Q===s.FLOAT&&(ut=s.RG32F),Q===s.HALF_FLOAT&&(ut=s.RG16F),Q===s.UNSIGNED_BYTE&&(ut=s.RG8)),R===s.RG_INTEGER&&(Q===s.UNSIGNED_BYTE&&(ut=s.RG8UI),Q===s.UNSIGNED_SHORT&&(ut=s.RG16UI),Q===s.UNSIGNED_INT&&(ut=s.RG32UI),Q===s.BYTE&&(ut=s.RG8I),Q===s.SHORT&&(ut=s.RG16I),Q===s.INT&&(ut=s.RG32I)),R===s.RGB_INTEGER&&(Q===s.UNSIGNED_BYTE&&(ut=s.RGB8UI),Q===s.UNSIGNED_SHORT&&(ut=s.RGB16UI),Q===s.UNSIGNED_INT&&(ut=s.RGB32UI),Q===s.BYTE&&(ut=s.RGB8I),Q===s.SHORT&&(ut=s.RGB16I),Q===s.INT&&(ut=s.RGB32I)),R===s.RGBA_INTEGER&&(Q===s.UNSIGNED_BYTE&&(ut=s.RGBA8UI),Q===s.UNSIGNED_SHORT&&(ut=s.RGBA16UI),Q===s.UNSIGNED_INT&&(ut=s.RGBA32UI),Q===s.BYTE&&(ut=s.RGBA8I),Q===s.SHORT&&(ut=s.RGBA16I),Q===s.INT&&(ut=s.RGBA32I)),R===s.RGB&&Q===s.UNSIGNED_INT_5_9_9_9_REV&&(ut=s.RGB9_E5),R===s.RGBA){const te=pt?sc:Ue.getTransfer(lt);Q===s.FLOAT&&(ut=s.RGBA32F),Q===s.HALF_FLOAT&&(ut=s.RGBA16F),Q===s.UNSIGNED_BYTE&&(ut=te===ke?s.SRGB8_ALPHA8:s.RGBA8),Q===s.UNSIGNED_SHORT_4_4_4_4&&(ut=s.RGBA4),Q===s.UNSIGNED_SHORT_5_5_5_1&&(ut=s.RGB5_A1)}return(ut===s.R16F||ut===s.R32F||ut===s.RG16F||ut===s.RG32F||ut===s.RGBA16F||ut===s.RGBA32F)&&t.get("EXT_color_buffer_float"),ut}function A(H,R){let Q;return H?R===null||R===Ks||R===Io?Q=s.DEPTH24_STENCIL8:R===ui?Q=s.DEPTH32F_STENCIL8:R===Lo&&(Q=s.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):R===null||R===Ks||R===Io?Q=s.DEPTH_COMPONENT24:R===ui?Q=s.DEPTH_COMPONENT32F:R===Lo&&(Q=s.DEPTH_COMPONENT16),Q}function N(H,R){return S(H)===!0||H.isFramebufferTexture&&H.minFilter!==Ln&&H.minFilter!==vn?Math.log2(Math.max(R.width,R.height))+1:H.mipmaps!==void 0&&H.mipmaps.length>0?H.mipmaps.length:H.isCompressedTexture&&Array.isArray(H.image)?R.mipmaps.length:1}function D(H){const R=H.target;R.removeEventListener("dispose",D),z(R),R.isVideoTexture&&p.delete(R)}function I(H){const R=H.target;R.removeEventListener("dispose",I),w(R)}function z(H){const R=n.get(H);if(R.__webglInit===void 0)return;const Q=H.source,lt=g.get(Q);if(lt){const pt=lt[R.__cacheKey];pt.usedTimes--,pt.usedTimes===0&&C(H),Object.keys(lt).length===0&&g.delete(Q)}n.remove(H)}function C(H){const R=n.get(H);s.deleteTexture(R.__webglTexture);const Q=H.source,lt=g.get(Q);delete lt[R.__cacheKey],l.memory.textures--}function w(H){const R=n.get(H);if(H.depthTexture&&(H.depthTexture.dispose(),n.remove(H.depthTexture)),H.isWebGLCubeRenderTarget)for(let lt=0;lt<6;lt++){if(Array.isArray(R.__webglFramebuffer[lt]))for(let pt=0;pt<R.__webglFramebuffer[lt].length;pt++)s.deleteFramebuffer(R.__webglFramebuffer[lt][pt]);else s.deleteFramebuffer(R.__webglFramebuffer[lt]);R.__webglDepthbuffer&&s.deleteRenderbuffer(R.__webglDepthbuffer[lt])}else{if(Array.isArray(R.__webglFramebuffer))for(let lt=0;lt<R.__webglFramebuffer.length;lt++)s.deleteFramebuffer(R.__webglFramebuffer[lt]);else s.deleteFramebuffer(R.__webglFramebuffer);if(R.__webglDepthbuffer&&s.deleteRenderbuffer(R.__webglDepthbuffer),R.__webglMultisampledFramebuffer&&s.deleteFramebuffer(R.__webglMultisampledFramebuffer),R.__webglColorRenderbuffer)for(let lt=0;lt<R.__webglColorRenderbuffer.length;lt++)R.__webglColorRenderbuffer[lt]&&s.deleteRenderbuffer(R.__webglColorRenderbuffer[lt]);R.__webglDepthRenderbuffer&&s.deleteRenderbuffer(R.__webglDepthRenderbuffer)}const Q=H.textures;for(let lt=0,pt=Q.length;lt<pt;lt++){const ut=n.get(Q[lt]);ut.__webglTexture&&(s.deleteTexture(ut.__webglTexture),l.memory.textures--),n.remove(Q[lt])}n.remove(H)}let B=0;function $(){B=0}function q(){const H=B;return H>=i.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+H+" texture units while this GPU supports only "+i.maxTextures),B+=1,H}function J(H){const R=[];return R.push(H.wrapS),R.push(H.wrapT),R.push(H.wrapR||0),R.push(H.magFilter),R.push(H.minFilter),R.push(H.anisotropy),R.push(H.internalFormat),R.push(H.format),R.push(H.type),R.push(H.generateMipmaps),R.push(H.premultiplyAlpha),R.push(H.flipY),R.push(H.unpackAlignment),R.push(H.colorSpace),R.join()}function nt(H,R){const Q=n.get(H);if(H.isVideoTexture&&St(H),H.isRenderTargetTexture===!1&&H.version>0&&Q.__version!==H.version){const lt=H.image;if(lt===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(lt.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Yt(Q,H,R);return}}e.bindTexture(s.TEXTURE_2D,Q.__webglTexture,s.TEXTURE0+R)}function F(H,R){const Q=n.get(H);if(H.version>0&&Q.__version!==H.version){Yt(Q,H,R);return}e.bindTexture(s.TEXTURE_2D_ARRAY,Q.__webglTexture,s.TEXTURE0+R)}function X(H,R){const Q=n.get(H);if(H.version>0&&Q.__version!==H.version){Yt(Q,H,R);return}e.bindTexture(s.TEXTURE_3D,Q.__webglTexture,s.TEXTURE0+R)}function G(H,R){const Q=n.get(H);if(H.version>0&&Q.__version!==H.version){Nt(Q,H,R);return}e.bindTexture(s.TEXTURE_CUBE_MAP,Q.__webglTexture,s.TEXTURE0+R)}const st={[tc]:s.REPEAT,[Fi]:s.CLAMP_TO_EDGE,[ec]:s.MIRRORED_REPEAT},ct={[Ln]:s.NEAREST,[Qm]:s.NEAREST_MIPMAP_NEAREST,[Ao]:s.NEAREST_MIPMAP_LINEAR,[vn]:s.LINEAR,[Gl]:s.LINEAR_MIPMAP_NEAREST,[ms]:s.LINEAR_MIPMAP_LINEAR},_t={[Kx]:s.NEVER,[nS]:s.ALWAYS,[Jx]:s.LESS,[og]:s.LEQUAL,[Qx]:s.EQUAL,[eS]:s.GEQUAL,[$x]:s.GREATER,[tS]:s.NOTEQUAL};function Dt(H,R){if(R.type===ui&&t.has("OES_texture_float_linear")===!1&&(R.magFilter===vn||R.magFilter===Gl||R.magFilter===Ao||R.magFilter===ms||R.minFilter===vn||R.minFilter===Gl||R.minFilter===Ao||R.minFilter===ms)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),s.texParameteri(H,s.TEXTURE_WRAP_S,st[R.wrapS]),s.texParameteri(H,s.TEXTURE_WRAP_T,st[R.wrapT]),(H===s.TEXTURE_3D||H===s.TEXTURE_2D_ARRAY)&&s.texParameteri(H,s.TEXTURE_WRAP_R,st[R.wrapR]),s.texParameteri(H,s.TEXTURE_MAG_FILTER,ct[R.magFilter]),s.texParameteri(H,s.TEXTURE_MIN_FILTER,ct[R.minFilter]),R.compareFunction&&(s.texParameteri(H,s.TEXTURE_COMPARE_MODE,s.COMPARE_REF_TO_TEXTURE),s.texParameteri(H,s.TEXTURE_COMPARE_FUNC,_t[R.compareFunction])),t.has("EXT_texture_filter_anisotropic")===!0){if(R.magFilter===Ln||R.minFilter!==Ao&&R.minFilter!==ms||R.type===ui&&t.has("OES_texture_float_linear")===!1)return;if(R.anisotropy>1||n.get(R).__currentAnisotropy){const Q=t.get("EXT_texture_filter_anisotropic");s.texParameterf(H,Q.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(R.anisotropy,i.getMaxAnisotropy())),n.get(R).__currentAnisotropy=R.anisotropy}}}function Xt(H,R){let Q=!1;H.__webglInit===void 0&&(H.__webglInit=!0,R.addEventListener("dispose",D));const lt=R.source;let pt=g.get(lt);pt===void 0&&(pt={},g.set(lt,pt));const ut=J(R);if(ut!==H.__cacheKey){pt[ut]===void 0&&(pt[ut]={texture:s.createTexture(),usedTimes:0},l.memory.textures++,Q=!0),pt[ut].usedTimes++;const te=pt[H.__cacheKey];te!==void 0&&(pt[H.__cacheKey].usedTimes--,te.usedTimes===0&&C(R)),H.__cacheKey=ut,H.__webglTexture=pt[ut].texture}return Q}function tt(H,R,Q){return Math.floor(Math.floor(H/Q)/R)}function yt(H,R,Q,lt){const ut=H.updateRanges;if(ut.length===0)e.texSubImage2D(s.TEXTURE_2D,0,0,0,R.width,R.height,Q,lt,R.data);else{ut.sort((vt,zt)=>vt.start-zt.start);let te=0;for(let vt=1;vt<ut.length;vt++){const zt=ut[te],ie=ut[vt],k=zt.start+zt.count,et=tt(ie.start,R.width,4),Tt=tt(zt.start,R.width,4);ie.start<=k+1&&et===Tt&&tt(ie.start+ie.count-1,R.width,4)===et?zt.count=Math.max(zt.count,ie.start+ie.count-zt.start):(++te,ut[te]=ie)}ut.length=te+1;const Lt=s.getParameter(s.UNPACK_ROW_LENGTH),Kt=s.getParameter(s.UNPACK_SKIP_PIXELS),Qt=s.getParameter(s.UNPACK_SKIP_ROWS);s.pixelStorei(s.UNPACK_ROW_LENGTH,R.width);for(let vt=0,zt=ut.length;vt<zt;vt++){const ie=ut[vt],k=Math.floor(ie.start/4),et=Math.ceil(ie.count/4),Tt=k%R.width,V=Math.floor(k/R.width),wt=et,xt=1;s.pixelStorei(s.UNPACK_SKIP_PIXELS,Tt),s.pixelStorei(s.UNPACK_SKIP_ROWS,V),e.texSubImage2D(s.TEXTURE_2D,0,Tt,V,wt,xt,Q,lt,R.data)}H.clearUpdateRanges(),s.pixelStorei(s.UNPACK_ROW_LENGTH,Lt),s.pixelStorei(s.UNPACK_SKIP_PIXELS,Kt),s.pixelStorei(s.UNPACK_SKIP_ROWS,Qt)}}function Yt(H,R,Q){let lt=s.TEXTURE_2D;(R.isDataArrayTexture||R.isCompressedArrayTexture)&&(lt=s.TEXTURE_2D_ARRAY),R.isData3DTexture&&(lt=s.TEXTURE_3D);const pt=Xt(H,R),ut=R.source;e.bindTexture(lt,H.__webglTexture,s.TEXTURE0+Q);const te=n.get(ut);if(ut.version!==te.__version||pt===!0){e.activeTexture(s.TEXTURE0+Q);const Lt=Ue.getPrimaries(Ue.workingColorSpace),Kt=R.colorSpace===Ws?null:Ue.getPrimaries(R.colorSpace),Qt=R.colorSpace===Ws||Lt===Kt?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,R.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,R.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,R.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,Qt);let vt=M(R.image,!1,i.maxTextureSize);vt=Ft(R,vt);const zt=r.convert(R.format,R.colorSpace),ie=r.convert(R.type);let k=T(R.internalFormat,zt,ie,R.colorSpace,R.isVideoTexture);Dt(lt,R);let et;const Tt=R.mipmaps,V=R.isVideoTexture!==!0,wt=te.__version===void 0||pt===!0,xt=ut.dataReady,Ht=N(R,vt);if(R.isDepthTexture)k=A(R.format===zo,R.type),wt&&(V?e.texStorage2D(s.TEXTURE_2D,1,k,vt.width,vt.height):e.texImage2D(s.TEXTURE_2D,0,k,vt.width,vt.height,0,zt,ie,null));else if(R.isDataTexture)if(Tt.length>0){V&&wt&&e.texStorage2D(s.TEXTURE_2D,Ht,k,Tt[0].width,Tt[0].height);for(let At=0,gt=Tt.length;At<gt;At++)et=Tt[At],V?xt&&e.texSubImage2D(s.TEXTURE_2D,At,0,0,et.width,et.height,zt,ie,et.data):e.texImage2D(s.TEXTURE_2D,At,k,et.width,et.height,0,zt,ie,et.data);R.generateMipmaps=!1}else V?(wt&&e.texStorage2D(s.TEXTURE_2D,Ht,k,vt.width,vt.height),xt&&yt(R,vt,zt,ie)):e.texImage2D(s.TEXTURE_2D,0,k,vt.width,vt.height,0,zt,ie,vt.data);else if(R.isCompressedTexture)if(R.isCompressedArrayTexture){V&&wt&&e.texStorage3D(s.TEXTURE_2D_ARRAY,Ht,k,Tt[0].width,Tt[0].height,vt.depth);for(let At=0,gt=Tt.length;At<gt;At++)if(et=Tt[At],R.format!==Xn)if(zt!==null)if(V){if(xt)if(R.layerUpdates.size>0){const Gt=Fm(et.width,et.height,R.format,R.type);for(const se of R.layerUpdates){const we=et.data.subarray(se*Gt/et.data.BYTES_PER_ELEMENT,(se+1)*Gt/et.data.BYTES_PER_ELEMENT);e.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,At,0,0,se,et.width,et.height,1,zt,we)}R.clearLayerUpdates()}else e.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,At,0,0,0,et.width,et.height,vt.depth,zt,et.data)}else e.compressedTexImage3D(s.TEXTURE_2D_ARRAY,At,k,et.width,et.height,vt.depth,0,et.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else V?xt&&e.texSubImage3D(s.TEXTURE_2D_ARRAY,At,0,0,0,et.width,et.height,vt.depth,zt,ie,et.data):e.texImage3D(s.TEXTURE_2D_ARRAY,At,k,et.width,et.height,vt.depth,0,zt,ie,et.data)}else{V&&wt&&e.texStorage2D(s.TEXTURE_2D,Ht,k,Tt[0].width,Tt[0].height);for(let At=0,gt=Tt.length;At<gt;At++)et=Tt[At],R.format!==Xn?zt!==null?V?xt&&e.compressedTexSubImage2D(s.TEXTURE_2D,At,0,0,et.width,et.height,zt,et.data):e.compressedTexImage2D(s.TEXTURE_2D,At,k,et.width,et.height,0,et.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):V?xt&&e.texSubImage2D(s.TEXTURE_2D,At,0,0,et.width,et.height,zt,ie,et.data):e.texImage2D(s.TEXTURE_2D,At,k,et.width,et.height,0,zt,ie,et.data)}else if(R.isDataArrayTexture)if(V){if(wt&&e.texStorage3D(s.TEXTURE_2D_ARRAY,Ht,k,vt.width,vt.height,vt.depth),xt)if(R.layerUpdates.size>0){const At=Fm(vt.width,vt.height,R.format,R.type);for(const gt of R.layerUpdates){const Gt=vt.data.subarray(gt*At/vt.data.BYTES_PER_ELEMENT,(gt+1)*At/vt.data.BYTES_PER_ELEMENT);e.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,gt,vt.width,vt.height,1,zt,ie,Gt)}R.clearLayerUpdates()}else e.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,0,vt.width,vt.height,vt.depth,zt,ie,vt.data)}else e.texImage3D(s.TEXTURE_2D_ARRAY,0,k,vt.width,vt.height,vt.depth,0,zt,ie,vt.data);else if(R.isData3DTexture)V?(wt&&e.texStorage3D(s.TEXTURE_3D,Ht,k,vt.width,vt.height,vt.depth),xt&&e.texSubImage3D(s.TEXTURE_3D,0,0,0,0,vt.width,vt.height,vt.depth,zt,ie,vt.data)):e.texImage3D(s.TEXTURE_3D,0,k,vt.width,vt.height,vt.depth,0,zt,ie,vt.data);else if(R.isFramebufferTexture){if(wt)if(V)e.texStorage2D(s.TEXTURE_2D,Ht,k,vt.width,vt.height);else{let At=vt.width,gt=vt.height;for(let Gt=0;Gt<Ht;Gt++)e.texImage2D(s.TEXTURE_2D,Gt,k,At,gt,0,zt,ie,null),At>>=1,gt>>=1}}else if(Tt.length>0){if(V&&wt){const At=ue(Tt[0]);e.texStorage2D(s.TEXTURE_2D,Ht,k,At.width,At.height)}for(let At=0,gt=Tt.length;At<gt;At++)et=Tt[At],V?xt&&e.texSubImage2D(s.TEXTURE_2D,At,0,0,zt,ie,et):e.texImage2D(s.TEXTURE_2D,At,k,zt,ie,et);R.generateMipmaps=!1}else if(V){if(wt){const At=ue(vt);e.texStorage2D(s.TEXTURE_2D,Ht,k,At.width,At.height)}xt&&e.texSubImage2D(s.TEXTURE_2D,0,0,0,zt,ie,vt)}else e.texImage2D(s.TEXTURE_2D,0,k,zt,ie,vt);S(R)&&_(lt),te.__version=ut.version,R.onUpdate&&R.onUpdate(R)}H.__version=R.version}function Nt(H,R,Q){if(R.image.length!==6)return;const lt=Xt(H,R),pt=R.source;e.bindTexture(s.TEXTURE_CUBE_MAP,H.__webglTexture,s.TEXTURE0+Q);const ut=n.get(pt);if(pt.version!==ut.__version||lt===!0){e.activeTexture(s.TEXTURE0+Q);const te=Ue.getPrimaries(Ue.workingColorSpace),Lt=R.colorSpace===Ws?null:Ue.getPrimaries(R.colorSpace),Kt=R.colorSpace===Ws||te===Lt?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,R.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,R.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,R.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,Kt);const Qt=R.isCompressedTexture||R.image[0].isCompressedTexture,vt=R.image[0]&&R.image[0].isDataTexture,zt=[];for(let gt=0;gt<6;gt++)!Qt&&!vt?zt[gt]=M(R.image[gt],!0,i.maxCubemapSize):zt[gt]=vt?R.image[gt].image:R.image[gt],zt[gt]=Ft(R,zt[gt]);const ie=zt[0],k=r.convert(R.format,R.colorSpace),et=r.convert(R.type),Tt=T(R.internalFormat,k,et,R.colorSpace),V=R.isVideoTexture!==!0,wt=ut.__version===void 0||lt===!0,xt=pt.dataReady;let Ht=N(R,ie);Dt(s.TEXTURE_CUBE_MAP,R);let At;if(Qt){V&&wt&&e.texStorage2D(s.TEXTURE_CUBE_MAP,Ht,Tt,ie.width,ie.height);for(let gt=0;gt<6;gt++){At=zt[gt].mipmaps;for(let Gt=0;Gt<At.length;Gt++){const se=At[Gt];R.format!==Xn?k!==null?V?xt&&e.compressedTexSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+gt,Gt,0,0,se.width,se.height,k,se.data):e.compressedTexImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+gt,Gt,Tt,se.width,se.height,0,se.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):V?xt&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+gt,Gt,0,0,se.width,se.height,k,et,se.data):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+gt,Gt,Tt,se.width,se.height,0,k,et,se.data)}}}else{if(At=R.mipmaps,V&&wt){At.length>0&&Ht++;const gt=ue(zt[0]);e.texStorage2D(s.TEXTURE_CUBE_MAP,Ht,Tt,gt.width,gt.height)}for(let gt=0;gt<6;gt++)if(vt){V?xt&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+gt,0,0,0,zt[gt].width,zt[gt].height,k,et,zt[gt].data):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+gt,0,Tt,zt[gt].width,zt[gt].height,0,k,et,zt[gt].data);for(let Gt=0;Gt<At.length;Gt++){const we=At[Gt].image[gt].image;V?xt&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+gt,Gt+1,0,0,we.width,we.height,k,et,we.data):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+gt,Gt+1,Tt,we.width,we.height,0,k,et,we.data)}}else{V?xt&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+gt,0,0,0,k,et,zt[gt]):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+gt,0,Tt,k,et,zt[gt]);for(let Gt=0;Gt<At.length;Gt++){const se=At[Gt];V?xt&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+gt,Gt+1,0,0,k,et,se.image[gt]):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+gt,Gt+1,Tt,k,et,se.image[gt])}}}S(R)&&_(s.TEXTURE_CUBE_MAP),ut.__version=pt.version,R.onUpdate&&R.onUpdate(R)}H.__version=R.version}function Vt(H,R,Q,lt,pt,ut){const te=r.convert(Q.format,Q.colorSpace),Lt=r.convert(Q.type),Kt=T(Q.internalFormat,te,Lt,Q.colorSpace),Qt=n.get(R),vt=n.get(Q);if(vt.__renderTarget=R,!Qt.__hasExternalTextures){const zt=Math.max(1,R.width>>ut),ie=Math.max(1,R.height>>ut);pt===s.TEXTURE_3D||pt===s.TEXTURE_2D_ARRAY?e.texImage3D(pt,ut,Kt,zt,ie,R.depth,0,te,Lt,null):e.texImage2D(pt,ut,Kt,zt,ie,0,te,Lt,null)}e.bindFramebuffer(s.FRAMEBUFFER,H),Ot(R)?c.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,lt,pt,vt.__webglTexture,0,ht(R)):(pt===s.TEXTURE_2D||pt>=s.TEXTURE_CUBE_MAP_POSITIVE_X&&pt<=s.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&s.framebufferTexture2D(s.FRAMEBUFFER,lt,pt,vt.__webglTexture,ut),e.bindFramebuffer(s.FRAMEBUFFER,null)}function fe(H,R,Q){if(s.bindRenderbuffer(s.RENDERBUFFER,H),R.depthBuffer){const lt=R.depthTexture,pt=lt&&lt.isDepthTexture?lt.type:null,ut=A(R.stencilBuffer,pt),te=R.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,Lt=ht(R);Ot(R)?c.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,Lt,ut,R.width,R.height):Q?s.renderbufferStorageMultisample(s.RENDERBUFFER,Lt,ut,R.width,R.height):s.renderbufferStorage(s.RENDERBUFFER,ut,R.width,R.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,te,s.RENDERBUFFER,H)}else{const lt=R.textures;for(let pt=0;pt<lt.length;pt++){const ut=lt[pt],te=r.convert(ut.format,ut.colorSpace),Lt=r.convert(ut.type),Kt=T(ut.internalFormat,te,Lt,ut.colorSpace),Qt=ht(R);Q&&Ot(R)===!1?s.renderbufferStorageMultisample(s.RENDERBUFFER,Qt,Kt,R.width,R.height):Ot(R)?c.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,Qt,Kt,R.width,R.height):s.renderbufferStorage(s.RENDERBUFFER,Kt,R.width,R.height)}}s.bindRenderbuffer(s.RENDERBUFFER,null)}function qt(H,R){if(R&&R.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(s.FRAMEBUFFER,H),!(R.depthTexture&&R.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const lt=n.get(R.depthTexture);lt.__renderTarget=R,(!lt.__webglTexture||R.depthTexture.image.width!==R.width||R.depthTexture.image.height!==R.height)&&(R.depthTexture.image.width=R.width,R.depthTexture.image.height=R.height,R.depthTexture.needsUpdate=!0),nt(R.depthTexture,0);const pt=lt.__webglTexture,ut=ht(R);if(R.depthTexture.format===Oo)Ot(R)?c.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,pt,0,ut):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,pt,0);else if(R.depthTexture.format===zo)Ot(R)?c.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,pt,0,ut):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,pt,0);else throw new Error("Unknown depthTexture format")}function ne(H){const R=n.get(H),Q=H.isWebGLCubeRenderTarget===!0;if(R.__boundDepthTexture!==H.depthTexture){const lt=H.depthTexture;if(R.__depthDisposeCallback&&R.__depthDisposeCallback(),lt){const pt=()=>{delete R.__boundDepthTexture,delete R.__depthDisposeCallback,lt.removeEventListener("dispose",pt)};lt.addEventListener("dispose",pt),R.__depthDisposeCallback=pt}R.__boundDepthTexture=lt}if(H.depthTexture&&!R.__autoAllocateDepthBuffer){if(Q)throw new Error("target.depthTexture not supported in Cube render targets");const lt=H.texture.mipmaps;lt&&lt.length>0?qt(R.__webglFramebuffer[0],H):qt(R.__webglFramebuffer,H)}else if(Q){R.__webglDepthbuffer=[];for(let lt=0;lt<6;lt++)if(e.bindFramebuffer(s.FRAMEBUFFER,R.__webglFramebuffer[lt]),R.__webglDepthbuffer[lt]===void 0)R.__webglDepthbuffer[lt]=s.createRenderbuffer(),fe(R.__webglDepthbuffer[lt],H,!1);else{const pt=H.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,ut=R.__webglDepthbuffer[lt];s.bindRenderbuffer(s.RENDERBUFFER,ut),s.framebufferRenderbuffer(s.FRAMEBUFFER,pt,s.RENDERBUFFER,ut)}}else{const lt=H.texture.mipmaps;if(lt&&lt.length>0?e.bindFramebuffer(s.FRAMEBUFFER,R.__webglFramebuffer[0]):e.bindFramebuffer(s.FRAMEBUFFER,R.__webglFramebuffer),R.__webglDepthbuffer===void 0)R.__webglDepthbuffer=s.createRenderbuffer(),fe(R.__webglDepthbuffer,H,!1);else{const pt=H.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,ut=R.__webglDepthbuffer;s.bindRenderbuffer(s.RENDERBUFFER,ut),s.framebufferRenderbuffer(s.FRAMEBUFFER,pt,s.RENDERBUFFER,ut)}}e.bindFramebuffer(s.FRAMEBUFFER,null)}function ce(H,R,Q){const lt=n.get(H);R!==void 0&&Vt(lt.__webglFramebuffer,H,H.texture,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,0),Q!==void 0&&ne(H)}function ee(H){const R=H.texture,Q=n.get(H),lt=n.get(R);H.addEventListener("dispose",I);const pt=H.textures,ut=H.isWebGLCubeRenderTarget===!0,te=pt.length>1;if(te||(lt.__webglTexture===void 0&&(lt.__webglTexture=s.createTexture()),lt.__version=R.version,l.memory.textures++),ut){Q.__webglFramebuffer=[];for(let Lt=0;Lt<6;Lt++)if(R.mipmaps&&R.mipmaps.length>0){Q.__webglFramebuffer[Lt]=[];for(let Kt=0;Kt<R.mipmaps.length;Kt++)Q.__webglFramebuffer[Lt][Kt]=s.createFramebuffer()}else Q.__webglFramebuffer[Lt]=s.createFramebuffer()}else{if(R.mipmaps&&R.mipmaps.length>0){Q.__webglFramebuffer=[];for(let Lt=0;Lt<R.mipmaps.length;Lt++)Q.__webglFramebuffer[Lt]=s.createFramebuffer()}else Q.__webglFramebuffer=s.createFramebuffer();if(te)for(let Lt=0,Kt=pt.length;Lt<Kt;Lt++){const Qt=n.get(pt[Lt]);Qt.__webglTexture===void 0&&(Qt.__webglTexture=s.createTexture(),l.memory.textures++)}if(H.samples>0&&Ot(H)===!1){Q.__webglMultisampledFramebuffer=s.createFramebuffer(),Q.__webglColorRenderbuffer=[],e.bindFramebuffer(s.FRAMEBUFFER,Q.__webglMultisampledFramebuffer);for(let Lt=0;Lt<pt.length;Lt++){const Kt=pt[Lt];Q.__webglColorRenderbuffer[Lt]=s.createRenderbuffer(),s.bindRenderbuffer(s.RENDERBUFFER,Q.__webglColorRenderbuffer[Lt]);const Qt=r.convert(Kt.format,Kt.colorSpace),vt=r.convert(Kt.type),zt=T(Kt.internalFormat,Qt,vt,Kt.colorSpace,H.isXRRenderTarget===!0),ie=ht(H);s.renderbufferStorageMultisample(s.RENDERBUFFER,ie,zt,H.width,H.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Lt,s.RENDERBUFFER,Q.__webglColorRenderbuffer[Lt])}s.bindRenderbuffer(s.RENDERBUFFER,null),H.depthBuffer&&(Q.__webglDepthRenderbuffer=s.createRenderbuffer(),fe(Q.__webglDepthRenderbuffer,H,!0)),e.bindFramebuffer(s.FRAMEBUFFER,null)}}if(ut){e.bindTexture(s.TEXTURE_CUBE_MAP,lt.__webglTexture),Dt(s.TEXTURE_CUBE_MAP,R);for(let Lt=0;Lt<6;Lt++)if(R.mipmaps&&R.mipmaps.length>0)for(let Kt=0;Kt<R.mipmaps.length;Kt++)Vt(Q.__webglFramebuffer[Lt][Kt],H,R,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+Lt,Kt);else Vt(Q.__webglFramebuffer[Lt],H,R,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+Lt,0);S(R)&&_(s.TEXTURE_CUBE_MAP),e.unbindTexture()}else if(te){for(let Lt=0,Kt=pt.length;Lt<Kt;Lt++){const Qt=pt[Lt],vt=n.get(Qt);e.bindTexture(s.TEXTURE_2D,vt.__webglTexture),Dt(s.TEXTURE_2D,Qt),Vt(Q.__webglFramebuffer,H,Qt,s.COLOR_ATTACHMENT0+Lt,s.TEXTURE_2D,0),S(Qt)&&_(s.TEXTURE_2D)}e.unbindTexture()}else{let Lt=s.TEXTURE_2D;if((H.isWebGL3DRenderTarget||H.isWebGLArrayRenderTarget)&&(Lt=H.isWebGL3DRenderTarget?s.TEXTURE_3D:s.TEXTURE_2D_ARRAY),e.bindTexture(Lt,lt.__webglTexture),Dt(Lt,R),R.mipmaps&&R.mipmaps.length>0)for(let Kt=0;Kt<R.mipmaps.length;Kt++)Vt(Q.__webglFramebuffer[Kt],H,R,s.COLOR_ATTACHMENT0,Lt,Kt);else Vt(Q.__webglFramebuffer,H,R,s.COLOR_ATTACHMENT0,Lt,0);S(R)&&_(Lt),e.unbindTexture()}H.depthBuffer&&ne(H)}function O(H){const R=H.textures;for(let Q=0,lt=R.length;Q<lt;Q++){const pt=R[Q];if(S(pt)){const ut=E(H),te=n.get(pt).__webglTexture;e.bindTexture(ut,te),_(ut),e.unbindTexture()}}}const Ct=[],Mt=[];function bt(H){if(H.samples>0){if(Ot(H)===!1){const R=H.textures,Q=H.width,lt=H.height;let pt=s.COLOR_BUFFER_BIT;const ut=H.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,te=n.get(H),Lt=R.length>1;if(Lt)for(let Qt=0;Qt<R.length;Qt++)e.bindFramebuffer(s.FRAMEBUFFER,te.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Qt,s.RENDERBUFFER,null),e.bindFramebuffer(s.FRAMEBUFFER,te.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+Qt,s.TEXTURE_2D,null,0);e.bindFramebuffer(s.READ_FRAMEBUFFER,te.__webglMultisampledFramebuffer);const Kt=H.texture.mipmaps;Kt&&Kt.length>0?e.bindFramebuffer(s.DRAW_FRAMEBUFFER,te.__webglFramebuffer[0]):e.bindFramebuffer(s.DRAW_FRAMEBUFFER,te.__webglFramebuffer);for(let Qt=0;Qt<R.length;Qt++){if(H.resolveDepthBuffer&&(H.depthBuffer&&(pt|=s.DEPTH_BUFFER_BIT),H.stencilBuffer&&H.resolveStencilBuffer&&(pt|=s.STENCIL_BUFFER_BIT)),Lt){s.framebufferRenderbuffer(s.READ_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.RENDERBUFFER,te.__webglColorRenderbuffer[Qt]);const vt=n.get(R[Qt]).__webglTexture;s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,vt,0)}s.blitFramebuffer(0,0,Q,lt,0,0,Q,lt,pt,s.NEAREST),h===!0&&(Ct.length=0,Mt.length=0,Ct.push(s.COLOR_ATTACHMENT0+Qt),H.depthBuffer&&H.resolveDepthBuffer===!1&&(Ct.push(ut),Mt.push(ut),s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,Mt)),s.invalidateFramebuffer(s.READ_FRAMEBUFFER,Ct))}if(e.bindFramebuffer(s.READ_FRAMEBUFFER,null),e.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),Lt)for(let Qt=0;Qt<R.length;Qt++){e.bindFramebuffer(s.FRAMEBUFFER,te.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Qt,s.RENDERBUFFER,te.__webglColorRenderbuffer[Qt]);const vt=n.get(R[Qt]).__webglTexture;e.bindFramebuffer(s.FRAMEBUFFER,te.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+Qt,s.TEXTURE_2D,vt,0)}e.bindFramebuffer(s.DRAW_FRAMEBUFFER,te.__webglMultisampledFramebuffer)}else if(H.depthBuffer&&H.resolveDepthBuffer===!1&&h){const R=H.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT;s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,[R])}}}function ht(H){return Math.min(i.maxSamples,H.samples)}function Ot(H){const R=n.get(H);return H.samples>0&&t.has("WEBGL_multisampled_render_to_texture")===!0&&R.__useRenderToTexture!==!1}function St(H){const R=l.render.frame;p.get(H)!==R&&(p.set(H,R),H.update())}function Ft(H,R){const Q=H.colorSpace,lt=H.format,pt=H.type;return H.isCompressedTexture===!0||H.isVideoTexture===!0||Q!==wa&&Q!==Ws&&(Ue.getTransfer(Q)===ke?(lt!==Xn||pt!==Vi)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",Q)),R}function ue(H){return typeof HTMLImageElement<"u"&&H instanceof HTMLImageElement?(f.width=H.naturalWidth||H.width,f.height=H.naturalHeight||H.height):typeof VideoFrame<"u"&&H instanceof VideoFrame?(f.width=H.displayWidth,f.height=H.displayHeight):(f.width=H.width,f.height=H.height),f}this.allocateTextureUnit=q,this.resetTextureUnits=$,this.setTexture2D=nt,this.setTexture2DArray=F,this.setTexture3D=X,this.setTextureCube=G,this.rebindTextures=ce,this.setupRenderTarget=ee,this.updateRenderTargetMipmap=O,this.updateMultisampleRenderTarget=bt,this.setupDepthRenderbuffer=ne,this.setupFrameBufferTexture=Vt,this.useMultisampledRTT=Ot}function uM(s,t){function e(n,i=Ws){let r;const l=Ue.getTransfer(i);if(n===Vi)return s.UNSIGNED_BYTE;if(n===ff)return s.UNSIGNED_SHORT_4_4_4_4;if(n===df)return s.UNSIGNED_SHORT_5_5_5_1;if(n===eg)return s.UNSIGNED_INT_5_9_9_9_REV;if(n===$m)return s.BYTE;if(n===tg)return s.SHORT;if(n===Lo)return s.UNSIGNED_SHORT;if(n===hf)return s.INT;if(n===Ks)return s.UNSIGNED_INT;if(n===ui)return s.FLOAT;if(n===qo)return s.HALF_FLOAT;if(n===ng)return s.ALPHA;if(n===ig)return s.RGB;if(n===Xn)return s.RGBA;if(n===Oo)return s.DEPTH_COMPONENT;if(n===zo)return s.DEPTH_STENCIL;if(n===pf)return s.RED;if(n===vc)return s.RED_INTEGER;if(n===sg)return s.RG;if(n===mf)return s.RG_INTEGER;if(n===gf)return s.RGBA_INTEGER;if(n===kl||n===Wl||n===Xl||n===ql)if(l===ke)if(r=t.get("WEBGL_compressed_texture_s3tc_srgb"),r!==null){if(n===kl)return r.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===Wl)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===Xl)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===ql)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(r=t.get("WEBGL_compressed_texture_s3tc"),r!==null){if(n===kl)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===Wl)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===Xl)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===ql)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===Eh||n===Th||n===Ah||n===wh)if(r=t.get("WEBGL_compressed_texture_pvrtc"),r!==null){if(n===Eh)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===Th)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===Ah)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===wh)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===Ch||n===Rh||n===Dh)if(r=t.get("WEBGL_compressed_texture_etc"),r!==null){if(n===Ch||n===Rh)return l===ke?r.COMPRESSED_SRGB8_ETC2:r.COMPRESSED_RGB8_ETC2;if(n===Dh)return l===ke?r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:r.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===Uh||n===Ph||n===Nh||n===Lh||n===Ih||n===Oh||n===zh||n===Bh||n===Fh||n===Hh||n===Vh||n===Gh||n===kh||n===Wh)if(r=t.get("WEBGL_compressed_texture_astc"),r!==null){if(n===Uh)return l===ke?r.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:r.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===Ph)return l===ke?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:r.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===Nh)return l===ke?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:r.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===Lh)return l===ke?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:r.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===Ih)return l===ke?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:r.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===Oh)return l===ke?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:r.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===zh)return l===ke?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:r.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===Bh)return l===ke?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:r.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===Fh)return l===ke?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:r.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===Hh)return l===ke?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:r.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===Vh)return l===ke?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:r.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===Gh)return l===ke?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:r.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===kh)return l===ke?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:r.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===Wh)return l===ke?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:r.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===Yl||n===Xh||n===qh)if(r=t.get("EXT_texture_compression_bptc"),r!==null){if(n===Yl)return l===ke?r.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:r.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===Xh)return r.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===qh)return r.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(n===ag||n===Yh||n===jh||n===Zh)if(r=t.get("EXT_texture_compression_rgtc"),r!==null){if(n===Yl)return r.COMPRESSED_RED_RGTC1_EXT;if(n===Yh)return r.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===jh)return r.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===Zh)return r.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===Io?s.UNSIGNED_INT_24_8:s[n]!==void 0?s[n]:null}return{convert:e}}const tD=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,eD=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class nD{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(t,e,n){if(this.texture===null){const i=new en,r=t.properties.get(i);r.__webglTexture=e.texture,(e.depthNear!==n.depthNear||e.depthFar!==n.depthFar)&&(this.depthNear=e.depthNear,this.depthFar=e.depthFar),this.texture=i}}getMesh(t){if(this.texture!==null&&this.mesh===null){const e=t.cameras[0].viewport,n=new wi({vertexShader:tD,fragmentShader:eD,uniforms:{depthColor:{value:this.texture},depthWidth:{value:e.z},depthHeight:{value:e.w}}});this.mesh=new hn(new jo(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class iD extends Ss{constructor(t,e){super();const n=this;let i=null,r=1,l=null,c="local-floor",h=1,f=null,p=null,m=null,g=null,v=null,x=null;const M=new nD,S=e.getContextAttributes();let _=null,E=null;const T=[],A=[],N=new ft;let D=null;const I=new sn;I.viewport=new Ae;const z=new sn;z.viewport=new Ae;const C=[I,z],w=new QS;let B=null,$=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(tt){let yt=T[tt];return yt===void 0&&(yt=new uh,T[tt]=yt),yt.getTargetRaySpace()},this.getControllerGrip=function(tt){let yt=T[tt];return yt===void 0&&(yt=new uh,T[tt]=yt),yt.getGripSpace()},this.getHand=function(tt){let yt=T[tt];return yt===void 0&&(yt=new uh,T[tt]=yt),yt.getHandSpace()};function q(tt){const yt=A.indexOf(tt.inputSource);if(yt===-1)return;const Yt=T[yt];Yt!==void 0&&(Yt.update(tt.inputSource,tt.frame,f||l),Yt.dispatchEvent({type:tt.type,data:tt.inputSource}))}function J(){i.removeEventListener("select",q),i.removeEventListener("selectstart",q),i.removeEventListener("selectend",q),i.removeEventListener("squeeze",q),i.removeEventListener("squeezestart",q),i.removeEventListener("squeezeend",q),i.removeEventListener("end",J),i.removeEventListener("inputsourceschange",nt);for(let tt=0;tt<T.length;tt++){const yt=A[tt];yt!==null&&(A[tt]=null,T[tt].disconnect(yt))}B=null,$=null,M.reset(),t.setRenderTarget(_),v=null,g=null,m=null,i=null,E=null,Xt.stop(),n.isPresenting=!1,t.setPixelRatio(D),t.setSize(N.width,N.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(tt){r=tt,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(tt){c=tt,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return f||l},this.setReferenceSpace=function(tt){f=tt},this.getBaseLayer=function(){return g!==null?g:v},this.getBinding=function(){return m},this.getFrame=function(){return x},this.getSession=function(){return i},this.setSession=async function(tt){if(i=tt,i!==null){if(_=t.getRenderTarget(),i.addEventListener("select",q),i.addEventListener("selectstart",q),i.addEventListener("selectend",q),i.addEventListener("squeeze",q),i.addEventListener("squeezestart",q),i.addEventListener("squeezeend",q),i.addEventListener("end",J),i.addEventListener("inputsourceschange",nt),S.xrCompatible!==!0&&await e.makeXRCompatible(),D=t.getPixelRatio(),t.getSize(N),typeof XRWebGLBinding<"u"&&"createProjectionLayer"in XRWebGLBinding.prototype){let Yt=null,Nt=null,Vt=null;S.depth&&(Vt=S.stencil?e.DEPTH24_STENCIL8:e.DEPTH_COMPONENT24,Yt=S.stencil?zo:Oo,Nt=S.stencil?Io:Ks);const fe={colorFormat:e.RGBA8,depthFormat:Vt,scaleFactor:r};m=new XRWebGLBinding(i,e),g=m.createProjectionLayer(fe),i.updateRenderState({layers:[g]}),t.setPixelRatio(1),t.setSize(g.textureWidth,g.textureHeight,!1),E=new xs(g.textureWidth,g.textureHeight,{format:Xn,type:Vi,depthTexture:new gg(g.textureWidth,g.textureHeight,Nt,void 0,void 0,void 0,void 0,void 0,void 0,Yt),stencilBuffer:S.stencil,colorSpace:t.outputColorSpace,samples:S.antialias?4:0,resolveDepthBuffer:g.ignoreDepthValues===!1,resolveStencilBuffer:g.ignoreDepthValues===!1})}else{const Yt={antialias:S.antialias,alpha:!0,depth:S.depth,stencil:S.stencil,framebufferScaleFactor:r};v=new XRWebGLLayer(i,e,Yt),i.updateRenderState({baseLayer:v}),t.setPixelRatio(1),t.setSize(v.framebufferWidth,v.framebufferHeight,!1),E=new xs(v.framebufferWidth,v.framebufferHeight,{format:Xn,type:Vi,colorSpace:t.outputColorSpace,stencilBuffer:S.stencil,resolveDepthBuffer:v.ignoreDepthValues===!1,resolveStencilBuffer:v.ignoreDepthValues===!1})}E.isXRRenderTarget=!0,this.setFoveation(h),f=null,l=await i.requestReferenceSpace(c),Xt.setContext(i),Xt.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode},this.getDepthTexture=function(){return M.getDepthTexture()};function nt(tt){for(let yt=0;yt<tt.removed.length;yt++){const Yt=tt.removed[yt],Nt=A.indexOf(Yt);Nt>=0&&(A[Nt]=null,T[Nt].disconnect(Yt))}for(let yt=0;yt<tt.added.length;yt++){const Yt=tt.added[yt];let Nt=A.indexOf(Yt);if(Nt===-1){for(let fe=0;fe<T.length;fe++)if(fe>=A.length){A.push(Yt),Nt=fe;break}else if(A[fe]===null){A[fe]=Yt,Nt=fe;break}if(Nt===-1)break}const Vt=T[Nt];Vt&&Vt.connect(Yt)}}const F=new L,X=new L;function G(tt,yt,Yt){F.setFromMatrixPosition(yt.matrixWorld),X.setFromMatrixPosition(Yt.matrixWorld);const Nt=F.distanceTo(X),Vt=yt.projectionMatrix.elements,fe=Yt.projectionMatrix.elements,qt=Vt[14]/(Vt[10]-1),ne=Vt[14]/(Vt[10]+1),ce=(Vt[9]+1)/Vt[5],ee=(Vt[9]-1)/Vt[5],O=(Vt[8]-1)/Vt[0],Ct=(fe[8]+1)/fe[0],Mt=qt*O,bt=qt*Ct,ht=Nt/(-O+Ct),Ot=ht*-O;if(yt.matrixWorld.decompose(tt.position,tt.quaternion,tt.scale),tt.translateX(Ot),tt.translateZ(ht),tt.matrixWorld.compose(tt.position,tt.quaternion,tt.scale),tt.matrixWorldInverse.copy(tt.matrixWorld).invert(),Vt[10]===-1)tt.projectionMatrix.copy(yt.projectionMatrix),tt.projectionMatrixInverse.copy(yt.projectionMatrixInverse);else{const St=qt+ht,Ft=ne+ht,ue=Mt-Ot,H=bt+(Nt-Ot),R=ce*ne/Ft*St,Q=ee*ne/Ft*St;tt.projectionMatrix.makePerspective(ue,H,R,Q,St,Ft),tt.projectionMatrixInverse.copy(tt.projectionMatrix).invert()}}function st(tt,yt){yt===null?tt.matrixWorld.copy(tt.matrix):tt.matrixWorld.multiplyMatrices(yt.matrixWorld,tt.matrix),tt.matrixWorldInverse.copy(tt.matrixWorld).invert()}this.updateCamera=function(tt){if(i===null)return;let yt=tt.near,Yt=tt.far;M.texture!==null&&(M.depthNear>0&&(yt=M.depthNear),M.depthFar>0&&(Yt=M.depthFar)),w.near=z.near=I.near=yt,w.far=z.far=I.far=Yt,(B!==w.near||$!==w.far)&&(i.updateRenderState({depthNear:w.near,depthFar:w.far}),B=w.near,$=w.far),I.layers.mask=tt.layers.mask|2,z.layers.mask=tt.layers.mask|4,w.layers.mask=I.layers.mask|z.layers.mask;const Nt=tt.parent,Vt=w.cameras;st(w,Nt);for(let fe=0;fe<Vt.length;fe++)st(Vt[fe],Nt);Vt.length===2?G(w,I,z):w.projectionMatrix.copy(I.projectionMatrix),ct(tt,w,Nt)};function ct(tt,yt,Yt){Yt===null?tt.matrix.copy(yt.matrixWorld):(tt.matrix.copy(Yt.matrixWorld),tt.matrix.invert(),tt.matrix.multiply(yt.matrixWorld)),tt.matrix.decompose(tt.position,tt.quaternion,tt.scale),tt.updateMatrixWorld(!0),tt.projectionMatrix.copy(yt.projectionMatrix),tt.projectionMatrixInverse.copy(yt.projectionMatrixInverse),tt.isPerspectiveCamera&&(tt.fov=Bo*2*Math.atan(1/tt.projectionMatrix.elements[5]),tt.zoom=1)}this.getCamera=function(){return w},this.getFoveation=function(){if(!(g===null&&v===null))return h},this.setFoveation=function(tt){h=tt,g!==null&&(g.fixedFoveation=tt),v!==null&&v.fixedFoveation!==void 0&&(v.fixedFoveation=tt)},this.hasDepthSensing=function(){return M.texture!==null},this.getDepthSensingMesh=function(){return M.getMesh(w)};let _t=null;function Dt(tt,yt){if(p=yt.getViewerPose(f||l),x=yt,p!==null){const Yt=p.views;v!==null&&(t.setRenderTargetFramebuffer(E,v.framebuffer),t.setRenderTarget(E));let Nt=!1;Yt.length!==w.cameras.length&&(w.cameras.length=0,Nt=!0);for(let qt=0;qt<Yt.length;qt++){const ne=Yt[qt];let ce=null;if(v!==null)ce=v.getViewport(ne);else{const O=m.getViewSubImage(g,ne);ce=O.viewport,qt===0&&(t.setRenderTargetTextures(E,O.colorTexture,O.depthStencilTexture),t.setRenderTarget(E))}let ee=C[qt];ee===void 0&&(ee=new sn,ee.layers.enable(qt),ee.viewport=new Ae,C[qt]=ee),ee.matrix.fromArray(ne.transform.matrix),ee.matrix.decompose(ee.position,ee.quaternion,ee.scale),ee.projectionMatrix.fromArray(ne.projectionMatrix),ee.projectionMatrixInverse.copy(ee.projectionMatrix).invert(),ee.viewport.set(ce.x,ce.y,ce.width,ce.height),qt===0&&(w.matrix.copy(ee.matrix),w.matrix.decompose(w.position,w.quaternion,w.scale)),Nt===!0&&w.cameras.push(ee)}const Vt=i.enabledFeatures;if(Vt&&Vt.includes("depth-sensing")&&i.depthUsage=="gpu-optimized"&&m){const qt=m.getDepthInformation(Yt[0]);qt&&qt.isValid&&qt.texture&&M.init(t,qt,i.renderState)}}for(let Yt=0;Yt<T.length;Yt++){const Nt=A[Yt],Vt=T[Yt];Nt!==null&&Vt!==void 0&&Vt.update(Nt,yt,f||l)}_t&&_t(tt,yt),yt.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:yt}),x=null}const Xt=new aM;Xt.setAnimationLoop(Dt),this.setAnimationLoop=function(tt){_t=tt},this.dispose=function(){}}}const fr=new Ai,sD=new he;function aD(s,t){function e(S,_){S.matrixAutoUpdate===!0&&S.updateMatrix(),_.value.copy(S.matrix)}function n(S,_){_.color.getRGB(S.fogColor.value,lS(s)),_.isFog?(S.fogNear.value=_.near,S.fogFar.value=_.far):_.isFogExp2&&(S.fogDensity.value=_.density)}function i(S,_,E,T,A){_.isMeshBasicMaterial||_.isMeshLambertMaterial?r(S,_):_.isMeshToonMaterial?(r(S,_),m(S,_)):_.isMeshPhongMaterial?(r(S,_),p(S,_)):_.isMeshStandardMaterial?(r(S,_),g(S,_),_.isMeshPhysicalMaterial&&v(S,_,A)):_.isMeshMatcapMaterial?(r(S,_),x(S,_)):_.isMeshDepthMaterial?r(S,_):_.isMeshDistanceMaterial?(r(S,_),M(S,_)):_.isMeshNormalMaterial?r(S,_):_.isLineBasicMaterial?(l(S,_),_.isLineDashedMaterial&&c(S,_)):_.isPointsMaterial?h(S,_,E,T):_.isSpriteMaterial?f(S,_):_.isShadowMaterial?(S.color.value.copy(_.color),S.opacity.value=_.opacity):_.isShaderMaterial&&(_.uniformsNeedUpdate=!1)}function r(S,_){S.opacity.value=_.opacity,_.color&&S.diffuse.value.copy(_.color),_.emissive&&S.emissive.value.copy(_.emissive).multiplyScalar(_.emissiveIntensity),_.map&&(S.map.value=_.map,e(_.map,S.mapTransform)),_.alphaMap&&(S.alphaMap.value=_.alphaMap,e(_.alphaMap,S.alphaMapTransform)),_.bumpMap&&(S.bumpMap.value=_.bumpMap,e(_.bumpMap,S.bumpMapTransform),S.bumpScale.value=_.bumpScale,_.side===ni&&(S.bumpScale.value*=-1)),_.normalMap&&(S.normalMap.value=_.normalMap,e(_.normalMap,S.normalMapTransform),S.normalScale.value.copy(_.normalScale),_.side===ni&&S.normalScale.value.negate()),_.displacementMap&&(S.displacementMap.value=_.displacementMap,e(_.displacementMap,S.displacementMapTransform),S.displacementScale.value=_.displacementScale,S.displacementBias.value=_.displacementBias),_.emissiveMap&&(S.emissiveMap.value=_.emissiveMap,e(_.emissiveMap,S.emissiveMapTransform)),_.specularMap&&(S.specularMap.value=_.specularMap,e(_.specularMap,S.specularMapTransform)),_.alphaTest>0&&(S.alphaTest.value=_.alphaTest);const E=t.get(_),T=E.envMap,A=E.envMapRotation;T&&(S.envMap.value=T,fr.copy(A),fr.x*=-1,fr.y*=-1,fr.z*=-1,T.isCubeTexture&&T.isRenderTargetTexture===!1&&(fr.y*=-1,fr.z*=-1),S.envMapRotation.value.setFromMatrix4(sD.makeRotationFromEuler(fr)),S.flipEnvMap.value=T.isCubeTexture&&T.isRenderTargetTexture===!1?-1:1,S.reflectivity.value=_.reflectivity,S.ior.value=_.ior,S.refractionRatio.value=_.refractionRatio),_.lightMap&&(S.lightMap.value=_.lightMap,S.lightMapIntensity.value=_.lightMapIntensity,e(_.lightMap,S.lightMapTransform)),_.aoMap&&(S.aoMap.value=_.aoMap,S.aoMapIntensity.value=_.aoMapIntensity,e(_.aoMap,S.aoMapTransform))}function l(S,_){S.diffuse.value.copy(_.color),S.opacity.value=_.opacity,_.map&&(S.map.value=_.map,e(_.map,S.mapTransform))}function c(S,_){S.dashSize.value=_.dashSize,S.totalSize.value=_.dashSize+_.gapSize,S.scale.value=_.scale}function h(S,_,E,T){S.diffuse.value.copy(_.color),S.opacity.value=_.opacity,S.size.value=_.size*E,S.scale.value=T*.5,_.map&&(S.map.value=_.map,e(_.map,S.uvTransform)),_.alphaMap&&(S.alphaMap.value=_.alphaMap,e(_.alphaMap,S.alphaMapTransform)),_.alphaTest>0&&(S.alphaTest.value=_.alphaTest)}function f(S,_){S.diffuse.value.copy(_.color),S.opacity.value=_.opacity,S.rotation.value=_.rotation,_.map&&(S.map.value=_.map,e(_.map,S.mapTransform)),_.alphaMap&&(S.alphaMap.value=_.alphaMap,e(_.alphaMap,S.alphaMapTransform)),_.alphaTest>0&&(S.alphaTest.value=_.alphaTest)}function p(S,_){S.specular.value.copy(_.specular),S.shininess.value=Math.max(_.shininess,1e-4)}function m(S,_){_.gradientMap&&(S.gradientMap.value=_.gradientMap)}function g(S,_){S.metalness.value=_.metalness,_.metalnessMap&&(S.metalnessMap.value=_.metalnessMap,e(_.metalnessMap,S.metalnessMapTransform)),S.roughness.value=_.roughness,_.roughnessMap&&(S.roughnessMap.value=_.roughnessMap,e(_.roughnessMap,S.roughnessMapTransform)),_.envMap&&(S.envMapIntensity.value=_.envMapIntensity)}function v(S,_,E){S.ior.value=_.ior,_.sheen>0&&(S.sheenColor.value.copy(_.sheenColor).multiplyScalar(_.sheen),S.sheenRoughness.value=_.sheenRoughness,_.sheenColorMap&&(S.sheenColorMap.value=_.sheenColorMap,e(_.sheenColorMap,S.sheenColorMapTransform)),_.sheenRoughnessMap&&(S.sheenRoughnessMap.value=_.sheenRoughnessMap,e(_.sheenRoughnessMap,S.sheenRoughnessMapTransform))),_.clearcoat>0&&(S.clearcoat.value=_.clearcoat,S.clearcoatRoughness.value=_.clearcoatRoughness,_.clearcoatMap&&(S.clearcoatMap.value=_.clearcoatMap,e(_.clearcoatMap,S.clearcoatMapTransform)),_.clearcoatRoughnessMap&&(S.clearcoatRoughnessMap.value=_.clearcoatRoughnessMap,e(_.clearcoatRoughnessMap,S.clearcoatRoughnessMapTransform)),_.clearcoatNormalMap&&(S.clearcoatNormalMap.value=_.clearcoatNormalMap,e(_.clearcoatNormalMap,S.clearcoatNormalMapTransform),S.clearcoatNormalScale.value.copy(_.clearcoatNormalScale),_.side===ni&&S.clearcoatNormalScale.value.negate())),_.dispersion>0&&(S.dispersion.value=_.dispersion),_.iridescence>0&&(S.iridescence.value=_.iridescence,S.iridescenceIOR.value=_.iridescenceIOR,S.iridescenceThicknessMinimum.value=_.iridescenceThicknessRange[0],S.iridescenceThicknessMaximum.value=_.iridescenceThicknessRange[1],_.iridescenceMap&&(S.iridescenceMap.value=_.iridescenceMap,e(_.iridescenceMap,S.iridescenceMapTransform)),_.iridescenceThicknessMap&&(S.iridescenceThicknessMap.value=_.iridescenceThicknessMap,e(_.iridescenceThicknessMap,S.iridescenceThicknessMapTransform))),_.transmission>0&&(S.transmission.value=_.transmission,S.transmissionSamplerMap.value=E.texture,S.transmissionSamplerSize.value.set(E.width,E.height),_.transmissionMap&&(S.transmissionMap.value=_.transmissionMap,e(_.transmissionMap,S.transmissionMapTransform)),S.thickness.value=_.thickness,_.thicknessMap&&(S.thicknessMap.value=_.thicknessMap,e(_.thicknessMap,S.thicknessMapTransform)),S.attenuationDistance.value=_.attenuationDistance,S.attenuationColor.value.copy(_.attenuationColor)),_.anisotropy>0&&(S.anisotropyVector.value.set(_.anisotropy*Math.cos(_.anisotropyRotation),_.anisotropy*Math.sin(_.anisotropyRotation)),_.anisotropyMap&&(S.anisotropyMap.value=_.anisotropyMap,e(_.anisotropyMap,S.anisotropyMapTransform))),S.specularIntensity.value=_.specularIntensity,S.specularColor.value.copy(_.specularColor),_.specularColorMap&&(S.specularColorMap.value=_.specularColorMap,e(_.specularColorMap,S.specularColorMapTransform)),_.specularIntensityMap&&(S.specularIntensityMap.value=_.specularIntensityMap,e(_.specularIntensityMap,S.specularIntensityMapTransform))}function x(S,_){_.matcap&&(S.matcap.value=_.matcap)}function M(S,_){const E=t.get(_).light;S.referencePosition.value.setFromMatrixPosition(E.matrixWorld),S.nearDistance.value=E.shadow.camera.near,S.farDistance.value=E.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function rD(s,t,e,n){let i={},r={},l=[];const c=s.getParameter(s.MAX_UNIFORM_BUFFER_BINDINGS);function h(E,T){const A=T.program;n.uniformBlockBinding(E,A)}function f(E,T){let A=i[E.id];A===void 0&&(x(E),A=p(E),i[E.id]=A,E.addEventListener("dispose",S));const N=T.program;n.updateUBOMapping(E,N);const D=t.render.frame;r[E.id]!==D&&(g(E),r[E.id]=D)}function p(E){const T=m();E.__bindingPointIndex=T;const A=s.createBuffer(),N=E.__size,D=E.usage;return s.bindBuffer(s.UNIFORM_BUFFER,A),s.bufferData(s.UNIFORM_BUFFER,N,D),s.bindBuffer(s.UNIFORM_BUFFER,null),s.bindBufferBase(s.UNIFORM_BUFFER,T,A),A}function m(){for(let E=0;E<c;E++)if(l.indexOf(E)===-1)return l.push(E),E;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function g(E){const T=i[E.id],A=E.uniforms,N=E.__cache;s.bindBuffer(s.UNIFORM_BUFFER,T);for(let D=0,I=A.length;D<I;D++){const z=Array.isArray(A[D])?A[D]:[A[D]];for(let C=0,w=z.length;C<w;C++){const B=z[C];if(v(B,D,C,N)===!0){const $=B.__offset,q=Array.isArray(B.value)?B.value:[B.value];let J=0;for(let nt=0;nt<q.length;nt++){const F=q[nt],X=M(F);typeof F=="number"||typeof F=="boolean"?(B.__data[0]=F,s.bufferSubData(s.UNIFORM_BUFFER,$+J,B.__data)):F.isMatrix3?(B.__data[0]=F.elements[0],B.__data[1]=F.elements[1],B.__data[2]=F.elements[2],B.__data[3]=0,B.__data[4]=F.elements[3],B.__data[5]=F.elements[4],B.__data[6]=F.elements[5],B.__data[7]=0,B.__data[8]=F.elements[6],B.__data[9]=F.elements[7],B.__data[10]=F.elements[8],B.__data[11]=0):(F.toArray(B.__data,J),J+=X.storage/Float32Array.BYTES_PER_ELEMENT)}s.bufferSubData(s.UNIFORM_BUFFER,$,B.__data)}}}s.bindBuffer(s.UNIFORM_BUFFER,null)}function v(E,T,A,N){const D=E.value,I=T+"_"+A;if(N[I]===void 0)return typeof D=="number"||typeof D=="boolean"?N[I]=D:N[I]=D.clone(),!0;{const z=N[I];if(typeof D=="number"||typeof D=="boolean"){if(z!==D)return N[I]=D,!0}else if(z.equals(D)===!1)return z.copy(D),!0}return!1}function x(E){const T=E.uniforms;let A=0;const N=16;for(let I=0,z=T.length;I<z;I++){const C=Array.isArray(T[I])?T[I]:[T[I]];for(let w=0,B=C.length;w<B;w++){const $=C[w],q=Array.isArray($.value)?$.value:[$.value];for(let J=0,nt=q.length;J<nt;J++){const F=q[J],X=M(F),G=A%N,st=G%X.boundary,ct=G+st;A+=st,ct!==0&&N-ct<X.storage&&(A+=N-ct),$.__data=new Float32Array(X.storage/Float32Array.BYTES_PER_ELEMENT),$.__offset=A,A+=X.storage}}}const D=A%N;return D>0&&(A+=N-D),E.__size=A,E.__cache={},this}function M(E){const T={boundary:0,storage:0};return typeof E=="number"||typeof E=="boolean"?(T.boundary=4,T.storage=4):E.isVector2?(T.boundary=8,T.storage=8):E.isVector3||E.isColor?(T.boundary=16,T.storage=12):E.isVector4?(T.boundary=16,T.storage=16):E.isMatrix3?(T.boundary=48,T.storage=48):E.isMatrix4?(T.boundary=64,T.storage=64):E.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",E),T}function S(E){const T=E.target;T.removeEventListener("dispose",S);const A=l.indexOf(T.__bindingPointIndex);l.splice(A,1),s.deleteBuffer(i[T.id]),delete i[T.id],delete r[T.id]}function _(){for(const E in i)s.deleteBuffer(i[E]);l=[],i={},r={}}return{bind:h,update:f,dispose:_}}class hM{constructor(t={}){const{canvas:e=aS(),context:n=null,depth:i=!0,stencil:r=!1,alpha:l=!1,antialias:c=!1,premultipliedAlpha:h=!0,preserveDrawingBuffer:f=!1,powerPreference:p="default",failIfMajorPerformanceCaveat:m=!1,reverseDepthBuffer:g=!1}=t;this.isWebGLRenderer=!0;let v;if(n!==null){if(typeof WebGLRenderingContext<"u"&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");v=n.getContextAttributes().alpha}else v=l;const x=new Uint32Array(4),M=new Int32Array(4);let S=null,_=null;const E=[],T=[];this.domElement=e,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=vs,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const A=this;let N=!1;this._outputColorSpace=Wn;let D=0,I=0,z=null,C=-1,w=null;const B=new Ae,$=new Ae;let q=null;const J=new kt(0);let nt=0,F=e.width,X=e.height,G=1,st=null,ct=null;const _t=new Ae(0,0,F,X),Dt=new Ae(0,0,F,X);let Xt=!1;const tt=new Yo;let yt=!1,Yt=!1;const Nt=new he,Vt=new he,fe=new L,qt=new Ae,ne={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let ce=!1;function ee(){return z===null?G:1}let O=n;function Ct(U,Y){return e.getContext(U,Y)}try{const U={alpha:!0,depth:i,stencil:r,antialias:c,premultipliedAlpha:h,preserveDrawingBuffer:f,powerPreference:p,failIfMajorPerformanceCaveat:m};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${Wo}`),e.addEventListener("webglcontextlost",Ht,!1),e.addEventListener("webglcontextrestored",At,!1),e.addEventListener("webglcontextcreationerror",gt,!1),O===null){const Y="webgl2";if(O=Ct(Y,U),O===null)throw Ct(Y)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(U){throw console.error("THREE.WebGLRenderer: "+U.message),U}let Mt,bt,ht,Ot,St,Ft,ue,H,R,Q,lt,pt,ut,te,Lt,Kt,Qt,vt,zt,ie,k,et,Tt,V;function wt(){Mt=new _2(O),Mt.init(),et=new uM(O,Mt),bt=new h2(O,Mt,t,et),ht=new Q3(O,Mt),bt.reverseDepthBuffer&&g&&ht.buffers.depth.setReversed(!0),Ot=new S2(O),St=new F3,Ft=new $3(O,Mt,ht,St,bt,et,Ot),ue=new d2(A),H=new v2(A),R=new ww(O),Tt=new c2(O,R),Q=new y2(O,R,Ot,Tt),lt=new b2(O,Q,R,Ot),zt=new M2(O,bt,Ft),Kt=new f2(St),pt=new B3(A,ue,H,Mt,bt,Tt,Kt),ut=new aD(A,St),te=new V3,Lt=new Y3(Mt),vt=new l2(A,ue,H,ht,lt,v,h),Qt=new K3(A,lt,bt),V=new rD(O,Ot,bt,ht),ie=new u2(O,Mt,Ot),k=new x2(O,Mt,Ot),Ot.programs=pt.programs,A.capabilities=bt,A.extensions=Mt,A.properties=St,A.renderLists=te,A.shadowMap=Qt,A.state=ht,A.info=Ot}wt();const xt=new iD(A,O);this.xr=xt,this.getContext=function(){return O},this.getContextAttributes=function(){return O.getContextAttributes()},this.forceContextLoss=function(){const U=Mt.get("WEBGL_lose_context");U&&U.loseContext()},this.forceContextRestore=function(){const U=Mt.get("WEBGL_lose_context");U&&U.restoreContext()},this.getPixelRatio=function(){return G},this.setPixelRatio=function(U){U!==void 0&&(G=U,this.setSize(F,X,!1))},this.getSize=function(U){return U.set(F,X)},this.setSize=function(U,Y,at=!0){if(xt.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}F=U,X=Y,e.width=Math.floor(U*G),e.height=Math.floor(Y*G),at===!0&&(e.style.width=U+"px",e.style.height=Y+"px"),this.setViewport(0,0,U,Y)},this.getDrawingBufferSize=function(U){return U.set(F*G,X*G).floor()},this.setDrawingBufferSize=function(U,Y,at){F=U,X=Y,G=at,e.width=Math.floor(U*at),e.height=Math.floor(Y*at),this.setViewport(0,0,U,Y)},this.getCurrentViewport=function(U){return U.copy(B)},this.getViewport=function(U){return U.copy(_t)},this.setViewport=function(U,Y,at,rt){U.isVector4?_t.set(U.x,U.y,U.z,U.w):_t.set(U,Y,at,rt),ht.viewport(B.copy(_t).multiplyScalar(G).round())},this.getScissor=function(U){return U.copy(Dt)},this.setScissor=function(U,Y,at,rt){U.isVector4?Dt.set(U.x,U.y,U.z,U.w):Dt.set(U,Y,at,rt),ht.scissor($.copy(Dt).multiplyScalar(G).round())},this.getScissorTest=function(){return Xt},this.setScissorTest=function(U){ht.setScissorTest(Xt=U)},this.setOpaqueSort=function(U){st=U},this.setTransparentSort=function(U){ct=U},this.getClearColor=function(U){return U.copy(vt.getClearColor())},this.setClearColor=function(){vt.setClearColor(...arguments)},this.getClearAlpha=function(){return vt.getClearAlpha()},this.setClearAlpha=function(){vt.setClearAlpha(...arguments)},this.clear=function(U=!0,Y=!0,at=!0){let rt=0;if(U){let j=!1;if(z!==null){const Et=z.texture.format;j=Et===gf||Et===mf||Et===vc}if(j){const Et=z.texture.type,Bt=Et===Vi||Et===Ks||Et===Lo||Et===Io||Et===ff||Et===df,$t=vt.getClearColor(),Zt=vt.getClearAlpha(),de=$t.r,pe=$t.g,ae=$t.b;Bt?(x[0]=de,x[1]=pe,x[2]=ae,x[3]=Zt,O.clearBufferuiv(O.COLOR,0,x)):(M[0]=de,M[1]=pe,M[2]=ae,M[3]=Zt,O.clearBufferiv(O.COLOR,0,M))}else rt|=O.COLOR_BUFFER_BIT}Y&&(rt|=O.DEPTH_BUFFER_BIT),at&&(rt|=O.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),O.clear(rt)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Ht,!1),e.removeEventListener("webglcontextrestored",At,!1),e.removeEventListener("webglcontextcreationerror",gt,!1),vt.dispose(),te.dispose(),Lt.dispose(),St.dispose(),ue.dispose(),H.dispose(),lt.dispose(),Tt.dispose(),V.dispose(),pt.dispose(),xt.dispose(),xt.removeEventListener("sessionstart",Jo),xt.removeEventListener("sessionend",Dr),ki.stop()};function Ht(U){U.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),N=!0}function At(){console.log("THREE.WebGLRenderer: Context Restored."),N=!1;const U=Ot.autoReset,Y=Qt.enabled,at=Qt.autoUpdate,rt=Qt.needsUpdate,j=Qt.type;wt(),Ot.autoReset=U,Qt.enabled=Y,Qt.autoUpdate=at,Qt.needsUpdate=rt,Qt.type=j}function gt(U){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",U.statusMessage)}function Gt(U){const Y=U.target;Y.removeEventListener("dispose",Gt),se(Y)}function se(U){we(U),St.remove(U)}function we(U){const Y=St.get(U).programs;Y!==void 0&&(Y.forEach(function(at){pt.releaseProgram(at)}),U.isShaderMaterial&&pt.releaseShaderCache(U))}this.renderBufferDirect=function(U,Y,at,rt,j,Et){Y===null&&(Y=ne);const Bt=j.isMesh&&j.matrixWorld.determinant()<0,$t=Rc(U,Y,at,rt,j);ht.setMaterial(rt,Bt);let Zt=at.index,de=1;if(rt.wireframe===!0){if(Zt=Q.getWireframeAttribute(at),Zt===void 0)return;de=2}const pe=at.drawRange,ae=at.attributes.position;let Ee=pe.start*de,Fe=(pe.start+pe.count)*de;Et!==null&&(Ee=Math.max(Ee,Et.start*de),Fe=Math.min(Fe,(Et.start+Et.count)*de)),Zt!==null?(Ee=Math.max(Ee,0),Fe=Math.min(Fe,Zt.count)):ae!=null&&(Ee=Math.max(Ee,0),Fe=Math.min(Fe,ae.count));const Qe=Fe-Ee;if(Qe<0||Qe===1/0)return;Tt.setup(j,rt,$t,at,Zt);let Ve,He=ie;if(Zt!==null&&(Ve=R.get(Zt),He=k,He.setIndex(Ve)),j.isMesh)rt.wireframe===!0?(ht.setLineWidth(rt.wireframeLinewidth*ee()),He.setMode(O.LINES)):He.setMode(O.TRIANGLES);else if(j.isLine){let oe=rt.linewidth;oe===void 0&&(oe=1),ht.setLineWidth(oe*ee()),j.isLineSegments?He.setMode(O.LINES):j.isLineLoop?He.setMode(O.LINE_LOOP):He.setMode(O.LINE_STRIP)}else j.isPoints?He.setMode(O.POINTS):j.isSprite&&He.setMode(O.TRIANGLES);if(j.isBatchedMesh)if(j._multiDrawInstances!==null)Uo("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),He.renderMultiDrawInstances(j._multiDrawStarts,j._multiDrawCounts,j._multiDrawCount,j._multiDrawInstances);else if(Mt.get("WEBGL_multi_draw"))He.renderMultiDraw(j._multiDrawStarts,j._multiDrawCounts,j._multiDrawCount);else{const oe=j._multiDrawStarts,Ze=j._multiDrawCounts,De=j._multiDrawCount,In=Zt?R.get(Zt).bytesPerElement:1,is=St.get(rt).currentProgram.getUniforms();for(let On=0;On<De;On++)is.setValue(O,"_gl_DrawID",On),He.render(oe[On]/In,Ze[On])}else if(j.isInstancedMesh)He.renderInstances(Ee,Qe,j.count);else if(at.isInstancedBufferGeometry){const oe=at._maxInstanceCount!==void 0?at._maxInstanceCount:1/0,Ze=Math.min(at.instanceCount,oe);He.renderInstances(Ee,Qe,Ze)}else He.render(Ee,Qe)};function be(U,Y,at){U.transparent===!0&&U.side===ts&&U.forceSinglePass===!1?(U.side=ni,U.needsUpdate=!0,je(U,Y,at),U.side=js,U.needsUpdate=!0,je(U,Y,at),U.side=ts):je(U,Y,at)}this.compile=function(U,Y,at=null){at===null&&(at=U),_=Lt.get(at),_.init(Y),T.push(_),at.traverseVisible(function(j){j.isLight&&j.layers.test(Y.layers)&&(_.pushLight(j),j.castShadow&&_.pushShadow(j))}),U!==at&&U.traverseVisible(function(j){j.isLight&&j.layers.test(Y.layers)&&(_.pushLight(j),j.castShadow&&_.pushShadow(j))}),_.setupLights();const rt=new Set;return U.traverse(function(j){if(!(j.isMesh||j.isPoints||j.isLine||j.isSprite))return;const Et=j.material;if(Et)if(Array.isArray(Et))for(let Bt=0;Bt<Et.length;Bt++){const $t=Et[Bt];be($t,at,j),rt.add($t)}else be(Et,at,j),rt.add(Et)}),_=T.pop(),rt},this.compileAsync=function(U,Y,at=null){const rt=this.compile(U,Y,at);return new Promise(j=>{function Et(){if(rt.forEach(function(Bt){St.get(Bt).currentProgram.isReady()&&rt.delete(Bt)}),rt.size===0){j(U);return}setTimeout(Et,10)}Mt.get("KHR_parallel_shader_compile")!==null?Et():setTimeout(Et,10)})};let fn=null;function An(U){fn&&fn(U)}function Jo(){ki.stop()}function Dr(){ki.start()}const ki=new aM;ki.setAnimationLoop(An),typeof self<"u"&&ki.setContext(self),this.setAnimationLoop=function(U){fn=U,xt.setAnimationLoop(U),U===null?ki.stop():ki.start()},xt.addEventListener("sessionstart",Jo),xt.addEventListener("sessionend",Dr),this.render=function(U,Y){if(Y!==void 0&&Y.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(N===!0)return;if(U.matrixWorldAutoUpdate===!0&&U.updateMatrixWorld(),Y.parent===null&&Y.matrixWorldAutoUpdate===!0&&Y.updateMatrixWorld(),xt.enabled===!0&&xt.isPresenting===!0&&(xt.cameraAutoUpdate===!0&&xt.updateCamera(Y),Y=xt.getCamera()),U.isScene===!0&&U.onBeforeRender(A,U,Y,z),_=Lt.get(U,T.length),_.init(Y),T.push(_),Vt.multiplyMatrices(Y.projectionMatrix,Y.matrixWorldInverse),tt.setFromProjectionMatrix(Vt),Yt=this.localClippingEnabled,yt=Kt.init(this.clippingPlanes,Yt),S=te.get(U,E.length),S.init(),E.push(S),xt.enabled===!0&&xt.isPresenting===!0){const Et=A.xr.getDepthSensingMesh();Et!==null&&Ci(Et,Y,-1/0,A.sortObjects)}Ci(U,Y,0,A.sortObjects),S.finish(),A.sortObjects===!0&&S.sort(st,ct),ce=xt.enabled===!1||xt.isPresenting===!1||xt.hasDepthSensing()===!1,ce&&vt.addToRenderList(S,U),this.info.render.frame++,yt===!0&&Kt.beginShadows();const at=_.state.shadowsArray;Qt.render(at,U,Y),yt===!0&&Kt.endShadows(),this.info.autoReset===!0&&this.info.reset();const rt=S.opaque,j=S.transmissive;if(_.setupLights(),Y.isArrayCamera){const Et=Y.cameras;if(j.length>0)for(let Bt=0,$t=Et.length;Bt<$t;Bt++){const Zt=Et[Bt];Wi(rt,j,U,Zt)}ce&&vt.render(U);for(let Bt=0,$t=Et.length;Bt<$t;Bt++){const Zt=Et[Bt];Qo(S,U,Zt,Zt.viewport)}}else j.length>0&&Wi(rt,j,U,Y),ce&&vt.render(U),Qo(S,U,Y);z!==null&&I===0&&(Ft.updateMultisampleRenderTarget(z),Ft.updateRenderTargetMipmap(z)),U.isScene===!0&&U.onAfterRender(A,U,Y),Tt.resetDefaultState(),C=-1,w=null,T.pop(),T.length>0?(_=T[T.length-1],yt===!0&&Kt.setGlobalState(A.clippingPlanes,_.state.camera)):_=null,E.pop(),E.length>0?S=E[E.length-1]:S=null};function Ci(U,Y,at,rt){if(U.visible===!1)return;if(U.layers.test(Y.layers)){if(U.isGroup)at=U.renderOrder;else if(U.isLOD)U.autoUpdate===!0&&U.update(Y);else if(U.isLight)_.pushLight(U),U.castShadow&&_.pushShadow(U);else if(U.isSprite){if(!U.frustumCulled||tt.intersectsSprite(U)){rt&&qt.setFromMatrixPosition(U.matrixWorld).applyMatrix4(Vt);const Bt=lt.update(U),$t=U.material;$t.visible&&S.push(U,Bt,$t,at,qt.z,null)}}else if((U.isMesh||U.isLine||U.isPoints)&&(!U.frustumCulled||tt.intersectsObject(U))){const Bt=lt.update(U),$t=U.material;if(rt&&(U.boundingSphere!==void 0?(U.boundingSphere===null&&U.computeBoundingSphere(),qt.copy(U.boundingSphere.center)):(Bt.boundingSphere===null&&Bt.computeBoundingSphere(),qt.copy(Bt.boundingSphere.center)),qt.applyMatrix4(U.matrixWorld).applyMatrix4(Vt)),Array.isArray($t)){const Zt=Bt.groups;for(let de=0,pe=Zt.length;de<pe;de++){const ae=Zt[de],Ee=$t[ae.materialIndex];Ee&&Ee.visible&&S.push(U,Bt,Ee,at,qt.z,ae)}}else $t.visible&&S.push(U,Bt,$t,at,qt.z,null)}}const Et=U.children;for(let Bt=0,$t=Et.length;Bt<$t;Bt++)Ci(Et[Bt],Y,at,rt)}function Qo(U,Y,at,rt){const j=U.opaque,Et=U.transmissive,Bt=U.transparent;_.setupLightsView(at),yt===!0&&Kt.setGlobalState(A.clippingPlanes,at),rt&&ht.viewport(B.copy(rt)),j.length>0&&si(j,Y,at),Et.length>0&&si(Et,Y,at),Bt.length>0&&si(Bt,Y,at),ht.buffers.depth.setTest(!0),ht.buffers.depth.setMask(!0),ht.buffers.color.setMask(!0),ht.setPolygonOffset(!1)}function Wi(U,Y,at,rt){if((at.isScene===!0?at.overrideMaterial:null)!==null)return;_.state.transmissionRenderTarget[rt.id]===void 0&&(_.state.transmissionRenderTarget[rt.id]=new xs(1,1,{generateMipmaps:!0,type:Mt.has("EXT_color_buffer_half_float")||Mt.has("EXT_color_buffer_float")?qo:Vi,minFilter:ms,samples:4,stencilBuffer:r,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:Ue.workingColorSpace}));const Et=_.state.transmissionRenderTarget[rt.id],Bt=rt.viewport||B;Et.setSize(Bt.z*A.transmissionResolutionScale,Bt.w*A.transmissionResolutionScale);const $t=A.getRenderTarget(),Zt=A.getActiveCubeFace(),de=A.getActiveMipmapLevel();A.setRenderTarget(Et),A.getClearColor(J),nt=A.getClearAlpha(),nt<1&&A.setClearColor(16777215,.5),A.clear(),ce&&vt.render(at);const pe=A.toneMapping;A.toneMapping=vs;const ae=rt.viewport;if(rt.viewport!==void 0&&(rt.viewport=void 0),_.setupLightsView(rt),yt===!0&&Kt.setGlobalState(A.clippingPlanes,rt),si(U,at,rt),Ft.updateMultisampleRenderTarget(Et),Ft.updateRenderTargetMipmap(Et),Mt.has("WEBGL_multisampled_render_to_texture")===!1){let Ee=!1;for(let Fe=0,Qe=Y.length;Fe<Qe;Fe++){const Ve=Y[Fe],He=Ve.object,oe=Ve.geometry,Ze=Ve.material,De=Ve.group;if(Ze.side===ts&&He.layers.test(rt.layers)){const In=Ze.side;Ze.side=ni,Ze.needsUpdate=!0,La(He,at,rt,oe,Ze,De),Ze.side=In,Ze.needsUpdate=!0,Ee=!0}}Ee===!0&&(Ft.updateMultisampleRenderTarget(Et),Ft.updateRenderTargetMipmap(Et))}A.setRenderTarget($t,Zt,de),A.setClearColor(J,nt),ae!==void 0&&(rt.viewport=ae),A.toneMapping=pe}function si(U,Y,at){const rt=Y.isScene===!0?Y.overrideMaterial:null;for(let j=0,Et=U.length;j<Et;j++){const Bt=U[j],$t=Bt.object,Zt=Bt.geometry,de=Bt.group;let pe=Bt.material;pe.allowOverride===!0&&rt!==null&&(pe=rt),$t.layers.test(at.layers)&&La($t,Y,at,Zt,pe,de)}}function La(U,Y,at,rt,j,Et){U.onBeforeRender(A,Y,at,rt,j,Et),U.modelViewMatrix.multiplyMatrices(at.matrixWorldInverse,U.matrixWorld),U.normalMatrix.getNormalMatrix(U.modelViewMatrix),j.onBeforeRender(A,Y,at,rt,U,Et),j.transparent===!0&&j.side===ts&&j.forceSinglePass===!1?(j.side=ni,j.needsUpdate=!0,A.renderBufferDirect(at,Y,rt,j,U,Et),j.side=js,j.needsUpdate=!0,A.renderBufferDirect(at,Y,rt,j,U,Et),j.side=ts):A.renderBufferDirect(at,Y,rt,j,U,Et),U.onAfterRender(A,Y,at,rt,j,Et)}function je(U,Y,at){Y.isScene!==!0&&(Y=ne);const rt=St.get(U),j=_.state.lights,Et=_.state.shadowsArray,Bt=j.state.version,$t=pt.getParameters(U,j.state,Et,Y,at),Zt=pt.getProgramCacheKey($t);let de=rt.programs;rt.environment=U.isMeshStandardMaterial?Y.environment:null,rt.fog=Y.fog,rt.envMap=(U.isMeshStandardMaterial?H:ue).get(U.envMap||rt.environment),rt.envMapRotation=rt.environment!==null&&U.envMap===null?Y.environmentRotation:U.envMapRotation,de===void 0&&(U.addEventListener("dispose",Gt),de=new Map,rt.programs=de);let pe=de.get(Zt);if(pe!==void 0){if(rt.currentProgram===pe&&rt.lightsStateVersion===Bt)return Pr(U,$t),pe}else $t.uniforms=pt.getUniforms(U),U.onBeforeCompile($t,A),pe=pt.acquireProgram($t,Zt),de.set(Zt,pe),rt.uniforms=$t.uniforms;const ae=rt.uniforms;return(!U.isShaderMaterial&&!U.isRawShaderMaterial||U.clipping===!0)&&(ae.clippingPlanes=Kt.uniform),Pr(U,$t),rt.needsLights=Xf(U),rt.lightsStateVersion=Bt,rt.needsLights&&(ae.ambientLightColor.value=j.state.ambient,ae.lightProbe.value=j.state.probe,ae.directionalLights.value=j.state.directional,ae.directionalLightShadows.value=j.state.directionalShadow,ae.spotLights.value=j.state.spot,ae.spotLightShadows.value=j.state.spotShadow,ae.rectAreaLights.value=j.state.rectArea,ae.ltc_1.value=j.state.rectAreaLTC1,ae.ltc_2.value=j.state.rectAreaLTC2,ae.pointLights.value=j.state.point,ae.pointLightShadows.value=j.state.pointShadow,ae.hemisphereLights.value=j.state.hemi,ae.directionalShadowMap.value=j.state.directionalShadowMap,ae.directionalShadowMatrix.value=j.state.directionalShadowMatrix,ae.spotShadowMap.value=j.state.spotShadowMap,ae.spotLightMatrix.value=j.state.spotLightMatrix,ae.spotLightMap.value=j.state.spotLightMap,ae.pointShadowMap.value=j.state.pointShadowMap,ae.pointShadowMatrix.value=j.state.pointShadowMatrix),rt.currentProgram=pe,rt.uniformsList=null,pe}function Ur(U){if(U.uniformsList===null){const Y=U.currentProgram.getUniforms();U.uniformsList=hh.seqWithValue(Y.seq,U.uniforms)}return U.uniformsList}function Pr(U,Y){const at=St.get(U);at.outputColorSpace=Y.outputColorSpace,at.batching=Y.batching,at.batchingColor=Y.batchingColor,at.instancing=Y.instancing,at.instancingColor=Y.instancingColor,at.instancingMorph=Y.instancingMorph,at.skinning=Y.skinning,at.morphTargets=Y.morphTargets,at.morphNormals=Y.morphNormals,at.morphColors=Y.morphColors,at.morphTargetsCount=Y.morphTargetsCount,at.numClippingPlanes=Y.numClippingPlanes,at.numIntersection=Y.numClipIntersection,at.vertexAlphas=Y.vertexAlphas,at.vertexTangents=Y.vertexTangents,at.toneMapping=Y.toneMapping}function Rc(U,Y,at,rt,j){Y.isScene!==!0&&(Y=ne),Ft.resetTextureUnits();const Et=Y.fog,Bt=rt.isMeshStandardMaterial?Y.environment:null,$t=z===null?A.outputColorSpace:z.isXRRenderTarget===!0?z.texture.colorSpace:wa,Zt=(rt.isMeshStandardMaterial?H:ue).get(rt.envMap||Bt),de=rt.vertexColors===!0&&!!at.attributes.color&&at.attributes.color.itemSize===4,pe=!!at.attributes.tangent&&(!!rt.normalMap||rt.anisotropy>0),ae=!!at.morphAttributes.position,Ee=!!at.morphAttributes.normal,Fe=!!at.morphAttributes.color;let Qe=vs;rt.toneMapped&&(z===null||z.isXRRenderTarget===!0)&&(Qe=A.toneMapping);const Ve=at.morphAttributes.position||at.morphAttributes.normal||at.morphAttributes.color,He=Ve!==void 0?Ve.length:0,oe=St.get(rt),Ze=_.state.lights;if(yt===!0&&(Yt===!0||U!==w)){const wn=U===w&&rt.id===C;Kt.setState(rt,U,wn)}let De=!1;rt.version===oe.__version?(oe.needsLights&&oe.lightsStateVersion!==Ze.state.version||oe.outputColorSpace!==$t||j.isBatchedMesh&&oe.batching===!1||!j.isBatchedMesh&&oe.batching===!0||j.isBatchedMesh&&oe.batchingColor===!0&&j.colorTexture===null||j.isBatchedMesh&&oe.batchingColor===!1&&j.colorTexture!==null||j.isInstancedMesh&&oe.instancing===!1||!j.isInstancedMesh&&oe.instancing===!0||j.isSkinnedMesh&&oe.skinning===!1||!j.isSkinnedMesh&&oe.skinning===!0||j.isInstancedMesh&&oe.instancingColor===!0&&j.instanceColor===null||j.isInstancedMesh&&oe.instancingColor===!1&&j.instanceColor!==null||j.isInstancedMesh&&oe.instancingMorph===!0&&j.morphTexture===null||j.isInstancedMesh&&oe.instancingMorph===!1&&j.morphTexture!==null||oe.envMap!==Zt||rt.fog===!0&&oe.fog!==Et||oe.numClippingPlanes!==void 0&&(oe.numClippingPlanes!==Kt.numPlanes||oe.numIntersection!==Kt.numIntersection)||oe.vertexAlphas!==de||oe.vertexTangents!==pe||oe.morphTargets!==ae||oe.morphNormals!==Ee||oe.morphColors!==Fe||oe.toneMapping!==Qe||oe.morphTargetsCount!==He)&&(De=!0):(De=!0,oe.__version=rt.version);let In=oe.currentProgram;De===!0&&(In=je(rt,Y,j));let is=!1,On=!1,$s=!1;const Ye=In.getUniforms(),jn=oe.uniforms;if(ht.useProgram(In.program)&&(is=!0,On=!0,$s=!0),rt.id!==C&&(C=rt.id,On=!0),is||w!==U){ht.buffers.depth.getReversed()?(Nt.copy(U.projectionMatrix),J1(Nt),Q1(Nt),Ye.setValue(O,"projectionMatrix",Nt)):Ye.setValue(O,"projectionMatrix",U.projectionMatrix),Ye.setValue(O,"viewMatrix",U.matrixWorldInverse);const Cn=Ye.map.cameraPosition;Cn!==void 0&&Cn.setValue(O,fe.setFromMatrixPosition(U.matrixWorld)),bt.logarithmicDepthBuffer&&Ye.setValue(O,"logDepthBufFC",2/(Math.log(U.far+1)/Math.LN2)),(rt.isMeshPhongMaterial||rt.isMeshToonMaterial||rt.isMeshLambertMaterial||rt.isMeshBasicMaterial||rt.isMeshStandardMaterial||rt.isShaderMaterial)&&Ye.setValue(O,"isOrthographic",U.isOrthographicCamera===!0),w!==U&&(w=U,On=!0,$s=!0)}if(j.isSkinnedMesh){Ye.setOptional(O,j,"bindMatrix"),Ye.setOptional(O,j,"bindMatrixInverse");const wn=j.skeleton;wn&&(wn.boneTexture===null&&wn.computeBoneTexture(),Ye.setValue(O,"boneTexture",wn.boneTexture,Ft))}j.isBatchedMesh&&(Ye.setOptional(O,j,"batchingTexture"),Ye.setValue(O,"batchingTexture",j._matricesTexture,Ft),Ye.setOptional(O,j,"batchingIdTexture"),Ye.setValue(O,"batchingIdTexture",j._indirectTexture,Ft),Ye.setOptional(O,j,"batchingColorTexture"),j._colorsTexture!==null&&Ye.setValue(O,"batchingColorTexture",j._colorsTexture,Ft));const Zn=at.morphAttributes;if((Zn.position!==void 0||Zn.normal!==void 0||Zn.color!==void 0)&&zt.update(j,at,In),(On||oe.receiveShadow!==j.receiveShadow)&&(oe.receiveShadow=j.receiveShadow,Ye.setValue(O,"receiveShadow",j.receiveShadow)),rt.isMeshGouraudMaterial&&rt.envMap!==null&&(jn.envMap.value=Zt,jn.flipEnvMap.value=Zt.isCubeTexture&&Zt.isRenderTargetTexture===!1?-1:1),rt.isMeshStandardMaterial&&rt.envMap===null&&Y.environment!==null&&(jn.envMapIntensity.value=Y.environmentIntensity),On&&(Ye.setValue(O,"toneMappingExposure",A.toneMappingExposure),oe.needsLights&&Dc(jn,$s),Et&&rt.fog===!0&&ut.refreshFogUniforms(jn,Et),ut.refreshMaterialUniforms(jn,rt,G,X,_.state.transmissionRenderTarget[U.id]),hh.upload(O,Ur(oe),jn,Ft)),rt.isShaderMaterial&&rt.uniformsNeedUpdate===!0&&(hh.upload(O,Ur(oe),jn,Ft),rt.uniformsNeedUpdate=!1),rt.isSpriteMaterial&&Ye.setValue(O,"center",j.center),Ye.setValue(O,"modelViewMatrix",j.modelViewMatrix),Ye.setValue(O,"normalMatrix",j.normalMatrix),Ye.setValue(O,"modelMatrix",j.matrixWorld),rt.isShaderMaterial||rt.isRawShaderMaterial){const wn=rt.uniformsGroups;for(let Cn=0,ss=wn.length;Cn<ss;Cn++){const as=wn[Cn];V.update(as,In),V.bind(as,In)}}return In}function Dc(U,Y){U.ambientLightColor.needsUpdate=Y,U.lightProbe.needsUpdate=Y,U.directionalLights.needsUpdate=Y,U.directionalLightShadows.needsUpdate=Y,U.pointLights.needsUpdate=Y,U.pointLightShadows.needsUpdate=Y,U.spotLights.needsUpdate=Y,U.spotLightShadows.needsUpdate=Y,U.rectAreaLights.needsUpdate=Y,U.hemisphereLights.needsUpdate=Y}function Xf(U){return U.isMeshLambertMaterial||U.isMeshToonMaterial||U.isMeshPhongMaterial||U.isMeshStandardMaterial||U.isShadowMaterial||U.isShaderMaterial&&U.lights===!0}this.getActiveCubeFace=function(){return D},this.getActiveMipmapLevel=function(){return I},this.getRenderTarget=function(){return z},this.setRenderTargetTextures=function(U,Y,at){const rt=St.get(U);rt.__autoAllocateDepthBuffer=U.resolveDepthBuffer===!1,rt.__autoAllocateDepthBuffer===!1&&(rt.__useRenderToTexture=!1),St.get(U.texture).__webglTexture=Y,St.get(U.depthTexture).__webglTexture=rt.__autoAllocateDepthBuffer?void 0:at,rt.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(U,Y){const at=St.get(U);at.__webglFramebuffer=Y,at.__useDefaultFramebuffer=Y===void 0};const $o=O.createFramebuffer();this.setRenderTarget=function(U,Y=0,at=0){z=U,D=Y,I=at;let rt=!0,j=null,Et=!1,Bt=!1;if(U){const Zt=St.get(U);if(Zt.__useDefaultFramebuffer!==void 0)ht.bindFramebuffer(O.FRAMEBUFFER,null),rt=!1;else if(Zt.__webglFramebuffer===void 0)Ft.setupRenderTarget(U);else if(Zt.__hasExternalTextures)Ft.rebindTextures(U,St.get(U.texture).__webglTexture,St.get(U.depthTexture).__webglTexture);else if(U.depthBuffer){const ae=U.depthTexture;if(Zt.__boundDepthTexture!==ae){if(ae!==null&&St.has(ae)&&(U.width!==ae.image.width||U.height!==ae.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");Ft.setupDepthRenderbuffer(U)}}const de=U.texture;(de.isData3DTexture||de.isDataArrayTexture||de.isCompressedArrayTexture)&&(Bt=!0);const pe=St.get(U).__webglFramebuffer;U.isWebGLCubeRenderTarget?(Array.isArray(pe[Y])?j=pe[Y][at]:j=pe[Y],Et=!0):U.samples>0&&Ft.useMultisampledRTT(U)===!1?j=St.get(U).__webglMultisampledFramebuffer:Array.isArray(pe)?j=pe[at]:j=pe,B.copy(U.viewport),$.copy(U.scissor),q=U.scissorTest}else B.copy(_t).multiplyScalar(G).floor(),$.copy(Dt).multiplyScalar(G).floor(),q=Xt;if(at!==0&&(j=$o),ht.bindFramebuffer(O.FRAMEBUFFER,j)&&rt&&ht.drawBuffers(U,j),ht.viewport(B),ht.scissor($),ht.setScissorTest(q),Et){const Zt=St.get(U.texture);O.framebufferTexture2D(O.FRAMEBUFFER,O.COLOR_ATTACHMENT0,O.TEXTURE_CUBE_MAP_POSITIVE_X+Y,Zt.__webglTexture,at)}else if(Bt){const Zt=St.get(U.texture),de=Y;O.framebufferTextureLayer(O.FRAMEBUFFER,O.COLOR_ATTACHMENT0,Zt.__webglTexture,at,de)}else if(U!==null&&at!==0){const Zt=St.get(U.texture);O.framebufferTexture2D(O.FRAMEBUFFER,O.COLOR_ATTACHMENT0,O.TEXTURE_2D,Zt.__webglTexture,at)}C=-1},this.readRenderTargetPixels=function(U,Y,at,rt,j,Et,Bt,$t=0){if(!(U&&U.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Zt=St.get(U).__webglFramebuffer;if(U.isWebGLCubeRenderTarget&&Bt!==void 0&&(Zt=Zt[Bt]),Zt){ht.bindFramebuffer(O.FRAMEBUFFER,Zt);try{const de=U.textures[$t],pe=de.format,ae=de.type;if(!bt.textureFormatReadable(pe)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!bt.textureTypeReadable(ae)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}Y>=0&&Y<=U.width-rt&&at>=0&&at<=U.height-j&&(U.textures.length>1&&O.readBuffer(O.COLOR_ATTACHMENT0+$t),O.readPixels(Y,at,rt,j,et.convert(pe),et.convert(ae),Et))}finally{const de=z!==null?St.get(z).__webglFramebuffer:null;ht.bindFramebuffer(O.FRAMEBUFFER,de)}}},this.readRenderTargetPixelsAsync=async function(U,Y,at,rt,j,Et,Bt,$t=0){if(!(U&&U.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let Zt=St.get(U).__webglFramebuffer;if(U.isWebGLCubeRenderTarget&&Bt!==void 0&&(Zt=Zt[Bt]),Zt)if(Y>=0&&Y<=U.width-rt&&at>=0&&at<=U.height-j){ht.bindFramebuffer(O.FRAMEBUFFER,Zt);const de=U.textures[$t],pe=de.format,ae=de.type;if(!bt.textureFormatReadable(pe))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!bt.textureTypeReadable(ae))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const Ee=O.createBuffer();O.bindBuffer(O.PIXEL_PACK_BUFFER,Ee),O.bufferData(O.PIXEL_PACK_BUFFER,Et.byteLength,O.STREAM_READ),U.textures.length>1&&O.readBuffer(O.COLOR_ATTACHMENT0+$t),O.readPixels(Y,at,rt,j,et.convert(pe),et.convert(ae),0);const Fe=z!==null?St.get(z).__webglFramebuffer:null;ht.bindFramebuffer(O.FRAMEBUFFER,Fe);const Qe=O.fenceSync(O.SYNC_GPU_COMMANDS_COMPLETE,0);return O.flush(),await K1(O,Qe,4),O.bindBuffer(O.PIXEL_PACK_BUFFER,Ee),O.getBufferSubData(O.PIXEL_PACK_BUFFER,0,Et),O.deleteBuffer(Ee),O.deleteSync(Qe),Et}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")},this.copyFramebufferToTexture=function(U,Y=null,at=0){const rt=Math.pow(2,-at),j=Math.floor(U.image.width*rt),Et=Math.floor(U.image.height*rt),Bt=Y!==null?Y.x:0,$t=Y!==null?Y.y:0;Ft.setTexture2D(U,0),O.copyTexSubImage2D(O.TEXTURE_2D,at,0,0,Bt,$t,j,Et),ht.unbindTexture()};const tl=O.createFramebuffer(),el=O.createFramebuffer();this.copyTextureToTexture=function(U,Y,at=null,rt=null,j=0,Et=null){Et===null&&(j!==0?(Uo("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),Et=j,j=0):Et=0);let Bt,$t,Zt,de,pe,ae,Ee,Fe,Qe;const Ve=U.isCompressedTexture?U.mipmaps[Et]:U.image;if(at!==null)Bt=at.max.x-at.min.x,$t=at.max.y-at.min.y,Zt=at.isBox3?at.max.z-at.min.z:1,de=at.min.x,pe=at.min.y,ae=at.isBox3?at.min.z:0;else{const Zn=Math.pow(2,-j);Bt=Math.floor(Ve.width*Zn),$t=Math.floor(Ve.height*Zn),U.isDataArrayTexture?Zt=Ve.depth:U.isData3DTexture?Zt=Math.floor(Ve.depth*Zn):Zt=1,de=0,pe=0,ae=0}rt!==null?(Ee=rt.x,Fe=rt.y,Qe=rt.z):(Ee=0,Fe=0,Qe=0);const He=et.convert(Y.format),oe=et.convert(Y.type);let Ze;Y.isData3DTexture?(Ft.setTexture3D(Y,0),Ze=O.TEXTURE_3D):Y.isDataArrayTexture||Y.isCompressedArrayTexture?(Ft.setTexture2DArray(Y,0),Ze=O.TEXTURE_2D_ARRAY):(Ft.setTexture2D(Y,0),Ze=O.TEXTURE_2D),O.pixelStorei(O.UNPACK_FLIP_Y_WEBGL,Y.flipY),O.pixelStorei(O.UNPACK_PREMULTIPLY_ALPHA_WEBGL,Y.premultiplyAlpha),O.pixelStorei(O.UNPACK_ALIGNMENT,Y.unpackAlignment);const De=O.getParameter(O.UNPACK_ROW_LENGTH),In=O.getParameter(O.UNPACK_IMAGE_HEIGHT),is=O.getParameter(O.UNPACK_SKIP_PIXELS),On=O.getParameter(O.UNPACK_SKIP_ROWS),$s=O.getParameter(O.UNPACK_SKIP_IMAGES);O.pixelStorei(O.UNPACK_ROW_LENGTH,Ve.width),O.pixelStorei(O.UNPACK_IMAGE_HEIGHT,Ve.height),O.pixelStorei(O.UNPACK_SKIP_PIXELS,de),O.pixelStorei(O.UNPACK_SKIP_ROWS,pe),O.pixelStorei(O.UNPACK_SKIP_IMAGES,ae);const Ye=U.isDataArrayTexture||U.isData3DTexture,jn=Y.isDataArrayTexture||Y.isData3DTexture;if(U.isDepthTexture){const Zn=St.get(U),wn=St.get(Y),Cn=St.get(Zn.__renderTarget),ss=St.get(wn.__renderTarget);ht.bindFramebuffer(O.READ_FRAMEBUFFER,Cn.__webglFramebuffer),ht.bindFramebuffer(O.DRAW_FRAMEBUFFER,ss.__webglFramebuffer);for(let as=0;as<Zt;as++)Ye&&(O.framebufferTextureLayer(O.READ_FRAMEBUFFER,O.COLOR_ATTACHMENT0,St.get(U).__webglTexture,j,ae+as),O.framebufferTextureLayer(O.DRAW_FRAMEBUFFER,O.COLOR_ATTACHMENT0,St.get(Y).__webglTexture,Et,Qe+as)),O.blitFramebuffer(de,pe,Bt,$t,Ee,Fe,Bt,$t,O.DEPTH_BUFFER_BIT,O.NEAREST);ht.bindFramebuffer(O.READ_FRAMEBUFFER,null),ht.bindFramebuffer(O.DRAW_FRAMEBUFFER,null)}else if(j!==0||U.isRenderTargetTexture||St.has(U)){const Zn=St.get(U),wn=St.get(Y);ht.bindFramebuffer(O.READ_FRAMEBUFFER,tl),ht.bindFramebuffer(O.DRAW_FRAMEBUFFER,el);for(let Cn=0;Cn<Zt;Cn++)Ye?O.framebufferTextureLayer(O.READ_FRAMEBUFFER,O.COLOR_ATTACHMENT0,Zn.__webglTexture,j,ae+Cn):O.framebufferTexture2D(O.READ_FRAMEBUFFER,O.COLOR_ATTACHMENT0,O.TEXTURE_2D,Zn.__webglTexture,j),jn?O.framebufferTextureLayer(O.DRAW_FRAMEBUFFER,O.COLOR_ATTACHMENT0,wn.__webglTexture,Et,Qe+Cn):O.framebufferTexture2D(O.DRAW_FRAMEBUFFER,O.COLOR_ATTACHMENT0,O.TEXTURE_2D,wn.__webglTexture,Et),j!==0?O.blitFramebuffer(de,pe,Bt,$t,Ee,Fe,Bt,$t,O.COLOR_BUFFER_BIT,O.NEAREST):jn?O.copyTexSubImage3D(Ze,Et,Ee,Fe,Qe+Cn,de,pe,Bt,$t):O.copyTexSubImage2D(Ze,Et,Ee,Fe,de,pe,Bt,$t);ht.bindFramebuffer(O.READ_FRAMEBUFFER,null),ht.bindFramebuffer(O.DRAW_FRAMEBUFFER,null)}else jn?U.isDataTexture||U.isData3DTexture?O.texSubImage3D(Ze,Et,Ee,Fe,Qe,Bt,$t,Zt,He,oe,Ve.data):Y.isCompressedArrayTexture?O.compressedTexSubImage3D(Ze,Et,Ee,Fe,Qe,Bt,$t,Zt,He,Ve.data):O.texSubImage3D(Ze,Et,Ee,Fe,Qe,Bt,$t,Zt,He,oe,Ve):U.isDataTexture?O.texSubImage2D(O.TEXTURE_2D,Et,Ee,Fe,Bt,$t,He,oe,Ve.data):U.isCompressedTexture?O.compressedTexSubImage2D(O.TEXTURE_2D,Et,Ee,Fe,Ve.width,Ve.height,He,Ve.data):O.texSubImage2D(O.TEXTURE_2D,Et,Ee,Fe,Bt,$t,He,oe,Ve);O.pixelStorei(O.UNPACK_ROW_LENGTH,De),O.pixelStorei(O.UNPACK_IMAGE_HEIGHT,In),O.pixelStorei(O.UNPACK_SKIP_PIXELS,is),O.pixelStorei(O.UNPACK_SKIP_ROWS,On),O.pixelStorei(O.UNPACK_SKIP_IMAGES,$s),Et===0&&Y.generateMipmaps&&O.generateMipmap(Ze),ht.unbindTexture()},this.copyTextureToTexture3D=function(U,Y,at=null,rt=null,j=0){return Uo('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(U,Y,at,rt,j)},this.initRenderTarget=function(U){St.get(U).__webglFramebuffer===void 0&&Ft.setupRenderTarget(U)},this.initTexture=function(U){U.isCubeTexture?Ft.setTextureCube(U,0):U.isData3DTexture?Ft.setTexture3D(U,0):U.isDataArrayTexture||U.isCompressedArrayTexture?Ft.setTexture2DArray(U,0):Ft.setTexture2D(U,0),ht.unbindTexture()},this.resetState=function(){D=0,I=0,z=null,ht.reset(),Tt.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Hi}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(t){this._outputColorSpace=t;const e=this.getContext();e.drawingBufferColorSpace=Ue._getDrawingBufferColorSpace(t),e.unpackColorSpace=Ue._getUnpackColorSpace()}}const oD=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:Jm,AddEquation:Ma,AddOperation:Ox,AdditiveAnimationBlendMode:rg,AdditiveBlending:ph,AgXToneMapping:Vx,AlphaFormat:ng,AlwaysCompare:nS,AlwaysDepth:_h,AlwaysStencilFunc:Um,AmbientLight:YS,AnimationAction:eM,AnimationClip:dc,AnimationLoader:TA,AnimationMixer:$A,AnimationObjectGroup:JA,AnimationUtils:SA,ArcCurve:SS,ArrayCamera:QS,ArrowHelper:_w,AttachedBindMode:Dm,Audio:$S,AudioAnalyser:VA,AudioContext:Lg,AudioListener:BA,AudioLoader:IA,AxesHelper:yw,BackSide:ni,BasicDepthPacking:Yx,BasicShadowMap:gx,BatchedMesh:gS,Bone:pg,BooleanKeyframeTrack:Cr,Box2:aw,Box3:_n,Box3Helper:gw,BoxGeometry:wr,BoxHelper:mw,BufferAttribute:qe,BufferGeometry:Se,BufferGeometryLoader:JS,ByteType:$m,Cache:gs,Camera:xf,CameraHelper:pw,CanvasTexture:WT,CapsuleGeometry:wf,CatmullRomCurve3:_g,CineonToneMapping:Fx,CircleGeometry:Cf,ClampToEdgeWrapping:Fi,Clock:Ig,Color:kt,ColorKeyframeTrack:Dg,ColorManagement:Ue,CompressedArrayTexture:GT,CompressedCubeTexture:kT,CompressedTexture:Af,CompressedTextureLoader:AA,ConeGeometry:xc,ConstantAlphaFactor:Nx,ConstantColorFactor:Ux,Controls:Sw,CubeCamera:cS,CubeReflectionMapping:Zs,CubeRefractionMapping:Aa,CubeTexture:_c,CubeTextureLoader:wA,CubeUVReflectionMapping:Xo,CubicBezierCurve:yg,CubicBezierCurve3:MS,CubicInterpolant:HS,CullFaceBack:wm,CullFaceFront:mx,CullFaceFrontBack:KE,CullFaceNone:px,Curve:ns,CurvePath:ES,CustomBlending:vx,CustomToneMapping:Hx,CylinderGeometry:yc,Cylindrical:sw,Data3DTexture:yf,DataArrayTexture:_f,DataTexture:_s,DataTextureLoader:CA,DataUtils:dT,DecrementStencilOp:u1,DecrementWrapStencilOp:f1,DefaultLoadingManager:Ro,DepthFormat:Oo,DepthStencilFormat:zo,DepthTexture:gg,DetachedBindMode:kx,DirectionalLight:qS,DirectionalLightHelper:dw,DiscreteInterpolant:VS,DodecahedronGeometry:Rf,DoubleSide:ts,DstAlphaFactor:Ax,DstColorFactor:Cx,DynamicCopyUsage:w1,DynamicDrawUsage:S1,DynamicReadUsage:E1,EdgesGeometry:xS,EllipseCurve:Df,EqualCompare:Qx,EqualDepth:xh,EqualStencilFunc:g1,EquirectangularReflectionMapping:Ql,EquirectangularRefractionMapping:$l,Euler:Ai,EventDispatcher:Ss,ExtrudeGeometry:Uf,FileLoader:Js,Float16BufferAttribute:xT,Float32BufferAttribute:Jt,FloatType:ui,Fog:Mf,FogExp2:Sf,FramebufferTexture:VT,FrontSide:js,Frustum:Yo,FrustumArray:Tf,GLBufferAttribute:iw,GLSL1:R1,GLSL3:Pm,GreaterCompare:$x,GreaterDepth:Mh,GreaterEqualCompare:eS,GreaterEqualDepth:Sh,GreaterEqualStencilFunc:x1,GreaterStencilFunc:_1,GridHelper:hw,Group:Co,HalfFloatType:qo,HemisphereLight:kS,HemisphereLightHelper:uw,IcosahedronGeometry:Pf,ImageBitmapLoader:LA,ImageLoader:pc,ImageUtils:rS,IncrementStencilOp:c1,IncrementWrapStencilOp:h1,InstancedBufferAttribute:Vo,InstancedBufferGeometry:Ng,InstancedInterleavedBuffer:nf,InstancedMesh:mS,Int16BufferAttribute:_T,Int32BufferAttribute:yT,Int8BufferAttribute:mT,IntType:hf,InterleavedBuffer:bf,InterleavedBufferAttribute:Ei,Interpolant:bc,InterpolateDiscrete:nc,InterpolateLinear:Kh,InterpolateSmooth:ch,InterpolationSamplingMode:P1,InterpolationSamplingType:U1,InvertStencilOp:d1,KeepStencilOp:dr,KeyframeTrack:Gi,LOD:dS,LatheGeometry:Nf,Layers:Fo,LessCompare:Jx,LessDepth:yh,LessEqualCompare:og,LessEqualDepth:br,LessEqualStencilFunc:v1,LessStencilFunc:m1,Light:Na,LightProbe:KS,Line:Ca,Line3:iM,LineBasicMaterial:ii,LineCurve:xg,LineCurve3:bS,LineDashedMaterial:zS,LineLoop:vS,LineSegments:Ms,LinearFilter:vn,LinearInterpolant:Rg,LinearMipMapLinearFilter:t1,LinearMipMapNearestFilter:$E,LinearMipmapLinearFilter:ms,LinearMipmapNearestFilter:Gl,LinearSRGBColorSpace:wa,LinearToneMapping:zx,LinearTransfer:sc,Loader:hi,LoaderUtils:zm,LoadingManager:Ug,LoopOnce:Wx,LoopPingPong:qx,LoopRepeat:Xx,MOUSE:Bi,Material:Yn,MaterialLoader:Vf,MathUtils:iS,Matrix2:Fg,Matrix3:_e,Matrix4:he,MaxEquation:Sx,Mesh:hn,MeshBasicMaterial:Ua,MeshDepthMaterial:Ag,MeshDistanceMaterial:wg,MeshLambertMaterial:IS,MeshMatcapMaterial:OS,MeshNormalMaterial:LS,MeshPhongMaterial:PS,MeshPhysicalMaterial:US,MeshStandardMaterial:Tg,MeshToonMaterial:NS,MinEquation:xx,MirroredRepeatWrapping:ec,MixOperation:Ix,MultiplyBlending:Rm,MultiplyOperation:gc,NearestFilter:Ln,NearestMipMapLinearFilter:QE,NearestMipMapNearestFilter:JE,NearestMipmapLinearFilter:Ao,NearestMipmapNearestFilter:Qm,NeutralToneMapping:Gx,NeverCompare:Kx,NeverDepth:vh,NeverStencilFunc:p1,NoBlending:qs,NoColorSpace:Ws,NoToneMapping:vs,NormalAnimationBlendMode:vf,NormalBlending:Ta,NotEqualCompare:tS,NotEqualDepth:bh,NotEqualStencilFunc:y1,NumberKeyframeTrack:hc,Object3D:Le,ObjectLoader:PA,ObjectSpaceNormalMap:Zx,OctahedronGeometry:Sc,OneFactor:bx,OneMinusConstantAlphaFactor:Lx,OneMinusConstantColorFactor:Px,OneMinusDstAlphaFactor:wx,OneMinusDstColorFactor:Rx,OneMinusSrcAlphaFactor:gh,OneMinusSrcColorFactor:Tx,OrthographicCamera:ys,PCFShadowMap:cf,PCFSoftShadowMap:Vl,PMREMGenerator:Hm,Path:ef,PerspectiveCamera:sn,Plane:Gs,PlaneGeometry:jo,PlaneHelper:vw,PointLight:XS,PointLightHelper:lw,Points:_S,PointsMaterial:mg,PolarGridHelper:fw,PolyhedronGeometry:Pa,PositionalAudio:HA,PropertyBinding:Ne,PropertyMixer:tM,QuadraticBezierCurve:Sg,QuadraticBezierCurve3:Mg,Quaternion:qn,QuaternionKeyframeTrack:Ec,QuaternionLinearInterpolant:GS,RED_GREEN_RGTC2_Format:jh,RED_RGTC1_Format:ag,REVISION:Wo,RGBADepthPacking:jx,RGBAFormat:Xn,RGBAIntegerFormat:gf,RGBA_ASTC_10x10_Format:Gh,RGBA_ASTC_10x5_Format:Fh,RGBA_ASTC_10x6_Format:Hh,RGBA_ASTC_10x8_Format:Vh,RGBA_ASTC_12x10_Format:kh,RGBA_ASTC_12x12_Format:Wh,RGBA_ASTC_4x4_Format:Uh,RGBA_ASTC_5x4_Format:Ph,RGBA_ASTC_5x5_Format:Nh,RGBA_ASTC_6x5_Format:Lh,RGBA_ASTC_6x6_Format:Ih,RGBA_ASTC_8x5_Format:Oh,RGBA_ASTC_8x6_Format:zh,RGBA_ASTC_8x8_Format:Bh,RGBA_BPTC_Format:Yl,RGBA_ETC2_EAC_Format:Dh,RGBA_PVRTC_2BPPV1_Format:wh,RGBA_PVRTC_4BPPV1_Format:Ah,RGBA_S3TC_DXT1_Format:Wl,RGBA_S3TC_DXT3_Format:Xl,RGBA_S3TC_DXT5_Format:ql,RGBDepthPacking:a1,RGBFormat:ig,RGBIntegerFormat:e1,RGB_BPTC_SIGNED_Format:Xh,RGB_BPTC_UNSIGNED_Format:qh,RGB_ETC1_Format:Ch,RGB_ETC2_Format:Rh,RGB_PVRTC_2BPPV1_Format:Th,RGB_PVRTC_4BPPV1_Format:Eh,RGB_S3TC_DXT1_Format:kl,RGDepthPacking:r1,RGFormat:sg,RGIntegerFormat:mf,RawShaderMaterial:DS,Ray:Ar,Raycaster:nM,RectAreaLight:jS,RedFormat:pf,RedIntegerFormat:vc,ReinhardToneMapping:Bx,RenderTarget:cg,RenderTarget3D:tw,RepeatWrapping:tc,ReplaceStencilOp:l1,ReverseSubtractEquation:yx,RingGeometry:Lf,SIGNED_RED_GREEN_RGTC2_Format:Zh,SIGNED_RED_RGTC1_Format:Yh,SRGBColorSpace:Wn,SRGBTransfer:ke,Scene:fg,ShaderChunk:Me,ShaderLib:$i,ShaderMaterial:wi,ShadowMaterial:RS,Shape:Sr,ShapeGeometry:If,ShapePath:xw,ShapeUtils:es,ShortType:tg,Skeleton:Ef,SkeletonHelper:ow,SkinnedMesh:pS,Source:Ea,Sphere:yn,SphereGeometry:Mc,Spherical:sf,SphericalHarmonics3:ZS,SplineCurve:bg,SpotLight:WS,SpotLightHelper:rw,Sprite:fS,SpriteMaterial:dg,SrcAlphaFactor:mh,SrcAlphaSaturateFactor:Dx,SrcColorFactor:Ex,StaticCopyUsage:A1,StaticDrawUsage:ac,StaticReadUsage:b1,StereoCamera:OA,StreamCopyUsage:C1,StreamDrawUsage:M1,StreamReadUsage:T1,StringKeyframeTrack:Rr,SubtractEquation:_x,SubtractiveBlending:Cm,TOUCH:Vs,TangentSpaceNormalMap:Da,TetrahedronGeometry:Of,Texture:en,TextureLoader:Hf,TextureUtils:Aw,TimestampQuery:D1,TorusGeometry:zf,TorusKnotGeometry:Bf,Triangle:ci,TriangleFanDrawMode:s1,TriangleStripDrawMode:i1,TrianglesDrawMode:n1,TubeGeometry:Ff,UVMapping:uf,Uint16BufferAttribute:ug,Uint32BufferAttribute:hg,Uint8BufferAttribute:gT,Uint8ClampedBufferAttribute:vT,Uniform:Bg,UniformsGroup:nw,UniformsLib:It,UniformsUtils:Jh,UnsignedByteType:Vi,UnsignedInt248Type:Io,UnsignedInt5999Type:eg,UnsignedIntType:Ks,UnsignedShort4444Type:ff,UnsignedShort5551Type:df,UnsignedShortType:Lo,VSMShadowMap:Qi,Vector2:ft,Vector3:L,Vector4:Ae,VectorKeyframeTrack:fc,VideoFrameTexture:HT,VideoTexture:yS,WebGL3DRenderTarget:iT,WebGLArrayRenderTarget:nT,WebGLCoordinateSystem:Hi,WebGLCubeRenderTarget:uS,WebGLRenderTarget:xs,WebGLRenderer:hM,WebGLUtils:uM,WebGPUCoordinateSystem:rc,WebXRController:uh,WireframeGeometry:Eg,WrapAroundEnding:ic,ZeroCurvatureEnding:gr,ZeroFactor:Mx,ZeroSlopeEnding:vr,ZeroStencilOp:o1,createCanvasElement:aS},Symbol.toStringTag,{value:"Module"}));var im={exports:{}},Hs={};/**
 * @license React
 * react-reconciler-constants.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Py;function lD(){return Py||(Py=1,Hs.ConcurrentRoot=1,Hs.ContinuousEventPriority=8,Hs.DefaultEventPriority=32,Hs.DiscreteEventPriority=2,Hs.IdleEventPriority=268435456,Hs.LegacyRoot=0,Hs.NoEventPriority=0),Hs}var Ny;function cD(){return Ny||(Ny=1,im.exports=lD()),im.exports}var fh=cD(),sm={exports:{}},am={},rm={exports:{}},om={};/**
 * @license React
 * use-sync-external-store-shim.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Ly;function uD(){if(Ly)return om;Ly=1;var s=Zm();function t(m,g){return m===g&&(m!==0||1/m===1/g)||m!==m&&g!==g}var e=typeof Object.is=="function"?Object.is:t,n=s.useState,i=s.useEffect,r=s.useLayoutEffect,l=s.useDebugValue;function c(m,g){var v=g(),x=n({inst:{value:v,getSnapshot:g}}),M=x[0].inst,S=x[1];return r(function(){M.value=v,M.getSnapshot=g,h(M)&&S({inst:M})},[m,v,g]),i(function(){return h(M)&&S({inst:M}),m(function(){h(M)&&S({inst:M})})},[m]),l(v),v}function h(m){var g=m.getSnapshot;m=m.value;try{var v=g();return!e(m,v)}catch{return!0}}function f(m,g){return g()}var p=typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"?f:c;return om.useSyncExternalStore=s.useSyncExternalStore!==void 0?s.useSyncExternalStore:p,om}var Iy;function hD(){return Iy||(Iy=1,rm.exports=uD()),rm.exports}/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Oy;function fD(){if(Oy)return am;Oy=1;var s=Zm(),t=hD();function e(f,p){return f===p&&(f!==0||1/f===1/p)||f!==f&&p!==p}var n=typeof Object.is=="function"?Object.is:e,i=t.useSyncExternalStore,r=s.useRef,l=s.useEffect,c=s.useMemo,h=s.useDebugValue;return am.useSyncExternalStoreWithSelector=function(f,p,m,g,v){var x=r(null);if(x.current===null){var M={hasValue:!1,value:null};x.current=M}else M=x.current;x=c(function(){function _(D){if(!E){if(E=!0,T=D,D=g(D),v!==void 0&&M.hasValue){var I=M.value;if(v(I,D))return A=I}return A=D}if(I=A,n(T,D))return I;var z=g(D);return v!==void 0&&v(I,z)?(T=D,I):(T=D,A=z)}var E=!1,T,A,N=m===void 0?null:m;return[function(){return _(p())},N===null?void 0:function(){return _(N())}]},[p,m,g,v]);var S=i(f,x[0],x[1]);return l(function(){M.hasValue=!0,M.value=S},[S]),h(S),S},am}var zy;function dD(){return zy||(zy=1,sm.exports=fD()),sm.exports}var pD=dD();const mD=dx(pD),By=s=>{let t;const e=new Set,n=(f,p)=>{const m=typeof f=="function"?f(t):f;if(!Object.is(m,t)){const g=t;t=p??(typeof m!="object"||m===null)?m:Object.assign({},t,m),e.forEach(v=>v(t,g))}},i=()=>t,c={setState:n,getState:i,getInitialState:()=>h,subscribe:f=>(e.add(f),()=>e.delete(f))},h=t=s(n,i,c);return c},fM=s=>s?By(s):By,{useSyncExternalStoreWithSelector:gD}=mD,vD=s=>s;function _D(s,t=vD,e){const n=gD(s.subscribe,s.getState,s.getInitialState,t,e);return Am.useDebugValue(n),n}const Fy=(s,t)=>{const e=fM(s),n=(i,r=t)=>_D(e,i,r);return Object.assign(n,e),n},yD=(s,t)=>s?Fy(s,t):Fy;var lm={exports:{}},cm={exports:{}},um={exports:{}},hm={};/**
 * @license React
 * scheduler.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Hy;function xD(){return Hy||(Hy=1,function(s){function t(F,X){var G=F.length;F.push(X);t:for(;0<G;){var st=G-1>>>1,ct=F[st];if(0<i(ct,X))F[st]=X,F[G]=ct,G=st;else break t}}function e(F){return F.length===0?null:F[0]}function n(F){if(F.length===0)return null;var X=F[0],G=F.pop();if(G!==X){F[0]=G;t:for(var st=0,ct=F.length,_t=ct>>>1;st<_t;){var Dt=2*(st+1)-1,Xt=F[Dt],tt=Dt+1,yt=F[tt];if(0>i(Xt,G))tt<ct&&0>i(yt,Xt)?(F[st]=yt,F[tt]=G,st=tt):(F[st]=Xt,F[Dt]=G,st=Dt);else if(tt<ct&&0>i(yt,G))F[st]=yt,F[tt]=G,st=tt;else break t}}return X}function i(F,X){var G=F.sortIndex-X.sortIndex;return G!==0?G:F.id-X.id}if(s.unstable_now=void 0,typeof performance=="object"&&typeof performance.now=="function"){var r=performance;s.unstable_now=function(){return r.now()}}else{var l=Date,c=l.now();s.unstable_now=function(){return l.now()-c}}var h=[],f=[],p=1,m=null,g=3,v=!1,x=!1,M=!1,S=typeof setTimeout=="function"?setTimeout:null,_=typeof clearTimeout=="function"?clearTimeout:null,E=typeof setImmediate<"u"?setImmediate:null;function T(F){for(var X=e(f);X!==null;){if(X.callback===null)n(f);else if(X.startTime<=F)n(f),X.sortIndex=X.expirationTime,t(h,X);else break;X=e(f)}}function A(F){if(M=!1,T(F),!x)if(e(h)!==null)x=!0,J();else{var X=e(f);X!==null&&nt(A,X.startTime-F)}}var N=!1,D=-1,I=5,z=-1;function C(){return!(s.unstable_now()-z<I)}function w(){if(N){var F=s.unstable_now();z=F;var X=!0;try{t:{x=!1,M&&(M=!1,_(D),D=-1),v=!0;var G=g;try{e:{for(T(F),m=e(h);m!==null&&!(m.expirationTime>F&&C());){var st=m.callback;if(typeof st=="function"){m.callback=null,g=m.priorityLevel;var ct=st(m.expirationTime<=F);if(F=s.unstable_now(),typeof ct=="function"){m.callback=ct,T(F),X=!0;break e}m===e(h)&&n(h),T(F)}else n(h);m=e(h)}if(m!==null)X=!0;else{var _t=e(f);_t!==null&&nt(A,_t.startTime-F),X=!1}}break t}finally{m=null,g=G,v=!1}X=void 0}}finally{X?B():N=!1}}}var B;if(typeof E=="function")B=function(){E(w)};else if(typeof MessageChannel<"u"){var $=new MessageChannel,q=$.port2;$.port1.onmessage=w,B=function(){q.postMessage(null)}}else B=function(){S(w,0)};function J(){N||(N=!0,B())}function nt(F,X){D=S(function(){F(s.unstable_now())},X)}s.unstable_IdlePriority=5,s.unstable_ImmediatePriority=1,s.unstable_LowPriority=4,s.unstable_NormalPriority=3,s.unstable_Profiling=null,s.unstable_UserBlockingPriority=2,s.unstable_cancelCallback=function(F){F.callback=null},s.unstable_continueExecution=function(){x||v||(x=!0,J())},s.unstable_forceFrameRate=function(F){0>F||125<F?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):I=0<F?Math.floor(1e3/F):5},s.unstable_getCurrentPriorityLevel=function(){return g},s.unstable_getFirstCallbackNode=function(){return e(h)},s.unstable_next=function(F){switch(g){case 1:case 2:case 3:var X=3;break;default:X=g}var G=g;g=X;try{return F()}finally{g=G}},s.unstable_pauseExecution=function(){},s.unstable_requestPaint=function(){},s.unstable_runWithPriority=function(F,X){switch(F){case 1:case 2:case 3:case 4:case 5:break;default:F=3}var G=g;g=F;try{return X()}finally{g=G}},s.unstable_scheduleCallback=function(F,X,G){var st=s.unstable_now();switch(typeof G=="object"&&G!==null?(G=G.delay,G=typeof G=="number"&&0<G?st+G:st):G=st,F){case 1:var ct=-1;break;case 2:ct=250;break;case 5:ct=1073741823;break;case 4:ct=1e4;break;default:ct=5e3}return ct=G+ct,F={id:p++,callback:X,priorityLevel:F,startTime:G,expirationTime:ct,sortIndex:-1},G>st?(F.sortIndex=G,t(f,F),e(h)===null&&F===e(f)&&(M?(_(D),D=-1):M=!0,nt(A,G-st))):(F.sortIndex=ct,t(h,F),x||v||(x=!0,J())),F},s.unstable_shouldYield=C,s.unstable_wrapCallback=function(F){var X=g;return function(){var G=g;g=X;try{return F.apply(this,arguments)}finally{g=G}}}}(hm)),hm}var Vy;function SD(){return Vy||(Vy=1,um.exports=xD()),um.exports}/**
 * @license React
 * react-reconciler.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Gy;function MD(){return Gy||(Gy=1,function(s){s.exports=function(t){function e(a,o,u,d){return new sb(a,o,u,d)}function n(){}function i(a){var o="https://react.dev/errors/"+a;if(1<arguments.length){o+="?args[]="+encodeURIComponent(arguments[1]);for(var u=2;u<arguments.length;u++)o+="&args[]="+encodeURIComponent(arguments[u])}return"Minified React error #"+a+"; visit "+o+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function r(a){return a===null||typeof a!="object"?null:(a=xv&&a[xv]||a["@@iterator"],typeof a=="function"?a:null)}function l(a){if(a==null)return null;if(typeof a=="function")return a.$$typeof===ub?null:a.displayName||a.name||null;if(typeof a=="string")return a;switch(a){case Br:return"Fragment";case zr:return"Portal";case Ld:return"Profiler";case vv:return"StrictMode";case Od:return"Suspense";case zd:return"SuspenseList"}if(typeof a=="object")switch(a.$$typeof){case aa:return(a.displayName||"Context")+".Provider";case _v:return(a._context.displayName||"Context")+".Consumer";case Id:var o=a.render;return a=a.displayName,a||(a=o.displayName||o.name||"",a=a!==""?"ForwardRef("+a+")":"ForwardRef"),a;case Bd:return o=a.displayName||null,o!==null?o:l(a.type)||"Memo";case ra:o=a._payload,a=a._init;try{return l(a(o))}catch{}}return null}function c(a){if(Fd===void 0)try{throw Error()}catch(u){var o=u.stack.trim().match(/\n( *(at )?)/);Fd=o&&o[1]||"",Sv=-1<u.stack.indexOf(`
    at`)?" (<anonymous>)":-1<u.stack.indexOf("@")?"@unknown:0:0":""}return`
`+Fd+a+Sv}function h(a,o){if(!a||Hd)return"";Hd=!0;var u=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{var d={DetermineComponentFrameRoot:function(){try{if(o){var Wt=function(){throw Error()};if(Object.defineProperty(Wt.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(Wt,[])}catch(ye){var jt=ye}Reflect.construct(a,[],Wt)}else{try{Wt.call()}catch(ye){jt=ye}a.call(Wt.prototype)}}else{try{throw Error()}catch(ye){jt=ye}(Wt=a())&&typeof Wt.catch=="function"&&Wt.catch(function(){})}}catch(ye){if(ye&&jt&&typeof ye.stack=="string")return[ye.stack,jt.stack]}return[null,null]}};d.DetermineComponentFrameRoot.displayName="DetermineComponentFrameRoot";var y=Object.getOwnPropertyDescriptor(d.DetermineComponentFrameRoot,"name");y&&y.configurable&&Object.defineProperty(d.DetermineComponentFrameRoot,"name",{value:"DetermineComponentFrameRoot"});var b=d.DetermineComponentFrameRoot(),P=b[0],W=b[1];if(P&&W){var K=P.split(`
`),mt=W.split(`
`);for(y=d=0;d<K.length&&!K[d].includes("DetermineComponentFrameRoot");)d++;for(;y<mt.length&&!mt[y].includes("DetermineComponentFrameRoot");)y++;if(d===K.length||y===mt.length)for(d=K.length-1,y=mt.length-1;1<=d&&0<=y&&K[d]!==mt[y];)y--;for(;1<=d&&0<=y;d--,y--)if(K[d]!==mt[y]){if(d!==1||y!==1)do if(d--,y--,0>y||K[d]!==mt[y]){var Ut=`
`+K[d].replace(" at new "," at ");return a.displayName&&Ut.includes("<anonymous>")&&(Ut=Ut.replace("<anonymous>",a.displayName)),Ut}while(1<=d&&0<=y);break}}}finally{Hd=!1,Error.prepareStackTrace=u}return(u=a?a.displayName||a.name:"")?c(u):""}function f(a){switch(a.tag){case 26:case 27:case 5:return c(a.type);case 16:return c("Lazy");case 13:return c("Suspense");case 19:return c("SuspenseList");case 0:case 15:return a=h(a.type,!1),a;case 11:return a=h(a.type.render,!1),a;case 1:return a=h(a.type,!0),a;default:return""}}function p(a){try{var o="";do o+=f(a),a=a.return;while(a);return o}catch(u){return`
Error generating stack: `+u.message+`
`+u.stack}}function m(a){var o=a,u=a;if(a.alternate)for(;o.return;)o=o.return;else{a=o;do o=a,(o.flags&4098)!==0&&(u=o.return),a=o.return;while(a)}return o.tag===3?u:null}function g(a){if(m(a)!==a)throw Error(i(188))}function v(a){var o=a.alternate;if(!o){if(o=m(a),o===null)throw Error(i(188));return o!==a?null:a}for(var u=a,d=o;;){var y=u.return;if(y===null)break;var b=y.alternate;if(b===null){if(d=y.return,d!==null){u=d;continue}break}if(y.child===b.child){for(b=y.child;b;){if(b===u)return g(y),a;if(b===d)return g(y),o;b=b.sibling}throw Error(i(188))}if(u.return!==d.return)u=y,d=b;else{for(var P=!1,W=y.child;W;){if(W===u){P=!0,u=y,d=b;break}if(W===d){P=!0,d=y,u=b;break}W=W.sibling}if(!P){for(W=b.child;W;){if(W===u){P=!0,u=b,d=y;break}if(W===d){P=!0,d=b,u=y;break}W=W.sibling}if(!P)throw Error(i(189))}}if(u.alternate!==d)throw Error(i(190))}if(u.tag!==3)throw Error(i(188));return u.stateNode.current===u?a:o}function x(a){var o=a.tag;if(o===5||o===26||o===27||o===6)return a;for(a=a.child;a!==null;){if(o=x(a),o!==null)return o;a=a.sibling}return null}function M(a){var o=a.tag;if(o===5||o===26||o===27||o===6)return a;for(a=a.child;a!==null;){if(a.tag!==4&&(o=M(a),o!==null))return o;a=a.sibling}return null}function S(a){return{current:a}}function _(a){0>Hr||(a.current=qd[Hr],qd[Hr]=null,Hr--)}function E(a,o){Hr++,qd[Hr]=a.current,a.current=o}function T(a){return a>>>=0,a===0?32:31-(TE(a)/AE|0)|0}function A(a){var o=a&42;if(o!==0)return o;switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:return 64;case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194176;case 4194304:case 8388608:case 16777216:case 33554432:return a&62914560;case 67108864:return 67108864;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 0;default:return a}}function N(a,o){var u=a.pendingLanes;if(u===0)return 0;var d=0,y=a.suspendedLanes,b=a.pingedLanes,P=a.warmLanes;a=a.finishedLanes!==0;var W=u&134217727;return W!==0?(u=W&~y,u!==0?d=A(u):(b&=W,b!==0?d=A(b):a||(P=W&~P,P!==0&&(d=A(P))))):(W=u&~y,W!==0?d=A(W):b!==0?d=A(b):a||(P=u&~P,P!==0&&(d=A(P)))),d===0?0:o!==0&&o!==d&&(o&y)===0&&(y=d&-d,P=o&-o,y>=P||y===32&&(P&4194176)!==0)?o:d}function D(a,o){return(a.pendingLanes&~(a.suspendedLanes&~a.pingedLanes)&o)===0}function I(a,o){switch(a){case 1:case 2:case 4:case 8:return o+250;case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return o+5e3;case 4194304:case 8388608:case 16777216:case 33554432:return-1;case 67108864:case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function z(){var a=qc;return qc<<=1,(qc&4194176)===0&&(qc=128),a}function C(){var a=Yc;return Yc<<=1,(Yc&62914560)===0&&(Yc=4194304),a}function w(a){for(var o=[],u=0;31>u;u++)o.push(a);return o}function B(a,o){a.pendingLanes|=o,o!==268435456&&(a.suspendedLanes=0,a.pingedLanes=0,a.warmLanes=0)}function $(a,o,u,d,y,b){var P=a.pendingLanes;a.pendingLanes=u,a.suspendedLanes=0,a.pingedLanes=0,a.warmLanes=0,a.expiredLanes&=u,a.entangledLanes&=u,a.errorRecoveryDisabledLanes&=u,a.shellSuspendCounter=0;var W=a.entanglements,K=a.expirationTimes,mt=a.hiddenUpdates;for(u=P&~u;0<u;){var Ut=31-vi(u),Wt=1<<Ut;W[Ut]=0,K[Ut]=-1;var jt=mt[Ut];if(jt!==null)for(mt[Ut]=null,Ut=0;Ut<jt.length;Ut++){var ye=jt[Ut];ye!==null&&(ye.lane&=-536870913)}u&=~Wt}d!==0&&q(a,d,0),b!==0&&y===0&&a.tag!==0&&(a.suspendedLanes|=b&~(P&~o))}function q(a,o,u){a.pendingLanes|=o,a.suspendedLanes&=~o;var d=31-vi(o);a.entangledLanes|=o,a.entanglements[d]=a.entanglements[d]|1073741824|u&4194218}function J(a,o){var u=a.entangledLanes|=o;for(a=a.entanglements;u;){var d=31-vi(u),y=1<<d;y&o|a[d]&o&&(a[d]|=o),u&=~y}}function nt(a){return a&=-a,2<a?8<a?(a&134217727)!==0?32:268435456:8:2}function F(a){if(_i&&typeof _i.onCommitFiberRoot=="function")try{_i.onCommitFiberRoot(dl,a,void 0,(a.current.flags&128)===128)}catch{}}function X(a){if(typeof UE=="function"&&PE(a),_i&&typeof _i.setStrictMode=="function")try{_i.setStrictMode(dl,a)}catch{}}function G(a,o){return a===o&&(a!==0||1/a===1/o)||a!==a&&o!==o}function st(a,o){if(typeof a=="object"&&a!==null){var u=Yv.get(a);return u!==void 0?u:(o={value:a,source:o,stack:p(o)},Yv.set(a,o),o)}return{value:a,source:o,stack:p(o)}}function ct(a,o){Gr[kr++]=Kc,Gr[kr++]=Zc,Zc=a,Kc=o}function _t(a,o,u){Ui[Pi++]=Cs,Ui[Pi++]=Rs,Ui[Pi++]=ka,ka=a;var d=Cs;a=Rs;var y=32-vi(d)-1;d&=~(1<<y),u+=1;var b=32-vi(o)+y;if(30<b){var P=y-y%5;b=(d&(1<<P)-1).toString(32),d>>=P,y-=P,Cs=1<<32-vi(o)+y|u<<y|d,Rs=b+a}else Cs=1<<b|u<<y|d,Rs=a}function Dt(a){a.return!==null&&(ct(a,1),_t(a,1,0))}function Xt(a){for(;a===Zc;)Zc=Gr[--kr],Gr[kr]=null,Kc=Gr[--kr],Gr[kr]=null;for(;a===ka;)ka=Ui[--Pi],Ui[Pi]=null,Rs=Ui[--Pi],Ui[Pi]=null,Cs=Ui[--Pi],Ui[Pi]=null}function tt(a,o){E(la,o),E(pl,a),E(Dn,null),a=db(o),_(Dn),E(Dn,a)}function yt(){_(Dn),_(pl),_(la)}function Yt(a){a.memoizedState!==null&&E(Jc,a);var o=Dn.current,u=pb(o,a.type);o!==u&&(E(pl,a),E(Dn,u))}function Nt(a){pl.current===a&&(_(Dn),_(pl)),Jc.current===a&&(_(Jc),ws?Ga._currentValue=Fr:Ga._currentValue2=Fr)}function Vt(a){var o=Error(i(418,""));throw ee(st(o,a)),Zd}function fe(a,o){if(!Ri)throw Error(i(175));oE(a.stateNode,a.type,a.memoizedProps,o,a)||Vt(a)}function qt(a){for(Jn=a.return;Jn;)switch(Jn.tag){case 3:case 27:rs=!0;return;case 5:case 13:rs=!1;return;default:Jn=Jn.return}}function ne(a){if(!Ri||a!==Jn)return!1;if(!Ie)return qt(a),Ie=!0,!1;var o=!1;if(Fn?a.tag!==3&&a.tag!==27&&(a.tag!==5||Ov(a.type)&&!Xc(a.type,a.memoizedProps))&&(o=!0):a.tag!==3&&(a.tag!==5||Ov(a.type)&&!Xc(a.type,a.memoizedProps))&&(o=!0),o&&Hn&&Vt(a),qt(a),a.tag===13){if(!Ri)throw Error(i(316));if(a=a.memoizedState,a=a!==null?a.dehydrated:null,!a)throw Error(i(317));Hn=uE(a)}else Hn=Jn?Lv(a.stateNode):null;return!0}function ce(){Ri&&(Hn=Jn=null,Ie=!1)}function ee(a){Yi===null?Yi=[a]:Yi.push(a)}function O(){for(var a=Wr,o=Kd=Wr=0;o<a;){var u=Ni[o];Ni[o++]=null;var d=Ni[o];Ni[o++]=null;var y=Ni[o];Ni[o++]=null;var b=Ni[o];if(Ni[o++]=null,d!==null&&y!==null){var P=d.pending;P===null?y.next=y:(y.next=P.next,P.next=y),d.pending=y}b!==0&&ht(u,y,b)}}function Ct(a,o,u,d){Ni[Wr++]=a,Ni[Wr++]=o,Ni[Wr++]=u,Ni[Wr++]=d,Kd|=d,a.lanes|=d,a=a.alternate,a!==null&&(a.lanes|=d)}function Mt(a,o,u,d){return Ct(a,o,u,d),Ot(a)}function bt(a,o){return Ct(a,null,null,o),Ot(a)}function ht(a,o,u){a.lanes|=u;var d=a.alternate;d!==null&&(d.lanes|=u);for(var y=!1,b=a.return;b!==null;)b.childLanes|=u,d=b.alternate,d!==null&&(d.childLanes|=u),b.tag===22&&(a=b.stateNode,a===null||a._visibility&1||(y=!0)),a=b,b=b.return;y&&o!==null&&a.tag===3&&(b=a.stateNode,y=31-vi(u),b=b.hiddenUpdates,a=b[y],a===null?b[y]=[o]:a.push(o),o.lane=u|536870912)}function Ot(a){if(50<bl)throw bl=0,fp=null,Error(i(185));for(var o=a.return;o!==null;)a=o,o=a.return;return a.tag===3?a.stateNode:null}function St(a){a!==Xr&&a.next===null&&(Xr===null?Qc=Xr=a:Xr=Xr.next=a),$c=!0,Jd||(Jd=!0,lt(ue))}function Ft(a,o){if(!Qd&&$c){Qd=!0;do for(var u=!1,d=Qc;d!==null;){if(a!==0){var y=d.pendingLanes;if(y===0)var b=0;else{var P=d.suspendedLanes,W=d.pingedLanes;b=(1<<31-vi(42|a)+1)-1,b&=y&~(P&~W),b=b&201326677?b&201326677|1:b?b|2:0}b!==0&&(u=!0,Q(d,b))}else b=Pe,b=N(d,d===Ke?b:0),(b&3)===0||D(d,b)||(u=!0,Q(d,b));d=d.next}while(u);Qd=!1}}function ue(){$c=Jd=!1;var a=0;qr!==0&&(Mb()&&(a=qr),qr=0);for(var o=qi(),u=null,d=Qc;d!==null;){var y=d.next,b=H(d,o);b===0?(d.next=null,u===null?Qc=y:u.next=y,y===null&&(Xr=u)):(u=d,(a!==0||(b&3)!==0)&&($c=!0)),d=y}Ft(a)}function H(a,o){for(var u=a.suspendedLanes,d=a.pingedLanes,y=a.expirationTimes,b=a.pendingLanes&-62914561;0<b;){var P=31-vi(b),W=1<<P,K=y[P];K===-1?((W&u)===0||(W&d)!==0)&&(y[P]=I(W,o)):K<=o&&(a.expiredLanes|=W),b&=~W}if(o=Ke,u=Pe,u=N(a,a===o?u:0),d=a.callbackNode,u===0||a===o&&Je===2||a.cancelPendingCommit!==null)return d!==null&&d!==null&&Yd(d),a.callbackNode=null,a.callbackPriority=0;if((u&3)===0||D(a,u)){if(o=u&-u,o===a.callbackPriority)return o;switch(d!==null&&Yd(d),nt(u)){case 2:case 8:u=RE;break;case 32:u=jd;break;case 268435456:u=DE;break;default:u=jd}return d=R.bind(null,a),u=jc(u,d),a.callbackPriority=o,a.callbackNode=u,o}return d!==null&&d!==null&&Yd(d),a.callbackPriority=2,a.callbackNode=null,2}function R(a,o){var u=a.callbackNode;if(Fa()&&a.callbackNode!==u)return null;var d=Pe;return d=N(a,a===Ke?d:0),d===0?null:(K0(a,d,o),H(a,qi()),a.callbackNode!=null&&a.callbackNode===u?R.bind(null,a):null)}function Q(a,o){if(Fa())return null;K0(a,o,!0)}function lt(a){Cb?Rb(function(){(Xe&6)!==0?jc(qv,a):a()}):jc(qv,a)}function pt(){return qr===0&&(qr=z()),qr}function ut(a,o){if(ml===null){var u=ml=[];$d=0,Yr=pt(),jr={status:"pending",value:void 0,then:function(d){u.push(d)}}}return $d++,o.then(te,te),o}function te(){if(--$d===0&&ml!==null){jr!==null&&(jr.status="fulfilled");var a=ml;ml=null,Yr=0,jr=null;for(var o=0;o<a.length;o++)(0,a[o])()}}function Lt(a,o){var u=[],d={status:"pending",value:null,reason:null,then:function(y){u.push(y)}};return a.then(function(){d.status="fulfilled",d.value=o;for(var y=0;y<u.length;y++)(0,u[y])(o)},function(y){for(d.status="rejected",d.reason=y,y=0;y<u.length;y++)(0,u[y])(void 0)}),d}function Kt(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,lanes:0,hiddenCallbacks:null},callbacks:null}}function Qt(a,o){a=a.updateQueue,o.updateQueue===a&&(o.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,callbacks:null})}function vt(a){return{lane:a,tag:0,payload:null,callback:null,next:null}}function zt(a,o,u){var d=a.updateQueue;if(d===null)return null;if(d=d.shared,(Xe&2)!==0){var y=d.pending;return y===null?o.next=o:(o.next=y.next,y.next=o),d.pending=o,o=Ot(a),ht(a,null,u),o}return Ct(a,d,o,u),Ot(a)}function ie(a,o,u){if(o=o.updateQueue,o!==null&&(o=o.shared,(u&4194176)!==0)){var d=o.lanes;d&=a.pendingLanes,u|=d,o.lanes=u,J(a,u)}}function k(a,o){var u=a.updateQueue,d=a.alternate;if(d!==null&&(d=d.updateQueue,u===d)){var y=null,b=null;if(u=u.firstBaseUpdate,u!==null){do{var P={lane:u.lane,tag:u.tag,payload:u.payload,callback:null,next:null};b===null?y=b=P:b=b.next=P,u=u.next}while(u!==null);b===null?y=b=o:b=b.next=o}else y=b=o;u={baseState:d.baseState,firstBaseUpdate:y,lastBaseUpdate:b,shared:d.shared,callbacks:d.callbacks},a.updateQueue=u;return}a=u.lastBaseUpdate,a===null?u.firstBaseUpdate=o:a.next=o,u.lastBaseUpdate=o}function et(){if(tp){var a=jr;if(a!==null)throw a}}function Tt(a,o,u,d){tp=!1;var y=a.updateQueue;ca=!1;var b=y.firstBaseUpdate,P=y.lastBaseUpdate,W=y.shared.pending;if(W!==null){y.shared.pending=null;var K=W,mt=K.next;K.next=null,P===null?b=mt:P.next=mt,P=K;var Ut=a.alternate;Ut!==null&&(Ut=Ut.updateQueue,W=Ut.lastBaseUpdate,W!==P&&(W===null?Ut.firstBaseUpdate=mt:W.next=mt,Ut.lastBaseUpdate=K))}if(b!==null){var Wt=y.baseState;P=0,Ut=mt=K=null,W=b;do{var jt=W.lane&-536870913,ye=jt!==W.lane;if(ye?(Pe&jt)===jt:(d&jt)===jt){jt!==0&&jt===Yr&&(tp=!0),Ut!==null&&(Ut=Ut.next={lane:0,tag:W.tag,payload:W.payload,callback:null,next:null});t:{var Oi=a,El=W;jt=o;var Qa=u;switch(El.tag){case 1:if(Oi=El.payload,typeof Oi=="function"){Wt=Oi.call(Qa,Wt,jt);break t}Wt=Oi;break t;case 3:Oi.flags=Oi.flags&-65537|128;case 0:if(Oi=El.payload,jt=typeof Oi=="function"?Oi.call(Qa,Wt,jt):Oi,jt==null)break t;Wt=Nd({},Wt,jt);break t;case 2:ca=!0}}jt=W.callback,jt!==null&&(a.flags|=64,ye&&(a.flags|=8192),ye=y.callbacks,ye===null?y.callbacks=[jt]:ye.push(jt))}else ye={lane:jt,tag:W.tag,payload:W.payload,callback:W.callback,next:null},Ut===null?(mt=Ut=ye,K=Wt):Ut=Ut.next=ye,P|=jt;if(W=W.next,W===null){if(W=y.shared.pending,W===null)break;ye=W,W=ye.next,ye.next=null,y.lastBaseUpdate=ye,y.shared.pending=null}}while(!0);Ut===null&&(K=Wt),y.baseState=K,y.firstBaseUpdate=mt,y.lastBaseUpdate=Ut,b===null&&(y.shared.lanes=0),fa|=P,a.lanes=P,a.memoizedState=Wt}}function V(a,o){if(typeof a!="function")throw Error(i(191,a));a.call(o)}function wt(a,o){var u=a.callbacks;if(u!==null)for(a.callbacks=null,a=0;a<u.length;a++)V(u[a],o)}function xt(a,o){if(yi(a,o))return!0;if(typeof a!="object"||a===null||typeof o!="object"||o===null)return!1;var u=Object.keys(a),d=Object.keys(o);if(u.length!==d.length)return!1;for(d=0;d<u.length;d++){var y=u[d];if(!NE.call(o,y)||!yi(a[y],o[y]))return!1}return!0}function Ht(a){return a=a.status,a==="fulfilled"||a==="rejected"}function At(){}function gt(a,o,u){switch(u=a[u],u===void 0?a.push(o):u!==o&&(o.then(At,At),o=u),o.status){case"fulfilled":return o.value;case"rejected":throw a=o.reason,a===gl?Error(i(483)):a;default:if(typeof o.status=="string")o.then(At,At);else{if(a=Ke,a!==null&&100<a.shellSuspendCounter)throw Error(i(482));a=o,a.status="pending",a.then(function(d){if(o.status==="pending"){var y=o;y.status="fulfilled",y.value=d}},function(d){if(o.status==="pending"){var y=o;y.status="rejected",y.reason=d}})}switch(o.status){case"fulfilled":return o.value;case"rejected":throw a=o.reason,a===gl?Error(i(483)):a}throw Zr=o,gl}}function Gt(){if(Zr===null)throw Error(i(459));var a=Zr;return Zr=null,a}function se(a){var o=vl;return vl+=1,Kr===null&&(Kr=[]),gt(Kr,a,o)}function we(a,o){o=o.props.ref,a.ref=o!==void 0?o:null}function be(a,o){throw o.$$typeof===ob?Error(i(525)):(a=Object.prototype.toString.call(o),Error(i(31,a==="[object Object]"?"object with keys {"+Object.keys(o).join(", ")+"}":a)))}function fn(a){var o=a._init;return o(a._payload)}function An(a){function o(it,Z){if(a){var ot=it.deletions;ot===null?(it.deletions=[Z],it.flags|=16):ot.push(Z)}}function u(it,Z){if(!a)return null;for(;Z!==null;)o(it,Z),Z=Z.sibling;return null}function d(it){for(var Z=new Map;it!==null;)it.key!==null?Z.set(it.key,it):Z.set(it.index,it),it=it.sibling;return Z}function y(it,Z){return it=sa(it,Z),it.index=0,it.sibling=null,it}function b(it,Z,ot){return it.index=ot,a?(ot=it.alternate,ot!==null?(ot=ot.index,ot<Z?(it.flags|=33554434,Z):ot):(it.flags|=33554434,Z)):(it.flags|=1048576,Z)}function P(it){return a&&it.alternate===null&&(it.flags|=33554434),it}function W(it,Z,ot,Rt){return Z===null||Z.tag!==6?(Z=Dd(ot,it.mode,Rt),Z.return=it,Z):(Z=y(Z,ot),Z.return=it,Z)}function K(it,Z,ot,Rt){var re=ot.type;return re===Br?Ut(it,Z,ot.props.children,Rt,ot.key):Z!==null&&(Z.elementType===re||typeof re=="object"&&re!==null&&re.$$typeof===ra&&fn(re)===Z.type)?(Z=y(Z,ot.props),we(Z,ot),Z.return=it,Z):(Z=Gc(ot.type,ot.key,ot.props,null,it.mode,Rt),we(Z,ot),Z.return=it,Z)}function mt(it,Z,ot,Rt){return Z===null||Z.tag!==4||Z.stateNode.containerInfo!==ot.containerInfo||Z.stateNode.implementation!==ot.implementation?(Z=Ud(ot,it.mode,Rt),Z.return=it,Z):(Z=y(Z,ot.children||[]),Z.return=it,Z)}function Ut(it,Z,ot,Rt,re){return Z===null||Z.tag!==7?(Z=Ha(ot,it.mode,Rt,re),Z.return=it,Z):(Z=y(Z,ot),Z.return=it,Z)}function Wt(it,Z,ot){if(typeof Z=="string"&&Z!==""||typeof Z=="number"||typeof Z=="bigint")return Z=Dd(""+Z,it.mode,ot),Z.return=it,Z;if(typeof Z=="object"&&Z!==null){switch(Z.$$typeof){case kc:return ot=Gc(Z.type,Z.key,Z.props,null,it.mode,ot),we(ot,Z),ot.return=it,ot;case zr:return Z=Ud(Z,it.mode,ot),Z.return=it,Z;case ra:var Rt=Z._init;return Z=Rt(Z._payload),Wt(it,Z,ot)}if(Wc(Z)||r(Z))return Z=Ha(Z,it.mode,ot,null),Z.return=it,Z;if(typeof Z.then=="function")return Wt(it,se(Z),ot);if(Z.$$typeof===aa)return Wt(it,Oc(it,Z),ot);be(it,Z)}return null}function jt(it,Z,ot,Rt){var re=Z!==null?Z.key:null;if(typeof ot=="string"&&ot!==""||typeof ot=="number"||typeof ot=="bigint")return re!==null?null:W(it,Z,""+ot,Rt);if(typeof ot=="object"&&ot!==null){switch(ot.$$typeof){case kc:return ot.key===re?K(it,Z,ot,Rt):null;case zr:return ot.key===re?mt(it,Z,ot,Rt):null;case ra:return re=ot._init,ot=re(ot._payload),jt(it,Z,ot,Rt)}if(Wc(ot)||r(ot))return re!==null?null:Ut(it,Z,ot,Rt,null);if(typeof ot.then=="function")return jt(it,Z,se(ot),Rt);if(ot.$$typeof===aa)return jt(it,Z,Oc(it,ot),Rt);be(it,ot)}return null}function ye(it,Z,ot,Rt,re){if(typeof Rt=="string"&&Rt!==""||typeof Rt=="number"||typeof Rt=="bigint")return it=it.get(ot)||null,W(Z,it,""+Rt,re);if(typeof Rt=="object"&&Rt!==null){switch(Rt.$$typeof){case kc:return it=it.get(Rt.key===null?ot:Rt.key)||null,K(Z,it,Rt,re);case zr:return it=it.get(Rt.key===null?ot:Rt.key)||null,mt(Z,it,Rt,re);case ra:var $e=Rt._init;return Rt=$e(Rt._payload),ye(it,Z,ot,Rt,re)}if(Wc(Rt)||r(Rt))return it=it.get(ot)||null,Ut(Z,it,Rt,re,null);if(typeof Rt.then=="function")return ye(it,Z,ot,se(Rt),re);if(Rt.$$typeof===aa)return ye(it,Z,ot,Oc(Z,Rt),re);be(Z,Rt)}return null}function Oi(it,Z,ot,Rt){for(var re=null,$e=null,me=Z,Oe=Z=0,En=null;me!==null&&Oe<ot.length;Oe++){me.index>Oe?(En=me,me=null):En=me.sibling;var ze=jt(it,me,ot[Oe],Rt);if(ze===null){me===null&&(me=En);break}a&&me&&ze.alternate===null&&o(it,me),Z=b(ze,Z,Oe),$e===null?re=ze:$e.sibling=ze,$e=ze,me=En}if(Oe===ot.length)return u(it,me),Ie&&ct(it,Oe),re;if(me===null){for(;Oe<ot.length;Oe++)me=Wt(it,ot[Oe],Rt),me!==null&&(Z=b(me,Z,Oe),$e===null?re=me:$e.sibling=me,$e=me);return Ie&&ct(it,Oe),re}for(me=d(me);Oe<ot.length;Oe++)En=ye(me,it,Oe,ot[Oe],Rt),En!==null&&(a&&En.alternate!==null&&me.delete(En.key===null?Oe:En.key),Z=b(En,Z,Oe),$e===null?re=En:$e.sibling=En,$e=En);return a&&me.forEach(function(pa){return o(it,pa)}),Ie&&ct(it,Oe),re}function El(it,Z,ot,Rt){if(ot==null)throw Error(i(151));for(var re=null,$e=null,me=Z,Oe=Z=0,En=null,ze=ot.next();me!==null&&!ze.done;Oe++,ze=ot.next()){me.index>Oe?(En=me,me=null):En=me.sibling;var pa=jt(it,me,ze.value,Rt);if(pa===null){me===null&&(me=En);break}a&&me&&pa.alternate===null&&o(it,me),Z=b(pa,Z,Oe),$e===null?re=pa:$e.sibling=pa,$e=pa,me=En}if(ze.done)return u(it,me),Ie&&ct(it,Oe),re;if(me===null){for(;!ze.done;Oe++,ze=ot.next())ze=Wt(it,ze.value,Rt),ze!==null&&(Z=b(ze,Z,Oe),$e===null?re=ze:$e.sibling=ze,$e=ze);return Ie&&ct(it,Oe),re}for(me=d(me);!ze.done;Oe++,ze=ot.next())ze=ye(me,it,Oe,ze.value,Rt),ze!==null&&(a&&ze.alternate!==null&&me.delete(ze.key===null?Oe:ze.key),Z=b(ze,Z,Oe),$e===null?re=ze:$e.sibling=ze,$e=ze);return a&&me.forEach(function(HE){return o(it,HE)}),Ie&&ct(it,Oe),re}function Qa(it,Z,ot,Rt){if(typeof ot=="object"&&ot!==null&&ot.type===Br&&ot.key===null&&(ot=ot.props.children),typeof ot=="object"&&ot!==null){switch(ot.$$typeof){case kc:t:{for(var re=ot.key;Z!==null;){if(Z.key===re){if(re=ot.type,re===Br){if(Z.tag===7){u(it,Z.sibling),Rt=y(Z,ot.props.children),Rt.return=it,it=Rt;break t}}else if(Z.elementType===re||typeof re=="object"&&re!==null&&re.$$typeof===ra&&fn(re)===Z.type){u(it,Z.sibling),Rt=y(Z,ot.props),we(Rt,ot),Rt.return=it,it=Rt;break t}u(it,Z);break}else o(it,Z);Z=Z.sibling}ot.type===Br?(Rt=Ha(ot.props.children,it.mode,Rt,ot.key),Rt.return=it,it=Rt):(Rt=Gc(ot.type,ot.key,ot.props,null,it.mode,Rt),we(Rt,ot),Rt.return=it,it=Rt)}return P(it);case zr:t:{for(re=ot.key;Z!==null;){if(Z.key===re)if(Z.tag===4&&Z.stateNode.containerInfo===ot.containerInfo&&Z.stateNode.implementation===ot.implementation){u(it,Z.sibling),Rt=y(Z,ot.children||[]),Rt.return=it,it=Rt;break t}else{u(it,Z);break}else o(it,Z);Z=Z.sibling}Rt=Ud(ot,it.mode,Rt),Rt.return=it,it=Rt}return P(it);case ra:return re=ot._init,ot=re(ot._payload),Qa(it,Z,ot,Rt)}if(Wc(ot))return Oi(it,Z,ot,Rt);if(r(ot)){if(re=r(ot),typeof re!="function")throw Error(i(150));return ot=re.call(ot),El(it,Z,ot,Rt)}if(typeof ot.then=="function")return Qa(it,Z,se(ot),Rt);if(ot.$$typeof===aa)return Qa(it,Z,Oc(it,ot),Rt);be(it,ot)}return typeof ot=="string"&&ot!==""||typeof ot=="number"||typeof ot=="bigint"?(ot=""+ot,Z!==null&&Z.tag===6?(u(it,Z.sibling),Rt=y(Z,ot),Rt.return=it,it=Rt):(u(it,Z),Rt=Dd(ot,it.mode,Rt),Rt.return=it,it=Rt),P(it)):u(it,Z)}return function(it,Z,ot,Rt){try{vl=0;var re=Qa(it,Z,ot,Rt);return Kr=null,re}catch(me){if(me===gl)throw me;var $e=e(29,me,null,it.mode);return $e.lanes=Rt,$e.return=it,$e}finally{}}}function Jo(a,o){a=Ns,E(eu,a),E(Jr,o),Ns=a|o.baseLanes}function Dr(){E(eu,Ns),E(Jr,Jr.current)}function ki(){Ns=eu.current,_(Jr),_(eu)}function Ci(a){var o=a.alternate;E(gn,gn.current&1),E(Li,a),os===null&&(o===null||Jr.current!==null||o.memoizedState!==null)&&(os=a)}function Qo(a){if(a.tag===22){if(E(gn,gn.current),E(Li,a),os===null){var o=a.alternate;o!==null&&o.memoizedState!==null&&(os=a)}}else Wi()}function Wi(){E(gn,gn.current),E(Li,Li.current)}function si(a){_(Li),os===a&&(os=null),_(gn)}function La(a){for(var o=a;o!==null;){if(o.tag===13){var u=o.memoizedState;if(u!==null&&(u=u.dehydrated,u===null||kd(u)||Wd(u)))return o}else if(o.tag===19&&o.memoizedProps.revealOrder!==void 0){if((o.flags&128)!==0)return o}else if(o.child!==null){o.child.return=o,o=o.child;continue}if(o===a)break;for(;o.sibling===null;){if(o.return===null||o.return===a)return null;o=o.return}o.sibling.return=o.return,o=o.sibling}return null}function je(){throw Error(i(321))}function Ur(a,o){if(o===null)return!1;for(var u=0;u<o.length&&u<a.length;u++)if(!yi(a[u],o[u]))return!1;return!0}function Pr(a,o,u,d,y,b){return ua=b,Te=o,o.memoizedState=null,o.updateQueue=null,o.lanes=0,ge.H=a===null||a.memoizedState===null?qa:ha,Xa=!1,b=u(d,y),Xa=!1,Qr&&(b=Dc(o,u,d,y)),Rc(a),b}function Rc(a){ge.H=ls;var o=We!==null&&We.next!==null;if(ua=0,dn=We=Te=null,nu=!1,_l=0,$r=null,o)throw Error(i(300));a===null||Mn||(a=a.dependencies,a!==null&&Ic(a)&&(Mn=!0))}function Dc(a,o,u,d){Te=a;var y=0;do{if(Qr&&($r=null),_l=0,Qr=!1,25<=y)throw Error(i(301));if(y+=1,dn=We=null,a.updateQueue!=null){var b=a.updateQueue;b.lastEffect=null,b.events=null,b.stores=null,b.memoCache!=null&&(b.memoCache.index=0)}ge.H=Ya,b=o(u,d)}while(Qr);return b}function Xf(){var a=ge.H,o=a.useState()[0];return o=typeof o.then=="function"?at(o):o,a=a.useState()[0],(We!==null?We.memoizedState:null)!==a&&(Te.flags|=1024),o}function $o(){var a=iu!==0;return iu=0,a}function tl(a,o,u){o.updateQueue=a.updateQueue,o.flags&=-2053,a.lanes&=~u}function el(a){if(nu){for(a=a.memoizedState;a!==null;){var o=a.queue;o!==null&&(o.pending=null),a=a.next}nu=!1}ua=0,dn=We=Te=null,Qr=!1,_l=iu=0,$r=null}function U(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return dn===null?Te.memoizedState=dn=a:dn=dn.next=a,dn}function Y(){if(We===null){var a=Te.alternate;a=a!==null?a.memoizedState:null}else a=We.next;var o=dn===null?Te.memoizedState:dn.next;if(o!==null)dn=o,We=a;else{if(a===null)throw Te.alternate===null?Error(i(467)):Error(i(310));We=a,a={memoizedState:We.memoizedState,baseState:We.baseState,baseQueue:We.baseQueue,queue:We.queue,next:null},dn===null?Te.memoizedState=dn=a:dn=dn.next=a}return dn}function at(a){var o=_l;return _l+=1,$r===null&&($r=[]),a=gt($r,a,o),o=Te,(dn===null?o.memoizedState:dn.next)===null&&(o=o.alternate,ge.H=o===null||o.memoizedState===null?qa:ha),a}function rt(a){if(a!==null&&typeof a=="object"){if(typeof a.then=="function")return at(a);if(a.$$typeof===aa)return zn(a)}throw Error(i(438,String(a)))}function j(a){var o=null,u=Te.updateQueue;if(u!==null&&(o=u.memoCache),o==null){var d=Te.alternate;d!==null&&(d=d.updateQueue,d!==null&&(d=d.memoCache,d!=null&&(o={data:d.data.map(function(y){return y.slice()}),index:0})))}if(o==null&&(o={data:[],index:0}),u===null&&(u=np(),Te.updateQueue=u),u.memoCache=o,u=o.data[o.index],u===void 0)for(u=o.data[o.index]=Array(a),d=0;d<a;d++)u[d]=cb;return o.index++,u}function Et(a,o){return typeof o=="function"?o(a):o}function Bt(a){var o=Y();return $t(o,We,a)}function $t(a,o,u){var d=a.queue;if(d===null)throw Error(i(311));d.lastRenderedReducer=u;var y=a.baseQueue,b=d.pending;if(b!==null){if(y!==null){var P=y.next;y.next=b.next,b.next=P}o.baseQueue=y=b,d.pending=null}if(b=a.baseState,y===null)a.memoizedState=b;else{o=y.next;var W=P=null,K=null,mt=o,Ut=!1;do{var Wt=mt.lane&-536870913;if(Wt!==mt.lane?(Pe&Wt)===Wt:(ua&Wt)===Wt){var jt=mt.revertLane;if(jt===0)K!==null&&(K=K.next={lane:0,revertLane:0,action:mt.action,hasEagerState:mt.hasEagerState,eagerState:mt.eagerState,next:null}),Wt===Yr&&(Ut=!0);else if((ua&jt)===jt){mt=mt.next,jt===Yr&&(Ut=!0);continue}else Wt={lane:0,revertLane:mt.revertLane,action:mt.action,hasEagerState:mt.hasEagerState,eagerState:mt.eagerState,next:null},K===null?(W=K=Wt,P=b):K=K.next=Wt,Te.lanes|=jt,fa|=jt;Wt=mt.action,Xa&&u(b,Wt),b=mt.hasEagerState?mt.eagerState:u(b,Wt)}else jt={lane:Wt,revertLane:mt.revertLane,action:mt.action,hasEagerState:mt.hasEagerState,eagerState:mt.eagerState,next:null},K===null?(W=K=jt,P=b):K=K.next=jt,Te.lanes|=Wt,fa|=Wt;mt=mt.next}while(mt!==null&&mt!==o);if(K===null?P=b:K.next=W,!yi(b,a.memoizedState)&&(Mn=!0,Ut&&(u=jr,u!==null)))throw u;a.memoizedState=b,a.baseState=P,a.baseQueue=K,d.lastRenderedState=b}return y===null&&(d.lanes=0),[a.memoizedState,d.dispatch]}function Zt(a){var o=Y(),u=o.queue;if(u===null)throw Error(i(311));u.lastRenderedReducer=a;var d=u.dispatch,y=u.pending,b=o.memoizedState;if(y!==null){u.pending=null;var P=y=y.next;do b=a(b,P.action),P=P.next;while(P!==y);yi(b,o.memoizedState)||(Mn=!0),o.memoizedState=b,o.baseQueue===null&&(o.baseState=b),u.lastRenderedState=b}return[b,d]}function de(a,o,u){var d=Te,y=Y(),b=Ie;if(b){if(u===void 0)throw Error(i(407));u=u()}else u=o();var P=!yi((We||y).memoizedState,u);if(P&&(y.memoizedState=u,Mn=!0),y=y.queue,qf(Ee.bind(null,d,y,a),[a]),y.getSnapshot!==o||P||dn!==null&&dn.memoizedState.tag&1){if(d.flags|=2048,ss(9,ae.bind(null,d,y,u,o),{destroy:void 0},null),Ke===null)throw Error(i(349));b||(ua&60)!==0||pe(d,o,u)}return u}function pe(a,o,u){a.flags|=16384,a={getSnapshot:o,value:u},o=Te.updateQueue,o===null?(o=np(),Te.updateQueue=o,o.stores=[a]):(u=o.stores,u===null?o.stores=[a]:u.push(a))}function ae(a,o,u,d){o.value=u,o.getSnapshot=d,Fe(o)&&Qe(a)}function Ee(a,o,u){return u(function(){Fe(o)&&Qe(a)})}function Fe(a){var o=a.getSnapshot;a=a.value;try{var u=o();return!yi(a,u)}catch{return!0}}function Qe(a){var o=bt(a,2);o!==null&&Kn(o,a,2)}function Ve(a){var o=U();if(typeof a=="function"){var u=a;if(a=u(),Xa){X(!0);try{u()}finally{X(!1)}}}return o.memoizedState=o.baseState=a,o.queue={pending:null,lanes:0,dispatch:null,lastRenderedReducer:Et,lastRenderedState:a},o}function He(a,o,u,d){return a.baseState=u,$t(a,We,typeof d=="function"?d:Et)}function oe(a,o,u,d,y){if(Nc(a))throw Error(i(485));if(a=o.action,a!==null){var b={payload:y,action:a,next:null,isTransition:!0,status:"pending",value:null,reason:null,listeners:[],then:function(P){b.listeners.push(P)}};ge.T!==null?u(!0):b.isTransition=!1,d(b),u=o.pending,u===null?(b.next=o.pending=b,Ze(o,b)):(b.next=u.next,o.pending=u.next=b)}}function Ze(a,o){var u=o.action,d=o.payload,y=a.state;if(o.isTransition){var b=ge.T,P={};ge.T=P;try{var W=u(y,d),K=ge.S;K!==null&&K(P,W),De(a,o,W)}catch(mt){is(a,o,mt)}finally{ge.T=b}}else try{b=u(y,d),De(a,o,b)}catch(mt){is(a,o,mt)}}function De(a,o,u){u!==null&&typeof u=="object"&&typeof u.then=="function"?u.then(function(d){In(a,o,d)},function(d){return is(a,o,d)}):In(a,o,u)}function In(a,o,u){o.status="fulfilled",o.value=u,On(o),a.state=u,o=a.pending,o!==null&&(u=o.next,u===o?a.pending=null:(u=u.next,o.next=u,Ze(a,u)))}function is(a,o,u){var d=a.pending;if(a.pending=null,d!==null){d=d.next;do o.status="rejected",o.reason=u,On(o),o=o.next;while(o!==d)}a.action=null}function On(a){a=a.listeners;for(var o=0;o<a.length;o++)(0,a[o])()}function $s(a,o){return o}function Ye(a,o){if(Ie){var u=Ke.formState;if(u!==null){t:{var d=Te;if(Ie){if(Hn){var y=tE(Hn,rs);if(y){Hn=Lv(y),d=eE(y);break t}}Vt(d)}d=!1}d&&(o=u[0])}}u=U(),u.memoizedState=u.baseState=o,d={pending:null,lanes:0,dispatch:null,lastRenderedReducer:$s,lastRenderedState:o},u.queue=d,u=a0.bind(null,Te,d),d.dispatch=u,d=Ve(!1);var b=Kf.bind(null,Te,!1,d.queue);return d=U(),y={state:o,dispatch:null,action:a,pending:null},d.queue=y,u=oe.bind(null,Te,y,b,u),y.dispatch=u,d.memoizedState=a,[o,u,!1]}function jn(a){var o=Y();return Zn(o,We,a)}function Zn(a,o,u){o=$t(a,o,$s)[0],a=Bt(Et)[0],o=typeof o=="object"&&o!==null&&typeof o.then=="function"?at(o):o;var d=Y(),y=d.queue,b=y.dispatch;return u!==d.memoizedState&&(Te.flags|=2048,ss(9,wn.bind(null,y,u),{destroy:void 0},null)),[o,b,a]}function wn(a,o){a.action=o}function Cn(a){var o=Y(),u=We;if(u!==null)return Zn(o,u,a);Y(),o=o.memoizedState,u=Y();var d=u.queue.dispatch;return u.memoizedState=a,[o,d,!1]}function ss(a,o,u,d){return a={tag:a,create:o,inst:u,deps:d,next:null},o=Te.updateQueue,o===null&&(o=np(),Te.updateQueue=o),u=o.lastEffect,u===null?o.lastEffect=a.next=a:(d=u.next,u.next=a,a.next=d,o.lastEffect=a),a}function as(){return Y().memoizedState}function Uc(a,o,u,d){var y=U();Te.flags|=a,y.memoizedState=ss(1|o,u,{destroy:void 0},d===void 0?null:d)}function Pc(a,o,u,d){var y=Y();d=d===void 0?null:d;var b=y.memoizedState.inst;We!==null&&d!==null&&Ur(d,We.memoizedState.deps)?y.memoizedState=ss(o,u,b,d):(Te.flags|=a,y.memoizedState=ss(1|o,u,b,d))}function Yg(a,o){Uc(8390656,8,a,o)}function qf(a,o){Pc(2048,8,a,o)}function jg(a,o){return Pc(4,2,a,o)}function Zg(a,o){return Pc(4,4,a,o)}function Kg(a,o){if(typeof o=="function"){a=a();var u=o(a);return function(){typeof u=="function"?u():o(null)}}if(o!=null)return a=a(),o.current=a,function(){o.current=null}}function Jg(a,o,u){u=u!=null?u.concat([a]):null,Pc(4,4,Kg.bind(null,o,a),u)}function Yf(){}function Qg(a,o){var u=Y();o=o===void 0?null:o;var d=u.memoizedState;return o!==null&&Ur(o,d[1])?d[0]:(u.memoizedState=[a,o],a)}function $g(a,o){var u=Y();o=o===void 0?null:o;var d=u.memoizedState;if(o!==null&&Ur(o,d[1]))return d[0];if(d=a(),Xa){X(!0);try{a()}finally{X(!1)}}return u.memoizedState=[d,o],d}function jf(a,o,u){return u===void 0||(ua&1073741824)!==0?a.memoizedState=o:(a.memoizedState=u,a=Z0(),Te.lanes|=a,fa|=a,u)}function t0(a,o,u,d){return yi(u,o)?u:Jr.current!==null?(a=jf(a,u,d),yi(a,o)||(Mn=!0),a):(ua&42)===0?(Mn=!0,a.memoizedState=u):(a=Z0(),Te.lanes|=a,fa|=a,o)}function e0(a,o,u,d,y){var b=Va();ri(b!==0&&8>b?b:8);var P=ge.T,W={};ge.T=W,Kf(a,!1,o,u);try{var K=y(),mt=ge.S;if(mt!==null&&mt(W,K),K!==null&&typeof K=="object"&&typeof K.then=="function"){var Ut=Lt(K,d);nl(a,o,Ut,mi(a))}else nl(a,o,d,mi(a))}catch(Wt){nl(a,o,{then:function(){},status:"rejected",reason:Wt},mi())}finally{ri(b),ge.T=P}}function n0(a){var o=a.memoizedState;if(o!==null)return o;o={memoizedState:Fr,baseState:Fr,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:Et,lastRenderedState:Fr},next:null};var u={};return o.next={memoizedState:u,baseState:u,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:Et,lastRenderedState:u},next:null},a.memoizedState=o,a=a.alternate,a!==null&&(a.memoizedState=o),o}function Zf(){return zn(Ga)}function i0(){return Y().memoizedState}function s0(){return Y().memoizedState}function VM(a){for(var o=a.return;o!==null;){switch(o.tag){case 24:case 3:var u=mi();a=vt(u);var d=zt(o,a,u);d!==null&&(Kn(d,o,u),ie(d,o,u)),o={cache:cd()},a.payload=o;return}o=o.return}}function GM(a,o,u){var d=mi();u={lane:d,revertLane:0,action:u,hasEagerState:!1,eagerState:null,next:null},Nc(a)?r0(o,u):(u=Mt(a,o,u,d),u!==null&&(Kn(u,a,d),o0(u,o,d)))}function a0(a,o,u){var d=mi();nl(a,o,u,d)}function nl(a,o,u,d){var y={lane:d,revertLane:0,action:u,hasEagerState:!1,eagerState:null,next:null};if(Nc(a))r0(o,y);else{var b=a.alternate;if(a.lanes===0&&(b===null||b.lanes===0)&&(b=o.lastRenderedReducer,b!==null))try{var P=o.lastRenderedState,W=b(P,u);if(y.hasEagerState=!0,y.eagerState=W,yi(W,P))return Ct(a,o,y,0),Ke===null&&O(),!1}catch{}finally{}if(u=Mt(a,o,y,d),u!==null)return Kn(u,a,d),o0(u,o,d),!0}return!1}function Kf(a,o,u,d){if(d={lane:2,revertLane:pt(),action:d,hasEagerState:!1,eagerState:null,next:null},Nc(a)){if(o)throw Error(i(479))}else o=Mt(a,u,d,2),o!==null&&Kn(o,a,2)}function Nc(a){var o=a.alternate;return a===Te||o!==null&&o===Te}function r0(a,o){Qr=nu=!0;var u=a.pending;u===null?o.next=o:(o.next=u.next,u.next=o),a.pending=o}function o0(a,o,u){if((u&4194176)!==0){var d=o.lanes;d&=a.pendingLanes,u|=d,o.lanes=u,J(a,u)}}function Jf(a,o,u,d){o=a.memoizedState,u=u(d,o),u=u==null?o:Nd({},o,u),a.memoizedState=u,a.lanes===0&&(a.updateQueue.baseState=u)}function l0(a,o,u,d,y,b,P){return a=a.stateNode,typeof a.shouldComponentUpdate=="function"?a.shouldComponentUpdate(d,b,P):o.prototype&&o.prototype.isPureReactComponent?!xt(u,d)||!xt(y,b):!0}function c0(a,o,u,d){a=o.state,typeof o.componentWillReceiveProps=="function"&&o.componentWillReceiveProps(u,d),typeof o.UNSAFE_componentWillReceiveProps=="function"&&o.UNSAFE_componentWillReceiveProps(u,d),o.state!==a&&ip.enqueueReplaceState(o,o.state,null)}function Ia(a,o){var u=o;if("ref"in o){u={};for(var d in o)d!=="ref"&&(u[d]=o[d])}if(a=a.defaultProps){u===o&&(u=Nd({},u));for(var y in a)u[y]===void 0&&(u[y]=a[y])}return u}function Lc(a,o){try{var u=a.onUncaughtError;u(o.value,{componentStack:o.stack})}catch(d){setTimeout(function(){throw d})}}function u0(a,o,u){try{var d=a.onCaughtError;d(u.value,{componentStack:u.stack,errorBoundary:o.tag===1?o.stateNode:null})}catch(y){setTimeout(function(){throw y})}}function Qf(a,o,u){return u=vt(u),u.tag=3,u.payload={element:null},u.callback=function(){Lc(a,o)},u}function h0(a){return a=vt(a),a.tag=3,a}function f0(a,o,u,d){var y=u.type.getDerivedStateFromError;if(typeof y=="function"){var b=d.value;a.payload=function(){return y(b)},a.callback=function(){u0(o,u,d)}}var P=u.stateNode;P!==null&&typeof P.componentDidCatch=="function"&&(a.callback=function(){u0(o,u,d),typeof y!="function"&&(da===null?da=new Set([this]):da.add(this));var W=d.stack;this.componentDidCatch(d.value,{componentStack:W!==null?W:""})})}function kM(a,o,u,d,y){if(u.flags|=32768,d!==null&&typeof d=="object"&&typeof d.then=="function"){if(o=u.alternate,o!==null&&sl(o,u,y,!0),u=Li.current,u!==null){switch(u.tag){case 13:return os===null?Ad():u.alternate===null&&ln===0&&(ln=3),u.flags&=-257,u.flags|=65536,u.lanes=y,d===tu?u.flags|=16384:(o=u.updateQueue,o===null?u.updateQueue=new Set([d]):o.add(d),Cd(a,d,y)),!1;case 22:return u.flags|=65536,d===tu?u.flags|=16384:(o=u.updateQueue,o===null?(o={transitions:null,markerInstances:null,retryQueue:new Set([d])},u.updateQueue=o):(u=o.retryQueue,u===null?o.retryQueue=new Set([d]):u.add(d)),Cd(a,d,y)),!1}throw Error(i(435,u.tag))}return Cd(a,d,y),Ad(),!1}if(Ie)return o=Li.current,o!==null?((o.flags&65536)===0&&(o.flags|=256),o.flags|=65536,o.lanes=y,d!==Zd&&(a=Error(i(422),{cause:d}),ee(st(a,u)))):(d!==Zd&&(o=Error(i(423),{cause:d}),ee(st(o,u))),a=a.current.alternate,a.flags|=65536,y&=-y,a.lanes|=y,d=st(d,u),y=Qf(a.stateNode,d,y),k(a,y),ln!==4&&(ln=2)),!1;var b=Error(i(520),{cause:d});if(b=st(b,u),xl===null?xl=[b]:xl.push(b),ln!==4&&(ln=2),o===null)return!0;d=st(d,u),u=o;do{switch(u.tag){case 3:return u.flags|=65536,a=y&-y,u.lanes|=a,a=Qf(u.stateNode,d,a),k(u,a),!1;case 1:if(o=u.type,b=u.stateNode,(u.flags&128)===0&&(typeof o.getDerivedStateFromError=="function"||b!==null&&typeof b.componentDidCatch=="function"&&(da===null||!da.has(b))))return u.flags|=65536,y&=-y,u.lanes|=y,y=h0(y),f0(y,a,u,d),k(u,y),!1}u=u.return}while(u!==null);return!1}function Rn(a,o,u,d){o.child=a===null?jv(o,null,u,d):Wa(o,a.child,u,d)}function d0(a,o,u,d,y){u=u.render;var b=o.ref;if("ref"in d){var P={};for(var W in d)W!=="ref"&&(P[W]=d[W])}else P=d;return Oa(o),d=Pr(a,o,u,P,b,y),W=$o(),a!==null&&!Mn?(tl(a,o,y),bs(a,o,y)):(Ie&&W&&Dt(o),o.flags|=1,Rn(a,o,d,y),o.child)}function p0(a,o,u,d,y){if(a===null){var b=u.type;return typeof b=="function"&&!Rd(b)&&b.defaultProps===void 0&&u.compare===null?(o.tag=15,o.type=b,m0(a,o,b,d,y)):(a=Gc(u.type,null,d,o,o.mode,y),a.ref=o.ref,a.return=o,o.child=a)}if(b=a.child,!rd(a,y)){var P=b.memoizedProps;if(u=u.compare,u=u!==null?u:xt,u(P,d)&&a.ref===o.ref)return bs(a,o,y)}return o.flags|=1,a=sa(b,d),a.ref=o.ref,a.return=o,o.child=a}function m0(a,o,u,d,y){if(a!==null){var b=a.memoizedProps;if(xt(b,d)&&a.ref===o.ref)if(Mn=!1,o.pendingProps=d=b,rd(a,y))(a.flags&131072)!==0&&(Mn=!0);else return o.lanes=a.lanes,bs(a,o,y)}return $f(a,o,u,d,y)}function g0(a,o,u){var d=o.pendingProps,y=d.children,b=(o.stateNode._pendingVisibility&2)!==0,P=a!==null?a.memoizedState:null;if(il(a,o),d.mode==="hidden"||b){if((o.flags&128)!==0){if(d=P!==null?P.baseLanes|u:u,a!==null){for(y=o.child=a.child,b=0;y!==null;)b=b|y.lanes|y.childLanes,y=y.sibling;o.childLanes=b&~d}else o.childLanes=0,o.child=null;return v0(a,o,d,u)}if((u&536870912)!==0)o.memoizedState={baseLanes:0,cachePool:null},a!==null&&zc(o,P!==null?P.cachePool:null),P!==null?Jo(o,P):Dr(),Qo(o);else return o.lanes=o.childLanes=536870912,v0(a,o,P!==null?P.baseLanes|u:u,u)}else P!==null?(zc(o,P.cachePool),Jo(o,P),Wi(),o.memoizedState=null):(a!==null&&zc(o,null),Dr(),Wi());return Rn(a,o,y,u),o.child}function v0(a,o,u,d){var y=ud();return y=y===null?null:{parent:ws?rn._currentValue:rn._currentValue2,pool:y},o.memoizedState={baseLanes:u,cachePool:y},a!==null&&zc(o,null),Dr(),Qo(o),a!==null&&sl(a,o,d,!0),null}function il(a,o){var u=o.ref;if(u===null)a!==null&&a.ref!==null&&(o.flags|=2097664);else{if(typeof u!="function"&&typeof u!="object")throw Error(i(284));(a===null||a.ref!==u)&&(o.flags|=2097664)}}function $f(a,o,u,d,y){return Oa(o),u=Pr(a,o,u,d,void 0,y),d=$o(),a!==null&&!Mn?(tl(a,o,y),bs(a,o,y)):(Ie&&d&&Dt(o),o.flags|=1,Rn(a,o,u,y),o.child)}function _0(a,o,u,d,y,b){return Oa(o),o.updateQueue=null,u=Dc(o,d,u,y),Rc(a),d=$o(),a!==null&&!Mn?(tl(a,o,b),bs(a,o,b)):(Ie&&d&&Dt(o),o.flags|=1,Rn(a,o,u,b),o.child)}function y0(a,o,u,d,y){if(Oa(o),o.stateNode===null){var b=Vr,P=u.contextType;typeof P=="object"&&P!==null&&(b=zn(P)),b=new u(d,b),o.memoizedState=b.state!==null&&b.state!==void 0?b.state:null,b.updater=ip,o.stateNode=b,b._reactInternals=o,b=o.stateNode,b.props=d,b.state=o.memoizedState,b.refs={},Kt(o),P=u.contextType,b.context=typeof P=="object"&&P!==null?zn(P):Vr,b.state=o.memoizedState,P=u.getDerivedStateFromProps,typeof P=="function"&&(Jf(o,u,P,d),b.state=o.memoizedState),typeof u.getDerivedStateFromProps=="function"||typeof b.getSnapshotBeforeUpdate=="function"||typeof b.UNSAFE_componentWillMount!="function"&&typeof b.componentWillMount!="function"||(P=b.state,typeof b.componentWillMount=="function"&&b.componentWillMount(),typeof b.UNSAFE_componentWillMount=="function"&&b.UNSAFE_componentWillMount(),P!==b.state&&ip.enqueueReplaceState(b,b.state,null),Tt(o,d,b,y),et(),b.state=o.memoizedState),typeof b.componentDidMount=="function"&&(o.flags|=4194308),d=!0}else if(a===null){b=o.stateNode;var W=o.memoizedProps,K=Ia(u,W);b.props=K;var mt=b.context,Ut=u.contextType;P=Vr,typeof Ut=="object"&&Ut!==null&&(P=zn(Ut));var Wt=u.getDerivedStateFromProps;Ut=typeof Wt=="function"||typeof b.getSnapshotBeforeUpdate=="function",W=o.pendingProps!==W,Ut||typeof b.UNSAFE_componentWillReceiveProps!="function"&&typeof b.componentWillReceiveProps!="function"||(W||mt!==P)&&c0(o,b,d,P),ca=!1;var jt=o.memoizedState;b.state=jt,Tt(o,d,b,y),et(),mt=o.memoizedState,W||jt!==mt||ca?(typeof Wt=="function"&&(Jf(o,u,Wt,d),mt=o.memoizedState),(K=ca||l0(o,u,K,d,jt,mt,P))?(Ut||typeof b.UNSAFE_componentWillMount!="function"&&typeof b.componentWillMount!="function"||(typeof b.componentWillMount=="function"&&b.componentWillMount(),typeof b.UNSAFE_componentWillMount=="function"&&b.UNSAFE_componentWillMount()),typeof b.componentDidMount=="function"&&(o.flags|=4194308)):(typeof b.componentDidMount=="function"&&(o.flags|=4194308),o.memoizedProps=d,o.memoizedState=mt),b.props=d,b.state=mt,b.context=P,d=K):(typeof b.componentDidMount=="function"&&(o.flags|=4194308),d=!1)}else{b=o.stateNode,Qt(a,o),P=o.memoizedProps,Ut=Ia(u,P),b.props=Ut,Wt=o.pendingProps,jt=b.context,mt=u.contextType,K=Vr,typeof mt=="object"&&mt!==null&&(K=zn(mt)),W=u.getDerivedStateFromProps,(mt=typeof W=="function"||typeof b.getSnapshotBeforeUpdate=="function")||typeof b.UNSAFE_componentWillReceiveProps!="function"&&typeof b.componentWillReceiveProps!="function"||(P!==Wt||jt!==K)&&c0(o,b,d,K),ca=!1,jt=o.memoizedState,b.state=jt,Tt(o,d,b,y),et();var ye=o.memoizedState;P!==Wt||jt!==ye||ca||a!==null&&a.dependencies!==null&&Ic(a.dependencies)?(typeof W=="function"&&(Jf(o,u,W,d),ye=o.memoizedState),(Ut=ca||l0(o,u,Ut,d,jt,ye,K)||a!==null&&a.dependencies!==null&&Ic(a.dependencies))?(mt||typeof b.UNSAFE_componentWillUpdate!="function"&&typeof b.componentWillUpdate!="function"||(typeof b.componentWillUpdate=="function"&&b.componentWillUpdate(d,ye,K),typeof b.UNSAFE_componentWillUpdate=="function"&&b.UNSAFE_componentWillUpdate(d,ye,K)),typeof b.componentDidUpdate=="function"&&(o.flags|=4),typeof b.getSnapshotBeforeUpdate=="function"&&(o.flags|=1024)):(typeof b.componentDidUpdate!="function"||P===a.memoizedProps&&jt===a.memoizedState||(o.flags|=4),typeof b.getSnapshotBeforeUpdate!="function"||P===a.memoizedProps&&jt===a.memoizedState||(o.flags|=1024),o.memoizedProps=d,o.memoizedState=ye),b.props=d,b.state=ye,b.context=K,d=Ut):(typeof b.componentDidUpdate!="function"||P===a.memoizedProps&&jt===a.memoizedState||(o.flags|=4),typeof b.getSnapshotBeforeUpdate!="function"||P===a.memoizedProps&&jt===a.memoizedState||(o.flags|=1024),d=!1)}return b=d,il(a,o),d=(o.flags&128)!==0,b||d?(b=o.stateNode,u=d&&typeof u.getDerivedStateFromError!="function"?null:b.render(),o.flags|=1,a!==null&&d?(o.child=Wa(o,a.child,null,y),o.child=Wa(o,null,u,y)):Rn(a,o,u,y),o.memoizedState=b.state,a=o.child):a=bs(a,o,y),a}function x0(a,o,u,d){return ce(),o.flags|=256,Rn(a,o,u,d),o.child}function td(a){return{baseLanes:a,cachePool:A0()}}function ed(a,o,u){return a=a!==null?a.childLanes&~u:0,o&&(a|=Ii),a}function S0(a,o,u){var d=o.pendingProps,y=!1,b=(o.flags&128)!==0,P;if((P=b)||(P=a!==null&&a.memoizedState===null?!1:(gn.current&2)!==0),P&&(y=!0,o.flags&=-129),P=(o.flags&32)!==0,o.flags&=-33,a===null){if(Ie){if(y?Ci(o):Wi(),Ie){var W=Hn,K;(K=W)&&(W=rE(W,rs),W!==null?(o.memoizedState={dehydrated:W,treeContext:ka!==null?{id:Cs,overflow:Rs}:null,retryLane:536870912},K=e(18,null,null,0),K.stateNode=W,K.return=o,o.child=K,Jn=o,Hn=null,K=!0):K=!1),K||Vt(o)}if(W=o.memoizedState,W!==null&&(W=W.dehydrated,W!==null))return Wd(W)?o.lanes=16:o.lanes=536870912,null;si(o)}return W=d.children,d=d.fallback,y?(Wi(),y=o.mode,W=id({mode:"hidden",children:W},y),d=Ha(d,y,u,null),W.return=o,d.return=o,W.sibling=d,o.child=W,y=o.child,y.memoizedState=td(u),y.childLanes=ed(a,P,u),o.memoizedState=sp,d):(Ci(o),nd(o,W))}if(K=a.memoizedState,K!==null&&(W=K.dehydrated,W!==null)){if(b)o.flags&256?(Ci(o),o.flags&=-257,o=sd(a,o,u)):o.memoizedState!==null?(Wi(),o.child=a.child,o.flags|=128,o=null):(Wi(),y=d.fallback,W=o.mode,d=id({mode:"visible",children:d.children},W),y=Ha(y,W,u,null),y.flags|=2,d.return=o,y.return=o,d.sibling=y,o.child=d,Wa(o,a.child,null,u),d=o.child,d.memoizedState=td(u),d.childLanes=ed(a,P,u),o.memoizedState=sp,o=y);else if(Ci(o),Wd(W))P=Qb(W).digest,d=Error(i(419)),d.stack="",d.digest=P,ee({value:d,source:null,stack:null}),o=sd(a,o,u);else if(Mn||sl(a,o,u,!1),P=(u&a.childLanes)!==0,Mn||P){if(P=Ke,P!==null){if(d=u&-u,(d&42)!==0)d=1;else switch(d){case 2:d=1;break;case 8:d=4;break;case 32:d=16;break;case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:d=64;break;case 268435456:d=134217728;break;default:d=0}if(d=(d&(P.suspendedLanes|u))!==0?0:d,d!==0&&d!==K.retryLane)throw K.retryLane=d,bt(a,d),Kn(P,a,d),Kv}kd(W)||Ad(),o=sd(a,o,u)}else kd(W)?(o.flags|=128,o.child=a.child,o=eb.bind(null,a),$b(W,o),o=null):(a=K.treeContext,Ri&&(Hn=iE(W),Jn=o,Ie=!0,Yi=null,rs=!1,a!==null&&(Ui[Pi++]=Cs,Ui[Pi++]=Rs,Ui[Pi++]=ka,Cs=a.id,Rs=a.overflow,ka=o)),o=nd(o,d.children),o.flags|=4096);return o}return y?(Wi(),y=d.fallback,W=o.mode,K=a.child,b=K.sibling,d=sa(K,{mode:"hidden",children:d.children}),d.subtreeFlags=K.subtreeFlags&31457280,b!==null?y=sa(b,y):(y=Ha(y,W,u,null),y.flags|=2),y.return=o,d.return=o,d.sibling=y,o.child=d,d=y,y=o.child,W=a.child.memoizedState,W===null?W=td(u):(K=W.cachePool,K!==null?(b=ws?rn._currentValue:rn._currentValue2,K=K.parent!==b?{parent:b,pool:b}:K):K=A0(),W={baseLanes:W.baseLanes|u,cachePool:K}),y.memoizedState=W,y.childLanes=ed(a,P,u),o.memoizedState=sp,d):(Ci(o),u=a.child,a=u.sibling,u=sa(u,{mode:"visible",children:d.children}),u.return=o,u.sibling=null,a!==null&&(P=o.deletions,P===null?(o.deletions=[a],o.flags|=16):P.push(a)),o.child=u,o.memoizedState=null,u)}function nd(a,o){return o=id({mode:"visible",children:o},a.mode),o.return=a,a.child=o}function id(a,o){return hv(a,o,0,null)}function sd(a,o,u){return Wa(o,a.child,null,u),a=nd(o,o.pendingProps.children),a.flags|=2,o.memoizedState=null,a}function M0(a,o,u){a.lanes|=o;var d=a.alternate;d!==null&&(d.lanes|=o),od(a.return,o,u)}function ad(a,o,u,d,y){var b=a.memoizedState;b===null?a.memoizedState={isBackwards:o,rendering:null,renderingStartTime:0,last:d,tail:u,tailMode:y}:(b.isBackwards=o,b.rendering=null,b.renderingStartTime=0,b.last=d,b.tail=u,b.tailMode=y)}function b0(a,o,u){var d=o.pendingProps,y=d.revealOrder,b=d.tail;if(Rn(a,o,d.children,u),d=gn.current,(d&2)!==0)d=d&1|2,o.flags|=128;else{if(a!==null&&(a.flags&128)!==0)t:for(a=o.child;a!==null;){if(a.tag===13)a.memoizedState!==null&&M0(a,u,o);else if(a.tag===19)M0(a,u,o);else if(a.child!==null){a.child.return=a,a=a.child;continue}if(a===o)break t;for(;a.sibling===null;){if(a.return===null||a.return===o)break t;a=a.return}a.sibling.return=a.return,a=a.sibling}d&=1}switch(E(gn,d),y){case"forwards":for(u=o.child,y=null;u!==null;)a=u.alternate,a!==null&&La(a)===null&&(y=u),u=u.sibling;u=y,u===null?(y=o.child,o.child=null):(y=u.sibling,u.sibling=null),ad(o,!1,y,u,b);break;case"backwards":for(u=null,y=o.child,o.child=null;y!==null;){if(a=y.alternate,a!==null&&La(a)===null){o.child=y;break}a=y.sibling,y.sibling=u,u=y,y=a}ad(o,!0,u,null,b);break;case"together":ad(o,!1,null,null,void 0);break;default:o.memoizedState=null}return o.child}function bs(a,o,u){if(a!==null&&(o.dependencies=a.dependencies),fa|=o.lanes,(u&o.childLanes)===0)if(a!==null){if(sl(a,o,u,!1),(u&o.childLanes)===0)return null}else return null;if(a!==null&&o.child!==a.child)throw Error(i(153));if(o.child!==null){for(a=o.child,u=sa(a,a.pendingProps),o.child=u,u.return=o;a.sibling!==null;)a=a.sibling,u=u.sibling=sa(a,a.pendingProps),u.return=o;u.sibling=null}return o.child}function rd(a,o){return(a.lanes&o)!==0?!0:(a=a.dependencies,!!(a!==null&&Ic(a)))}function WM(a,o,u){switch(o.tag){case 3:tt(o,o.stateNode.containerInfo),ta(o,rn,a.memoizedState.cache),ce();break;case 27:case 5:Yt(o);break;case 4:tt(o,o.stateNode.containerInfo);break;case 10:ta(o,o.type,o.memoizedProps.value);break;case 13:var d=o.memoizedState;if(d!==null)return d.dehydrated!==null?(Ci(o),o.flags|=128,null):(u&o.child.childLanes)!==0?S0(a,o,u):(Ci(o),a=bs(a,o,u),a!==null?a.sibling:null);Ci(o);break;case 19:var y=(a.flags&128)!==0;if(d=(u&o.childLanes)!==0,d||(sl(a,o,u,!1),d=(u&o.childLanes)!==0),y){if(d)return b0(a,o,u);o.flags|=128}if(y=o.memoizedState,y!==null&&(y.rendering=null,y.tail=null,y.lastEffect=null),E(gn,gn.current),d)break;return null;case 22:case 23:return o.lanes=0,g0(a,o,u);case 24:ta(o,rn,a.memoizedState.cache)}return bs(a,o,u)}function E0(a,o,u){if(a!==null)if(a.memoizedProps!==o.pendingProps)Mn=!0;else{if(!rd(a,u)&&(o.flags&128)===0)return Mn=!1,WM(a,o,u);Mn=(a.flags&131072)!==0}else Mn=!1,Ie&&(o.flags&1048576)!==0&&_t(o,Kc,o.index);switch(o.lanes=0,o.tag){case 16:t:{a=o.pendingProps;var d=o.elementType,y=d._init;if(d=y(d._payload),o.type=d,typeof d=="function")Rd(d)?(a=Ia(d,a),o.tag=1,o=y0(null,o,d,a,u)):(o.tag=0,o=$f(null,o,d,a,u));else{if(d!=null){if(y=d.$$typeof,y===Id){o.tag=11,o=d0(null,o,d,a,u);break t}else if(y===Bd){o.tag=14,o=p0(null,o,d,a,u);break t}}throw o=l(d)||d,Error(i(306,o,""))}}return o;case 0:return $f(a,o,o.type,o.pendingProps,u);case 1:return d=o.type,y=Ia(d,o.pendingProps),y0(a,o,d,y,u);case 3:t:{if(tt(o,o.stateNode.containerInfo),a===null)throw Error(i(387));var b=o.pendingProps;y=o.memoizedState,d=y.element,Qt(a,o),Tt(o,b,null,u);var P=o.memoizedState;if(b=P.cache,ta(o,rn,b),b!==y.cache&&ld(o,[rn],u,!0),et(),b=P.element,Ri&&y.isDehydrated)if(y={element:b,isDehydrated:!1,cache:P.cache},o.updateQueue.baseState=y,o.memoizedState=y,o.flags&256){o=x0(a,o,b,u);break t}else if(b!==d){d=st(Error(i(424)),o),ee(d),o=x0(a,o,b,u);break t}else for(Ri&&(Hn=nE(o.stateNode.containerInfo),Jn=o,Ie=!0,Yi=null,rs=!0),u=jv(o,null,b,u),o.child=u;u;)u.flags=u.flags&-3|4096,u=u.sibling;else{if(ce(),b===d){o=bs(a,o,u);break t}Rn(a,o,b,u)}o=o.child}return o;case 26:if(Di)return il(a,o),a===null?(u=Bv(o.type,null,o.pendingProps,null))?o.memoizedState=u:Ie||(o.stateNode=_E(o.type,o.pendingProps,la.current,o)):o.memoizedState=Bv(o.type,a.memoizedProps,o.pendingProps,a.memoizedState),null;case 27:if(Fn)return Yt(o),a===null&&Fn&&Ie&&(d=o.stateNode=Wv(o.type,o.pendingProps,la.current,Dn.current,!1),Jn=o,rs=!0,Hn=Iv(d)),d=o.pendingProps.children,a!==null||Ie?Rn(a,o,d,u):o.child=Wa(o,null,d,u),il(a,o),o.child;case 5:return a===null&&Ie&&(mE(o.type,o.pendingProps,Dn.current),(y=d=Hn)&&(d=sE(d,o.type,o.pendingProps,rs),d!==null?(o.stateNode=d,Jn=o,Hn=Iv(d),rs=!1,y=!0):y=!1),y||Vt(o)),Yt(o),y=o.type,b=o.pendingProps,P=a!==null?a.memoizedProps:null,d=b.children,Xc(y,b)?d=null:P!==null&&Xc(y,P)&&(o.flags|=32),o.memoizedState!==null&&(y=Pr(a,o,Xf,null,null,u),ws?Ga._currentValue=y:Ga._currentValue2=y),il(a,o),Rn(a,o,d,u),o.child;case 6:return a===null&&Ie&&(gE(o.pendingProps,Dn.current),(a=u=Hn)&&(u=aE(u,o.pendingProps,rs),u!==null?(o.stateNode=u,Jn=o,Hn=null,a=!0):a=!1),a||Vt(o)),null;case 13:return S0(a,o,u);case 4:return tt(o,o.stateNode.containerInfo),d=o.pendingProps,a===null?o.child=Wa(o,null,d,u):Rn(a,o,d,u),o.child;case 11:return d0(a,o,o.type,o.pendingProps,u);case 7:return Rn(a,o,o.pendingProps,u),o.child;case 8:return Rn(a,o,o.pendingProps.children,u),o.child;case 12:return Rn(a,o,o.pendingProps.children,u),o.child;case 10:return d=o.pendingProps,ta(o,o.type,d.value),Rn(a,o,d.children,u),o.child;case 9:return y=o.type._context,d=o.pendingProps.children,Oa(o),y=zn(y),d=d(y),o.flags|=1,Rn(a,o,d,u),o.child;case 14:return p0(a,o,o.type,o.pendingProps,u);case 15:return m0(a,o,o.type,o.pendingProps,u);case 19:return b0(a,o,u);case 22:return g0(a,o,u);case 24:return Oa(o),d=zn(rn),a===null?(y=ud(),y===null&&(y=Ke,b=cd(),y.pooledCache=b,b.refCount++,b!==null&&(y.pooledCacheLanes|=u),y=b),o.memoizedState={parent:d,cache:y},Kt(o),ta(o,rn,y)):((a.lanes&u)!==0&&(Qt(a,o),Tt(o,null,null,u),et()),y=a.memoizedState,b=o.memoizedState,y.parent!==d?(y={parent:d,cache:d},o.memoizedState=y,o.lanes===0&&(o.memoizedState=o.updateQueue.baseState=y),ta(o,rn,d)):(d=b.cache,ta(o,rn,d),d!==y.cache&&ld(o,[rn],u,!0))),Rn(a,o,o.pendingProps.children,u),o.child;case 29:throw o.pendingProps}throw Error(i(156,o.tag))}function ta(a,o,u){ws?(E(su,o._currentValue),o._currentValue=u):(E(su,o._currentValue2),o._currentValue2=u)}function Es(a){var o=su.current;ws?a._currentValue=o:a._currentValue2=o,_(su)}function od(a,o,u){for(;a!==null;){var d=a.alternate;if((a.childLanes&o)!==o?(a.childLanes|=o,d!==null&&(d.childLanes|=o)):d!==null&&(d.childLanes&o)!==o&&(d.childLanes|=o),a===u)break;a=a.return}}function ld(a,o,u,d){var y=a.child;for(y!==null&&(y.return=a);y!==null;){var b=y.dependencies;if(b!==null){var P=y.child;b=b.firstContext;t:for(;b!==null;){var W=b;b=y;for(var K=0;K<o.length;K++)if(W.context===o[K]){b.lanes|=u,W=b.alternate,W!==null&&(W.lanes|=u),od(b.return,u,a),d||(P=null);break t}b=W.next}}else if(y.tag===18){if(P=y.return,P===null)throw Error(i(341));P.lanes|=u,b=P.alternate,b!==null&&(b.lanes|=u),od(P,u,a),P=null}else P=y.child;if(P!==null)P.return=y;else for(P=y;P!==null;){if(P===a){P=null;break}if(y=P.sibling,y!==null){y.return=P.return,P=y;break}P=P.return}y=P}}function sl(a,o,u,d){a=null;for(var y=o,b=!1;y!==null;){if(!b){if((y.flags&524288)!==0)b=!0;else if((y.flags&262144)!==0)break}if(y.tag===10){var P=y.alternate;if(P===null)throw Error(i(387));if(P=P.memoizedProps,P!==null){var W=y.type;yi(y.pendingProps.value,P.value)||(a!==null?a.push(W):a=[W])}}else if(y===Jc.current){if(P=y.alternate,P===null)throw Error(i(387));P.memoizedState.memoizedState!==y.memoizedState.memoizedState&&(a!==null?a.push(Ga):a=[Ga])}y=y.return}a!==null&&ld(o,a,u,d),o.flags|=262144}function Ic(a){for(a=a.firstContext;a!==null;){var o=a.context;if(!yi(ws?o._currentValue:o._currentValue2,a.memoizedValue))return!0;a=a.next}return!1}function Oa(a){ja=a,Ds=null,a=a.dependencies,a!==null&&(a.firstContext=null)}function zn(a){return T0(ja,a)}function Oc(a,o){return ja===null&&Oa(a),T0(a,o)}function T0(a,o){var u=ws?o._currentValue:o._currentValue2;if(o={context:o,memoizedValue:u,next:null},Ds===null){if(a===null)throw Error(i(308));Ds=o,a.dependencies={lanes:0,firstContext:o},a.flags|=524288}else Ds=Ds.next=o;return u}function cd(){return{controller:new IE,data:new Map,refCount:0}}function al(a){a.refCount--,a.refCount===0&&OE(zE,function(){a.controller.abort()})}function ud(){var a=Za.current;return a!==null?a:Ke.pooledCache}function zc(a,o){o===null?E(Za,Za.current):E(Za,o.pool)}function A0(){var a=ud();return a===null?null:{parent:ws?rn._currentValue:rn._currentValue2,pool:a}}function fi(a){a.flags|=4}function w0(a,o){if(a!==null&&a.child===o.child)return!1;if((o.flags&16)!==0)return!0;for(a=o.child;a!==null;){if((a.flags&13878)!==0||(a.subtreeFlags&13878)!==0)return!0;a=a.sibling}return!1}function hd(a,o,u,d){if(Bn)for(u=o.child;u!==null;){if(u.tag===5||u.tag===6)Vd(a,u.stateNode);else if(!(u.tag===4||Fn&&u.tag===27)&&u.child!==null){u.child.return=u,u=u.child;continue}if(u===o)break;for(;u.sibling===null;){if(u.return===null||u.return===o)return;u=u.return}u.sibling.return=u.return,u=u.sibling}else if(oa)for(var y=o.child;y!==null;){if(y.tag===5){var b=y.stateNode;u&&d&&(b=Pv(b,y.type,y.memoizedProps)),Vd(a,b)}else if(y.tag===6)b=y.stateNode,u&&d&&(b=Nv(b,y.memoizedProps)),Vd(a,b);else if(y.tag!==4){if(y.tag===22&&y.memoizedState!==null)b=y.child,b!==null&&(b.return=y),hd(a,y,!0,!0);else if(y.child!==null){y.child.return=y,y=y.child;continue}}if(y===o)break;for(;y.sibling===null;){if(y.return===null||y.return===o)return;y=y.return}y.sibling.return=y.return,y=y.sibling}}function C0(a,o,u,d){if(oa)for(var y=o.child;y!==null;){if(y.tag===5){var b=y.stateNode;u&&d&&(b=Pv(b,y.type,y.memoizedProps)),Dv(a,b)}else if(y.tag===6)b=y.stateNode,u&&d&&(b=Nv(b,y.memoizedProps)),Dv(a,b);else if(y.tag!==4){if(y.tag===22&&y.memoizedState!==null)b=y.child,b!==null&&(b.return=y),C0(a,y,!(y.memoizedProps!==null&&y.memoizedProps.mode==="manual"),!0);else if(y.child!==null){y.child.return=y,y=y.child;continue}}if(y===o)break;for(;y.sibling===null;){if(y.return===null||y.return===o)return;y=y.return}y.sibling.return=y.return,y=y.sibling}}function R0(a,o){if(oa&&w0(a,o)){a=o.stateNode;var u=a.containerInfo,d=Rv();C0(d,o,!1,!1),a.pendingChildren=d,fi(o),Jb(u,d)}}function fd(a,o,u,d){if(Bn)a.memoizedProps!==d&&fi(o);else if(oa){var y=a.stateNode,b=a.memoizedProps;if((a=w0(a,o))||b!==d){var P=Dn.current;b=Kb(y,u,b,d,!a,null),b===y?o.stateNode=y:(bv(b,u,d,P)&&fi(o),o.stateNode=b,a?hd(b,o,!1,!1):fi(o))}else o.stateNode=y}}function dd(a,o,u){if(Eb(o,u)){if(a.flags|=16777216,!Av(o,u))if(tv())a.flags|=8192;else throw Zr=tu,ep}else a.flags&=-16777217}function D0(a,o){if(xE(o)){if(a.flags|=16777216,!kv(o))if(tv())a.flags|=8192;else throw Zr=tu,ep}else a.flags&=-16777217}function Bc(a,o){o!==null&&(a.flags|=4),a.flags&16384&&(o=a.tag!==22?C():536870912,a.lanes|=o,no|=o)}function rl(a,o){if(!Ie)switch(a.tailMode){case"hidden":o=a.tail;for(var u=null;o!==null;)o.alternate!==null&&(u=o),o=o.sibling;u===null?a.tail=null:u.sibling=null;break;case"collapsed":u=a.tail;for(var d=null;u!==null;)u.alternate!==null&&(d=u),u=u.sibling;d===null?o||a.tail===null?a.tail=null:a.tail.sibling=null:d.sibling=null}}function nn(a){var o=a.alternate!==null&&a.alternate.child===a.child,u=0,d=0;if(o)for(var y=a.child;y!==null;)u|=y.lanes|y.childLanes,d|=y.subtreeFlags&31457280,d|=y.flags&31457280,y.return=a,y=y.sibling;else for(y=a.child;y!==null;)u|=y.lanes|y.childLanes,d|=y.subtreeFlags,d|=y.flags,y.return=a,y=y.sibling;return a.subtreeFlags|=d,a.childLanes=u,o}function XM(a,o,u){var d=o.pendingProps;switch(Xt(o),o.tag){case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return nn(o),null;case 1:return nn(o),null;case 3:return u=o.stateNode,d=null,a!==null&&(d=a.memoizedState.cache),o.memoizedState.cache!==d&&(o.flags|=2048),Es(rn),yt(),u.pendingContext&&(u.context=u.pendingContext,u.pendingContext=null),(a===null||a.child===null)&&(ne(o)?fi(o):a===null||a.memoizedState.isDehydrated&&(o.flags&256)===0||(o.flags|=1024,Yi!==null&&(Ed(Yi),Yi=null))),R0(a,o),nn(o),null;case 26:if(Di){u=o.type;var y=o.memoizedState;return a===null?(fi(o),y!==null?(nn(o),D0(o,y)):(nn(o),dd(o,u,d))):y?y!==a.memoizedState?(fi(o),nn(o),D0(o,y)):(nn(o),o.flags&=-16777217):(Bn?a.memoizedProps!==d&&fi(o):fd(a,o,u,d),nn(o),dd(o,u,d)),null}case 27:if(Fn){if(Nt(o),u=la.current,y=o.type,a!==null&&o.stateNode!=null)Bn?a.memoizedProps!==d&&fi(o):fd(a,o,y,d);else{if(!d){if(o.stateNode===null)throw Error(i(166));return nn(o),null}a=Dn.current,ne(o)?fe(o,a):(a=Wv(y,d,u,a,!0),o.stateNode=a,fi(o))}return nn(o),null}case 5:if(Nt(o),u=o.type,a!==null&&o.stateNode!=null)fd(a,o,u,d);else{if(!d){if(o.stateNode===null)throw Error(i(166));return nn(o),null}a=Dn.current,ne(o)?fe(o,a):(y=vb(u,d,la.current,a,o),hd(y,o,!1,!1),o.stateNode=y,bv(y,u,d,a)&&fi(o))}return nn(o),dd(o,o.type,o.pendingProps),null;case 6:if(a&&o.stateNode!=null)u=a.memoizedProps,Bn?u!==d&&fi(o):oa&&(u!==d?(o.stateNode=Ev(d,la.current,Dn.current,o),fi(o)):o.stateNode=a.stateNode);else{if(typeof d!="string"&&o.stateNode===null)throw Error(i(166));if(a=la.current,u=Dn.current,ne(o)){if(!Ri)throw Error(i(176));if(a=o.stateNode,u=o.memoizedProps,d=null,y=Jn,y!==null)switch(y.tag){case 27:case 5:d=y.memoizedProps}lE(a,u,o,d)||Vt(o)}else o.stateNode=Ev(d,a,u,o)}return nn(o),null;case 13:if(d=o.memoizedState,a===null||a.memoizedState!==null&&a.memoizedState.dehydrated!==null){if(y=ne(o),d!==null&&d.dehydrated!==null){if(a===null){if(!y)throw Error(i(318));if(!Ri)throw Error(i(344));if(y=o.memoizedState,y=y!==null?y.dehydrated:null,!y)throw Error(i(317));cE(y,o)}else ce(),(o.flags&128)===0&&(o.memoizedState=null),o.flags|=4;nn(o),y=!1}else Yi!==null&&(Ed(Yi),Yi=null),y=!0;if(!y)return o.flags&256?(si(o),o):(si(o),null)}if(si(o),(o.flags&128)!==0)return o.lanes=u,o;if(u=d!==null,a=a!==null&&a.memoizedState!==null,u){d=o.child,y=null,d.alternate!==null&&d.alternate.memoizedState!==null&&d.alternate.memoizedState.cachePool!==null&&(y=d.alternate.memoizedState.cachePool.pool);var b=null;d.memoizedState!==null&&d.memoizedState.cachePool!==null&&(b=d.memoizedState.cachePool.pool),b!==y&&(d.flags|=2048)}return u!==a&&u&&(o.child.flags|=8192),Bc(o,o.updateQueue),nn(o),null;case 4:return yt(),R0(a,o),a===null&&xb(o.stateNode.containerInfo),nn(o),null;case 10:return Es(o.type),nn(o),null;case 19:if(_(gn),y=o.memoizedState,y===null)return nn(o),null;if(d=(o.flags&128)!==0,b=y.rendering,b===null)if(d)rl(y,!1);else{if(ln!==0||a!==null&&(a.flags&128)!==0)for(a=o.child;a!==null;){if(b=La(a),b!==null){for(o.flags|=128,rl(y,!1),a=b.updateQueue,o.updateQueue=a,Bc(o,a),o.subtreeFlags=0,a=u,u=o.child;u!==null;)uv(u,a),u=u.sibling;return E(gn,gn.current&1|2),o.child}a=a.sibling}y.tail!==null&&qi()>Sl&&(o.flags|=128,d=!0,rl(y,!1),o.lanes=4194304)}else{if(!d)if(a=La(b),a!==null){if(o.flags|=128,d=!0,a=a.updateQueue,o.updateQueue=a,Bc(o,a),rl(y,!0),y.tail===null&&y.tailMode==="hidden"&&!b.alternate&&!Ie)return nn(o),null}else 2*qi()-y.renderingStartTime>Sl&&u!==536870912&&(o.flags|=128,d=!0,rl(y,!1),o.lanes=4194304);y.isBackwards?(b.sibling=o.child,o.child=b):(a=y.last,a!==null?a.sibling=b:o.child=b,y.last=b)}return y.tail!==null?(o=y.tail,y.rendering=o,y.tail=o.sibling,y.renderingStartTime=qi(),o.sibling=null,a=gn.current,E(gn,d?a&1|2:a&1),o):(nn(o),null);case 22:case 23:return si(o),ki(),d=o.memoizedState!==null,a!==null?a.memoizedState!==null!==d&&(o.flags|=8192):d&&(o.flags|=8192),d?(u&536870912)!==0&&(o.flags&128)===0&&(nn(o),o.subtreeFlags&6&&(o.flags|=8192)):nn(o),u=o.updateQueue,u!==null&&Bc(o,u.retryQueue),u=null,a!==null&&a.memoizedState!==null&&a.memoizedState.cachePool!==null&&(u=a.memoizedState.cachePool.pool),d=null,o.memoizedState!==null&&o.memoizedState.cachePool!==null&&(d=o.memoizedState.cachePool.pool),d!==u&&(o.flags|=2048),a!==null&&_(Za),null;case 24:return u=null,a!==null&&(u=a.memoizedState.cache),o.memoizedState.cache!==u&&(o.flags|=2048),Es(rn),nn(o),null;case 25:return null}throw Error(i(156,o.tag))}function qM(a,o){switch(Xt(o),o.tag){case 1:return a=o.flags,a&65536?(o.flags=a&-65537|128,o):null;case 3:return Es(rn),yt(),a=o.flags,(a&65536)!==0&&(a&128)===0?(o.flags=a&-65537|128,o):null;case 26:case 27:case 5:return Nt(o),null;case 13:if(si(o),a=o.memoizedState,a!==null&&a.dehydrated!==null){if(o.alternate===null)throw Error(i(340));ce()}return a=o.flags,a&65536?(o.flags=a&-65537|128,o):null;case 19:return _(gn),null;case 4:return yt(),null;case 10:return Es(o.type),null;case 22:case 23:return si(o),ki(),a!==null&&_(Za),a=o.flags,a&65536?(o.flags=a&-65537|128,o):null;case 24:return Es(rn),null;case 25:return null;default:return null}}function U0(a,o){switch(Xt(o),o.tag){case 3:Es(rn),yt();break;case 26:case 27:case 5:Nt(o);break;case 4:yt();break;case 13:si(o);break;case 19:_(gn);break;case 10:Es(o.type);break;case 22:case 23:si(o),ki(),a!==null&&_(Za);break;case 24:Es(rn)}}function ol(a,o){try{var u=o.updateQueue,d=u!==null?u.lastEffect:null;if(d!==null){var y=d.next;u=y;do{if((u.tag&a)===a){d=void 0;var b=u.create,P=u.inst;d=b(),P.destroy=d}u=u.next}while(u!==y)}}catch(W){Ge(o,o.return,W)}}function ea(a,o,u){try{var d=o.updateQueue,y=d!==null?d.lastEffect:null;if(y!==null){var b=y.next;d=b;do{if((d.tag&a)===a){var P=d.inst,W=P.destroy;if(W!==void 0){P.destroy=void 0,y=o;var K=u;try{W()}catch(mt){Ge(y,K,mt)}}}d=d.next}while(d!==b)}}catch(mt){Ge(o,o.return,mt)}}function P0(a){var o=a.updateQueue;if(o!==null){var u=a.stateNode;try{wt(o,u)}catch(d){Ge(a,a.return,d)}}}function N0(a,o,u){u.props=Ia(a.type,a.memoizedProps),u.state=a.memoizedState;try{u.componentWillUnmount()}catch(d){Ge(a,o,d)}}function za(a,o){try{var u=a.ref;if(u!==null){var d=a.stateNode;switch(a.tag){case 26:case 27:case 5:var y=ul(d);break;default:y=d}typeof u=="function"?a.refCleanup=u(y):u.current=y}}catch(b){Ge(a,o,b)}}function di(a,o){var u=a.ref,d=a.refCleanup;if(u!==null)if(typeof d=="function")try{d()}catch(y){Ge(a,o,y)}finally{a.refCleanup=null,a=a.alternate,a!=null&&(a.refCleanup=null)}else if(typeof u=="function")try{u(null)}catch(y){Ge(a,o,y)}else u.current=null}function L0(a){var o=a.type,u=a.memoizedProps,d=a.stateNode;try{Fb(d,o,u,a)}catch(y){Ge(a,a.return,y)}}function I0(a,o,u){try{Hb(a.stateNode,a.type,u,o,a)}catch(d){Ge(a,a.return,d)}}function O0(a){return a.tag===5||a.tag===3||(Di?a.tag===26:!1)||(Fn?a.tag===27:!1)||a.tag===4}function pd(a){t:for(;;){for(;a.sibling===null;){if(a.return===null||O0(a.return))return null;a=a.return}for(a.sibling.return=a.return,a=a.sibling;a.tag!==5&&a.tag!==6&&(!Fn||a.tag!==27)&&a.tag!==18;){if(a.flags&2||a.child===null||a.tag===4)continue t;a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}function md(a,o,u){var d=a.tag;if(d===5||d===6)a=a.stateNode,o?Gb(u,a,o):zb(u,a);else if(!(d===4||Fn&&d===27)&&(a=a.child,a!==null))for(md(a,o,u),a=a.sibling;a!==null;)md(a,o,u),a=a.sibling}function Fc(a,o,u){var d=a.tag;if(d===5||d===6)a=a.stateNode,o?Vb(u,a,o):Ob(u,a);else if(!(d===4||Fn&&d===27)&&(a=a.child,a!==null))for(Fc(a,o,u),a=a.sibling;a!==null;)Fc(a,o,u),a=a.sibling}function z0(a,o,u){a=a.containerInfo;try{Uv(a,u)}catch(d){Ge(o,o.return,d)}}function YM(a,o){for(mb(a.containerInfo),bn=o;bn!==null;)if(a=bn,o=a.child,(a.subtreeFlags&1028)!==0&&o!==null)o.return=a,bn=o;else for(;bn!==null;){a=bn;var u=a.alternate;switch(o=a.flags,a.tag){case 0:break;case 11:case 15:break;case 1:if((o&1024)!==0&&u!==null){o=void 0;var d=a,y=u.memoizedProps;u=u.memoizedState;var b=d.stateNode;try{var P=Ia(d.type,y,d.elementType===d.type);o=b.getSnapshotBeforeUpdate(P,u),b.__reactInternalSnapshotBeforeUpdate=o}catch(W){Ge(d,d.return,W)}}break;case 3:(o&1024)!==0&&Bn&&Zb(a.stateNode.containerInfo);break;case 5:case 26:case 27:case 6:case 4:case 17:break;default:if((o&1024)!==0)throw Error(i(163))}if(o=a.sibling,o!==null){o.return=a.return,bn=o;break}bn=a.return}return P=$v,$v=!1,P}function B0(a,o,u){var d=u.flags;switch(u.tag){case 0:case 11:case 15:Ts(a,u),d&4&&ol(5,u);break;case 1:if(Ts(a,u),d&4)if(a=u.stateNode,o===null)try{a.componentDidMount()}catch(W){Ge(u,u.return,W)}else{var y=Ia(u.type,o.memoizedProps);o=o.memoizedState;try{a.componentDidUpdate(y,o,a.__reactInternalSnapshotBeforeUpdate)}catch(W){Ge(u,u.return,W)}}d&64&&P0(u),d&512&&za(u,u.return);break;case 3:if(Ts(a,u),d&64&&(d=u.updateQueue,d!==null)){if(a=null,u.child!==null)switch(u.child.tag){case 27:case 5:a=ul(u.child.stateNode);break;case 1:a=u.child.stateNode}try{wt(d,a)}catch(W){Ge(u,u.return,W)}}break;case 26:if(Di){Ts(a,u),d&512&&za(u,u.return);break}case 27:case 5:Ts(a,u),o===null&&d&4&&L0(u),d&512&&za(u,u.return);break;case 12:Ts(a,u);break;case 13:Ts(a,u),d&4&&H0(a,u);break;case 22:if(y=u.memoizedState!==null||Us,!y){o=o!==null&&o.memoizedState!==null||on;var b=Us,P=on;Us=y,(on=o)&&!P?na(a,u,(u.subtreeFlags&8772)!==0):Ts(a,u),Us=b,on=P}d&512&&(u.memoizedProps.mode==="manual"?za(u,u.return):di(u,u.return));break;default:Ts(a,u)}}function F0(a){var o=a.alternate;o!==null&&(a.alternate=null,F0(o)),a.child=null,a.deletions=null,a.sibling=null,a.tag===5&&(o=a.stateNode,o!==null&&bb(o)),a.stateNode=null,a.return=null,a.dependencies=null,a.memoizedProps=null,a.memoizedState=null,a.pendingProps=null,a.stateNode=null,a.updateQueue=null}function Xi(a,o,u){for(u=u.child;u!==null;)gd(a,o,u),u=u.sibling}function gd(a,o,u){if(_i&&typeof _i.onCommitFiberUnmount=="function")try{_i.onCommitFiberUnmount(dl,u)}catch{}switch(u.tag){case 26:if(Di){on||di(u,o),Xi(a,o,u),u.memoizedState?Hv(u.memoizedState):u.stateNode&&Gv(u.stateNode);break}case 27:if(Fn){on||di(u,o);var d=pn,y=xi;pn=u.stateNode,Xi(a,o,u),EE(u.stateNode),pn=d,xi=y;break}case 5:on||di(u,o);case 6:if(Bn){if(d=pn,y=xi,pn=null,Xi(a,o,u),pn=d,xi=y,pn!==null)if(xi)try{Wb(pn,u.stateNode)}catch(b){Ge(u,o,b)}else try{kb(pn,u.stateNode)}catch(b){Ge(u,o,b)}}else Xi(a,o,u);break;case 18:Bn&&pn!==null&&(xi?pE(pn,u.stateNode):dE(pn,u.stateNode));break;case 4:Bn?(d=pn,y=xi,pn=u.stateNode.containerInfo,xi=!0,Xi(a,o,u),pn=d,xi=y):(oa&&z0(u.stateNode,u,Rv()),Xi(a,o,u));break;case 0:case 11:case 14:case 15:on||ea(2,u,o),on||ea(4,u,o),Xi(a,o,u);break;case 1:on||(di(u,o),d=u.stateNode,typeof d.componentWillUnmount=="function"&&N0(u,o,d)),Xi(a,o,u);break;case 21:Xi(a,o,u);break;case 22:on||di(u,o),on=(d=on)||u.memoizedState!==null,Xi(a,o,u),on=d;break;default:Xi(a,o,u)}}function H0(a,o){if(Ri&&o.memoizedState===null&&(a=o.alternate,a!==null&&(a=a.memoizedState,a!==null&&(a=a.dehydrated,a!==null))))try{fE(a)}catch(u){Ge(o,o.return,u)}}function jM(a){switch(a.tag){case 13:case 19:var o=a.stateNode;return o===null&&(o=a.stateNode=new Qv),o;case 22:return a=a.stateNode,o=a._retryCache,o===null&&(o=a._retryCache=new Qv),o;default:throw Error(i(435,a.tag))}}function vd(a,o){var u=jM(a);o.forEach(function(d){var y=nb.bind(null,a,d);u.has(d)||(u.add(d),d.then(y,y))})}function ai(a,o){var u=o.deletions;if(u!==null)for(var d=0;d<u.length;d++){var y=u[d],b=a,P=o;if(Bn){var W=P;t:for(;W!==null;){switch(W.tag){case 27:case 5:pn=W.stateNode,xi=!1;break t;case 3:pn=W.stateNode.containerInfo,xi=!0;break t;case 4:pn=W.stateNode.containerInfo,xi=!0;break t}W=W.return}if(pn===null)throw Error(i(160));gd(b,P,y),pn=null,xi=!1}else gd(b,P,y);b=y.alternate,b!==null&&(b.return=null),y.return=null}if(o.subtreeFlags&13878)for(o=o.child;o!==null;)V0(o,a),o=o.sibling}function V0(a,o){var u=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:ai(o,a),pi(a),d&4&&(ea(3,a,a.return),ol(3,a),ea(5,a,a.return));break;case 1:ai(o,a),pi(a),d&512&&(on||u===null||di(u,u.return)),d&64&&Us&&(a=a.updateQueue,a!==null&&(d=a.callbacks,d!==null&&(u=a.shared.hiddenCallbacks,a.shared.hiddenCallbacks=u===null?d:u.concat(d))));break;case 26:if(Di){var y=ji;ai(o,a),pi(a),d&512&&(on||u===null||di(u,u.return)),d&4&&(d=u!==null?u.memoizedState:null,o=a.memoizedState,u===null?o===null?a.stateNode===null?a.stateNode=vE(y,a.type,a.memoizedProps,a):Vv(y,a.type,a.stateNode):a.stateNode=Fv(y,o,a.memoizedProps):d!==o?(d===null?u.stateNode!==null&&Gv(u.stateNode):Hv(d),o===null?Vv(y,a.type,a.stateNode):Fv(y,o,a.memoizedProps)):o===null&&a.stateNode!==null&&I0(a,a.memoizedProps,u.memoizedProps));break}case 27:if(Fn&&d&4&&a.alternate===null){y=a.stateNode;var b=a.memoizedProps;try{ME(y),bE(a.type,b,y,a)}catch(Ut){Ge(a,a.return,Ut)}}case 5:if(ai(o,a),pi(a),d&512&&(on||u===null||di(u,u.return)),Bn){if(a.flags&32){o=a.stateNode;try{Cv(o)}catch(Ut){Ge(a,a.return,Ut)}}d&4&&a.stateNode!=null&&(o=a.memoizedProps,I0(a,o,u!==null?u.memoizedProps:o)),d&1024&&(ap=!0)}break;case 6:if(ai(o,a),pi(a),d&4&&Bn){if(a.stateNode===null)throw Error(i(162));d=a.memoizedProps,u=u!==null?u.memoizedProps:d,o=a.stateNode;try{Bb(o,u,d)}catch(Ut){Ge(a,a.return,Ut)}}break;case 3:if(Di?(yE(),y=ji,ji=Xd(o.containerInfo),ai(o,a),ji=y):ai(o,a),pi(a),d&4){if(Bn&&Ri&&u!==null&&u.memoizedState.isDehydrated)try{hE(o.containerInfo)}catch(Ut){Ge(a,a.return,Ut)}if(oa){d=o.containerInfo,u=o.pendingChildren;try{Uv(d,u)}catch(Ut){Ge(a,a.return,Ut)}}}ap&&(ap=!1,G0(a));break;case 4:Di?(u=ji,ji=Xd(a.stateNode.containerInfo),ai(o,a),pi(a),ji=u):(ai(o,a),pi(a)),d&4&&oa&&z0(a.stateNode,a,a.stateNode.pendingChildren);break;case 12:ai(o,a),pi(a);break;case 13:ai(o,a),pi(a),a.child.flags&8192&&a.memoizedState!==null!=(u!==null&&u.memoizedState!==null)&&(cp=qi()),d&4&&(d=a.updateQueue,d!==null&&(a.updateQueue=null,vd(a,d)));break;case 22:d&512&&(on||u===null||di(u,u.return)),y=a.memoizedState!==null;var P=u!==null&&u.memoizedState!==null,W=Us,K=on;if(Us=W||y,on=K||P,ai(o,a),on=K,Us=W,pi(a),o=a.stateNode,o._current=a,o._visibility&=-3,o._visibility|=o._pendingVisibility&2,d&8192&&(o._visibility=y?o._visibility&-2:o._visibility|1,y&&(o=Us||on,u===null||P||o||Nr(a)),Bn&&(a.memoizedProps===null||a.memoizedProps.mode!=="manual"))){t:if(u=null,Bn)for(o=a;;){if(o.tag===5||Di&&o.tag===26||Fn&&o.tag===27){if(u===null){P=u=o;try{b=P.stateNode,y?Xb(b):Yb(P.stateNode,P.memoizedProps)}catch(Ut){Ge(P,P.return,Ut)}}}else if(o.tag===6){if(u===null){P=o;try{var mt=P.stateNode;y?qb(mt):jb(mt,P.memoizedProps)}catch(Ut){Ge(P,P.return,Ut)}}}else if((o.tag!==22&&o.tag!==23||o.memoizedState===null||o===a)&&o.child!==null){o.child.return=o,o=o.child;continue}if(o===a)break t;for(;o.sibling===null;){if(o.return===null||o.return===a)break t;u===o&&(u=null),o=o.return}u===o&&(u=null),o.sibling.return=o.return,o=o.sibling}}d&4&&(d=a.updateQueue,d!==null&&(u=d.retryQueue,u!==null&&(d.retryQueue=null,vd(a,u))));break;case 19:ai(o,a),pi(a),d&4&&(d=a.updateQueue,d!==null&&(a.updateQueue=null,vd(a,d)));break;case 21:break;default:ai(o,a),pi(a)}}function pi(a){var o=a.flags;if(o&2){try{if(Bn&&(!Fn||a.tag!==27)){t:{for(var u=a.return;u!==null;){if(O0(u)){var d=u;break t}u=u.return}throw Error(i(160))}switch(d.tag){case 27:if(Fn){var y=d.stateNode,b=pd(a);Fc(a,b,y);break}case 5:var P=d.stateNode;d.flags&32&&(Cv(P),d.flags&=-33);var W=pd(a);Fc(a,W,P);break;case 3:case 4:var K=d.stateNode.containerInfo,mt=pd(a);md(a,mt,K);break;default:throw Error(i(161))}}}catch(Ut){Ge(a,a.return,Ut)}a.flags&=-3}o&4096&&(a.flags&=-4097)}function G0(a){if(a.subtreeFlags&1024)for(a=a.child;a!==null;){var o=a;G0(o),o.tag===5&&o.flags&1024&&wb(o.stateNode),a=a.sibling}}function Ts(a,o){if(o.subtreeFlags&8772)for(o=o.child;o!==null;)B0(a,o.alternate,o),o=o.sibling}function Nr(a){for(a=a.child;a!==null;){var o=a;switch(o.tag){case 0:case 11:case 14:case 15:ea(4,o,o.return),Nr(o);break;case 1:di(o,o.return);var u=o.stateNode;typeof u.componentWillUnmount=="function"&&N0(o,o.return,u),Nr(o);break;case 26:case 27:case 5:di(o,o.return),Nr(o);break;case 22:di(o,o.return),o.memoizedState===null&&Nr(o);break;default:Nr(o)}a=a.sibling}}function na(a,o,u){for(u=u&&(o.subtreeFlags&8772)!==0,o=o.child;o!==null;){var d=o.alternate,y=a,b=o,P=b.flags;switch(b.tag){case 0:case 11:case 15:na(y,b,u),ol(4,b);break;case 1:if(na(y,b,u),d=b,y=d.stateNode,typeof y.componentDidMount=="function")try{y.componentDidMount()}catch(mt){Ge(d,d.return,mt)}if(d=b,y=d.updateQueue,y!==null){var W=d.stateNode;try{var K=y.shared.hiddenCallbacks;if(K!==null)for(y.shared.hiddenCallbacks=null,y=0;y<K.length;y++)V(K[y],W)}catch(mt){Ge(d,d.return,mt)}}u&&P&64&&P0(b),za(b,b.return);break;case 26:case 27:case 5:na(y,b,u),u&&d===null&&P&4&&L0(b),za(b,b.return);break;case 12:na(y,b,u);break;case 13:na(y,b,u),u&&P&4&&H0(y,b);break;case 22:b.memoizedState===null&&na(y,b,u),za(b,b.return);break;default:na(y,b,u)}o=o.sibling}}function _d(a,o){var u=null;a!==null&&a.memoizedState!==null&&a.memoizedState.cachePool!==null&&(u=a.memoizedState.cachePool.pool),a=null,o.memoizedState!==null&&o.memoizedState.cachePool!==null&&(a=o.memoizedState.cachePool.pool),a!==u&&(a!=null&&a.refCount++,u!=null&&al(u))}function yd(a,o){a=null,o.alternate!==null&&(a=o.alternate.memoizedState.cache),o=o.memoizedState.cache,o!==a&&(o.refCount++,a!=null&&al(a))}function ia(a,o,u,d){if(o.subtreeFlags&10256)for(o=o.child;o!==null;)k0(a,o,u,d),o=o.sibling}function k0(a,o,u,d){var y=o.flags;switch(o.tag){case 0:case 11:case 15:ia(a,o,u,d),y&2048&&ol(9,o);break;case 3:ia(a,o,u,d),y&2048&&(a=null,o.alternate!==null&&(a=o.alternate.memoizedState.cache),o=o.memoizedState.cache,o!==a&&(o.refCount++,a!=null&&al(a)));break;case 12:if(y&2048){ia(a,o,u,d),a=o.stateNode;try{var b=o.memoizedProps,P=b.id,W=b.onPostCommit;typeof W=="function"&&W(P,o.alternate===null?"mount":"update",a.passiveEffectDuration,-0)}catch(K){Ge(o,o.return,K)}}else ia(a,o,u,d);break;case 23:break;case 22:b=o.stateNode,o.memoizedState!==null?b._visibility&4?ia(a,o,u,d):ll(a,o):b._visibility&4?ia(a,o,u,d):(b._visibility|=4,Lr(a,o,u,d,(o.subtreeFlags&10256)!==0)),y&2048&&_d(o.alternate,o);break;case 24:ia(a,o,u,d),y&2048&&yd(o.alternate,o);break;default:ia(a,o,u,d)}}function Lr(a,o,u,d,y){for(y=y&&(o.subtreeFlags&10256)!==0,o=o.child;o!==null;){var b=a,P=o,W=u,K=d,mt=P.flags;switch(P.tag){case 0:case 11:case 15:Lr(b,P,W,K,y),ol(8,P);break;case 23:break;case 22:var Ut=P.stateNode;P.memoizedState!==null?Ut._visibility&4?Lr(b,P,W,K,y):ll(b,P):(Ut._visibility|=4,Lr(b,P,W,K,y)),y&&mt&2048&&_d(P.alternate,P);break;case 24:Lr(b,P,W,K,y),y&&mt&2048&&yd(P.alternate,P);break;default:Lr(b,P,W,K,y)}o=o.sibling}}function ll(a,o){if(o.subtreeFlags&10256)for(o=o.child;o!==null;){var u=a,d=o,y=d.flags;switch(d.tag){case 22:ll(u,d),y&2048&&_d(d.alternate,d);break;case 24:ll(u,d),y&2048&&yd(d.alternate,d);break;default:ll(u,d)}o=o.sibling}}function Ba(a){if(a.subtreeFlags&to)for(a=a.child;a!==null;)W0(a),a=a.sibling}function W0(a){switch(a.tag){case 26:Ba(a),a.flags&to&&(a.memoizedState!==null?SE(ji,a.memoizedState,a.memoizedProps):wv(a.type,a.memoizedProps));break;case 5:Ba(a),a.flags&to&&wv(a.type,a.memoizedProps);break;case 3:case 4:if(Di){var o=ji;ji=Xd(a.stateNode.containerInfo),Ba(a),ji=o}else Ba(a);break;case 22:a.memoizedState===null&&(o=a.alternate,o!==null&&o.memoizedState!==null?(o=to,to=16777216,Ba(a),to=o):Ba(a));break;default:Ba(a)}}function X0(a){var o=a.alternate;if(o!==null&&(a=o.child,a!==null)){o.child=null;do o=a.sibling,a.sibling=null,a=o;while(a!==null)}}function cl(a){var o=a.deletions;if((a.flags&16)!==0){if(o!==null)for(var u=0;u<o.length;u++){var d=o[u];bn=d,Y0(d,a)}X0(a)}if(a.subtreeFlags&10256)for(a=a.child;a!==null;)q0(a),a=a.sibling}function q0(a){switch(a.tag){case 0:case 11:case 15:cl(a),a.flags&2048&&ea(9,a,a.return);break;case 3:cl(a);break;case 12:cl(a);break;case 22:var o=a.stateNode;a.memoizedState!==null&&o._visibility&4&&(a.return===null||a.return.tag!==13)?(o._visibility&=-5,Hc(a)):cl(a);break;default:cl(a)}}function Hc(a){var o=a.deletions;if((a.flags&16)!==0){if(o!==null)for(var u=0;u<o.length;u++){var d=o[u];bn=d,Y0(d,a)}X0(a)}for(a=a.child;a!==null;){switch(o=a,o.tag){case 0:case 11:case 15:ea(8,o,o.return),Hc(o);break;case 22:u=o.stateNode,u._visibility&4&&(u._visibility&=-5,Hc(o));break;default:Hc(o)}a=a.sibling}}function Y0(a,o){for(;bn!==null;){var u=bn;switch(u.tag){case 0:case 11:case 15:ea(8,u,o);break;case 23:case 22:if(u.memoizedState!==null&&u.memoizedState.cachePool!==null){var d=u.memoizedState.cachePool.pool;d!=null&&d.refCount++}break;case 24:al(u.memoizedState.cache)}if(d=u.child,d!==null)d.return=u,bn=d;else t:for(u=a;bn!==null;){d=bn;var y=d.sibling,b=d.return;if(F0(d),d===u){bn=null;break t}if(y!==null){y.return=b,bn=y;break t}bn=b}}}function xd(a){var o=Tv(a);if(o!=null){if(typeof o.memoizedProps["data-testname"]!="string")throw Error(i(364));return o}if(a=Db(a),a===null)throw Error(i(362));return a.stateNode.current}function Sd(a,o){var u=a.tag;switch(o.$$typeof){case au:if(a.type===o.value)return!0;break;case ru:t:{for(o=o.value,a=[a,0],u=0;u<a.length;){var d=a[u++],y=d.tag,b=a[u++],P=o[b];if(y!==5&&y!==26&&y!==27||!fl(d)){for(;P!=null&&Sd(d,P);)b++,P=o[b];if(b===o.length){o=!0;break t}else for(d=d.child;d!==null;)a.push(d,b),d=d.sibling}}o=!1}return o;case ou:if((u===5||u===26||u===27)&&Nb(a.stateNode,o.value))return!0;break;case cu:if((u===5||u===6||u===26||u===27)&&(a=Pb(a),a!==null&&0<=a.indexOf(o.value)))return!0;break;case lu:if((u===5||u===26||u===27)&&(a=a.memoizedProps["data-testname"],typeof a=="string"&&a.toLowerCase()===o.value.toLowerCase()))return!0;break;default:throw Error(i(365))}return!1}function Md(a){switch(a.$$typeof){case au:return"<"+(l(a.value)||"Unknown")+">";case ru:return":has("+(Md(a)||"")+")";case ou:return'[role="'+a.value+'"]';case cu:return'"'+a.value+'"';case lu:return'[data-testname="'+a.value+'"]';default:throw Error(i(365))}}function j0(a,o){var u=[];a=[a,0];for(var d=0;d<a.length;){var y=a[d++],b=y.tag,P=a[d++],W=o[P];if(b!==5&&b!==26&&b!==27||!fl(y)){for(;W!=null&&Sd(y,W);)P++,W=o[P];if(P===o.length)u.push(y);else for(y=y.child;y!==null;)a.push(y,P),y=y.sibling}}return u}function bd(a,o){if(!hl)throw Error(i(363));a=xd(a),a=j0(a,o),o=[],a=Array.from(a);for(var u=0;u<a.length;){var d=a[u++],y=d.tag;if(y===5||y===26||y===27)fl(d)||o.push(d.stateNode);else for(d=d.child;d!==null;)a.push(d),d=d.sibling}return o}function mi(){if((Xe&2)!==0&&Pe!==0)return Pe&-Pe;if(ge.T!==null){var a=Yr;return a!==0?a:pt()}return Sb()}function Z0(){Ii===0&&(Ii=(Pe&536870912)===0||Ie?z():536870912);var a=Li.current;return a!==null&&(a.flags|=32),Ii}function Kn(a,o,u){(a===Ke&&Je===2||a.cancelPendingCommit!==null)&&(Ir(a,0),As(a,Pe,Ii,!1)),B(a,u),((Xe&2)===0||a!==Ke)&&(a===Ke&&((Xe&2)===0&&(Ka|=u),ln===4&&As(a,Pe,Ii,!1)),St(a))}function K0(a,o,u){if((Xe&6)!==0)throw Error(i(327));var d=!u&&(o&60)===0&&(o&a.expiredLanes)===0||D(a,o),y=d?JM(a,o):wd(a,o,!0),b=d;do{if(y===0){eo&&!d&&As(a,o,0,!1);break}else if(y===6)As(a,o,0,!Ps);else{if(u=a.current.alternate,b&&!ZM(u)){y=wd(a,o,!1),b=!1;continue}if(y===2){if(b=o,a.errorRecoveryDisabledLanes&b)var P=0;else P=a.pendingLanes&-536870913,P=P!==0?P:P&536870912?536870912:0;if(P!==0){o=P;t:{var W=a;y=xl;var K=Ri&&W.current.memoizedState.isDehydrated;if(K&&(Ir(W,P).flags|=256),P=wd(W,P,!1),P!==2){if(rp&&!K){W.errorRecoveryDisabledLanes|=b,Ka|=b,y=4;break t}b=cs,cs=y,b!==null&&Ed(b)}y=P}if(b=!1,y!==2)continue}}if(y===1){Ir(a,0),As(a,o,0,!0);break}t:{switch(d=a,y){case 0:case 1:throw Error(i(345));case 4:if((o&4194176)===o){As(d,o,Ii,!Ps);break t}break;case 2:cs=null;break;case 3:case 5:break;default:throw Error(i(329))}if(d.finishedWork=u,d.finishedLanes=o,(o&62914560)===o&&(b=cp+300-qi(),10<b)){if(As(d,o,Ii,!Ps),N(d,0)!==0)break t;d.timeoutHandle=_b(J0.bind(null,d,u,cs,uu,lp,o,Ii,Ka,no,Ps,2,-0,0),b);break t}J0(d,u,cs,uu,lp,o,Ii,Ka,no,Ps,0,-0,0)}}break}while(!0);St(a)}function Ed(a){cs===null?cs=a:cs.push.apply(cs,a)}function J0(a,o,u,d,y,b,P,W,K,mt,Ut,Wt,jt){var ye=o.subtreeFlags;if((ye&8192||(ye&16785408)===16785408)&&(Tb(),W0(o),o=Ab(),o!==null)){a.cancelPendingCommit=o(rv.bind(null,a,u,d,y,P,W,K,1,Wt,jt)),As(a,b,P,!mt);return}rv(a,u,d,y,P,W,K,Ut,Wt,jt)}function ZM(a){for(var o=a;;){var u=o.tag;if((u===0||u===11||u===15)&&o.flags&16384&&(u=o.updateQueue,u!==null&&(u=u.stores,u!==null)))for(var d=0;d<u.length;d++){var y=u[d],b=y.getSnapshot;y=y.value;try{if(!yi(b(),y))return!1}catch{return!1}}if(u=o.child,o.subtreeFlags&16384&&u!==null)u.return=o,o=u;else{if(o===a)break;for(;o.sibling===null;){if(o.return===null||o.return===a)return!0;o=o.return}o.sibling.return=o.return,o=o.sibling}}return!0}function As(a,o,u,d){o&=~op,o&=~Ka,a.suspendedLanes|=o,a.pingedLanes&=~o,d&&(a.warmLanes|=o),d=a.expirationTimes;for(var y=o;0<y;){var b=31-vi(y),P=1<<b;d[b]=-1,y&=~P}u!==0&&q(a,u,o)}function Q0(){return(Xe&6)===0?(Ft(0),!1):!0}function Td(){if(Re!==null){if(Je===0)var a=Re.return;else a=Re,Ds=ja=null,el(a),Kr=null,vl=0,a=Re;for(;a!==null;)U0(a.alternate,a),a=a.return;Re=null}}function Ir(a,o){a.finishedWork=null,a.finishedLanes=0;var u=a.timeoutHandle;u!==Gd&&(a.timeoutHandle=Gd,yb(u)),u=a.cancelPendingCommit,u!==null&&(a.cancelPendingCommit=null,u()),Td(),Ke=a,Re=u=sa(a.current,null),Pe=o,Je=0,Si=null,Ps=!1,eo=D(a,o),rp=!1,no=Ii=op=Ka=fa=ln=0,cs=xl=null,lp=!1,(o&8)!==0&&(o|=o&32);var d=a.entangledLanes;if(d!==0)for(a=a.entanglements,d&=o;0<d;){var y=31-vi(d),b=1<<y;o|=a[y],d&=~b}return Ns=o,O(),u}function $0(a,o){Te=null,ge.H=ls,o===gl?(o=Gt(),Je=3):o===ep?(o=Gt(),Je=4):Je=o===Kv?8:o!==null&&typeof o=="object"&&typeof o.then=="function"?6:1,Si=o,Re===null&&(ln=1,Lc(a,st(o,a.current)))}function tv(){var a=Li.current;return a===null?!0:(Pe&4194176)===Pe?os===null:(Pe&62914560)===Pe||(Pe&536870912)!==0?a===os:!1}function ev(){var a=ge.H;return ge.H=ls,a===null?ls:a}function nv(){var a=ge.A;return ge.A=BE,a}function Ad(){ln=4,Ps||(Pe&4194176)!==Pe&&Li.current!==null||(eo=!0),(fa&134217727)===0&&(Ka&134217727)===0||Ke===null||As(Ke,Pe,Ii,!1)}function wd(a,o,u){var d=Xe;Xe|=2;var y=ev(),b=nv();(Ke!==a||Pe!==o)&&(uu=null,Ir(a,o)),o=!1;var P=ln;t:do try{if(Je!==0&&Re!==null){var W=Re,K=Si;switch(Je){case 8:Td(),P=6;break t;case 3:case 2:case 6:Li.current===null&&(o=!0);var mt=Je;if(Je=0,Si=null,Or(a,W,K,mt),u&&eo){P=0;break t}break;default:mt=Je,Je=0,Si=null,Or(a,W,K,mt)}}KM(),P=ln;break}catch(Ut){$0(a,Ut)}while(!0);return o&&a.shellSuspendCounter++,Ds=ja=null,Xe=d,ge.H=y,ge.A=b,Re===null&&(Ke=null,Pe=0,O()),P}function KM(){for(;Re!==null;)iv(Re)}function JM(a,o){var u=Xe;Xe|=2;var d=ev(),y=nv();Ke!==a||Pe!==o?(uu=null,Sl=qi()+500,Ir(a,o)):eo=D(a,o);t:do try{if(Je!==0&&Re!==null){o=Re;var b=Si;e:switch(Je){case 1:Je=0,Si=null,Or(a,o,b,1);break;case 2:if(Ht(b)){Je=0,Si=null,sv(o);break}o=function(){Je===2&&Ke===a&&(Je=7),St(a)},b.then(o,o);break t;case 3:Je=7;break t;case 4:Je=5;break t;case 7:Ht(b)?(Je=0,Si=null,sv(o)):(Je=0,Si=null,Or(a,o,b,7));break;case 5:var P=null;switch(Re.tag){case 26:P=Re.memoizedState;case 5:case 27:var W=Re,K=W.type,mt=W.pendingProps;if(P?kv(P):Av(K,mt)){Je=0,Si=null;var Ut=W.sibling;if(Ut!==null)Re=Ut;else{var Wt=W.return;Wt!==null?(Re=Wt,Vc(Wt)):Re=null}break e}}Je=0,Si=null,Or(a,o,b,5);break;case 6:Je=0,Si=null,Or(a,o,b,6);break;case 8:Td(),ln=6;break t;default:throw Error(i(462))}}QM();break}catch(jt){$0(a,jt)}while(!0);return Ds=ja=null,ge.H=d,ge.A=y,Xe=u,Re!==null?0:(Ke=null,Pe=0,O(),ln)}function QM(){for(;Re!==null&&!wE();)iv(Re)}function iv(a){var o=E0(a.alternate,a,Ns);a.memoizedProps=a.pendingProps,o===null?Vc(a):Re=o}function sv(a){var o=a,u=o.alternate;switch(o.tag){case 15:case 0:o=_0(u,o,o.pendingProps,o.type,void 0,Pe);break;case 11:o=_0(u,o,o.pendingProps,o.type.render,o.ref,Pe);break;case 5:el(o);default:U0(u,o),o=Re=uv(o,Ns),o=E0(u,o,Ns)}a.memoizedProps=a.pendingProps,o===null?Vc(a):Re=o}function Or(a,o,u,d){Ds=ja=null,el(o),Kr=null,vl=0;var y=o.return;try{if(kM(a,y,o,u,Pe)){ln=1,Lc(a,st(u,a.current)),Re=null;return}}catch(b){if(y!==null)throw Re=y,b;ln=1,Lc(a,st(u,a.current)),Re=null;return}o.flags&32768?(Ie||d===1?a=!0:eo||(Pe&536870912)!==0?a=!1:(Ps=a=!0,(d===2||d===3||d===6)&&(d=Li.current,d!==null&&d.tag===13&&(d.flags|=16384))),av(o,a)):Vc(o)}function Vc(a){var o=a;do{if((o.flags&32768)!==0){av(o,Ps);return}a=o.return;var u=XM(o.alternate,o,Ns);if(u!==null){Re=u;return}if(o=o.sibling,o!==null){Re=o;return}Re=o=a}while(o!==null);ln===0&&(ln=5)}function av(a,o){do{var u=qM(a.alternate,a);if(u!==null){u.flags&=32767,Re=u;return}if(u=a.return,u!==null&&(u.flags|=32768,u.subtreeFlags=0,u.deletions=null),!o&&(a=a.sibling,a!==null)){Re=a;return}Re=a=u}while(a!==null);ln=6,Re=null}function rv(a,o,u,d,y,b,P,W,K,mt){var Ut=ge.T,Wt=Va();try{ri(2),ge.T=null,$M(a,o,u,d,Wt,y,b,P,W,K,mt)}finally{ge.T=Ut,ri(Wt)}}function $M(a,o,u,d,y,b,P,W){do Fa();while(Ja!==null);if((Xe&6)!==0)throw Error(i(327));var K=a.finishedWork;if(d=a.finishedLanes,K===null)return null;if(a.finishedWork=null,a.finishedLanes=0,K===a.current)throw Error(i(177));a.callbackNode=null,a.callbackPriority=0,a.cancelPendingCommit=null;var mt=K.lanes|K.childLanes;if(mt|=Kd,$(a,d,mt,b,P,W),a===Ke&&(Re=Ke=null,Pe=0),(K.subtreeFlags&10256)===0&&(K.flags&10256)===0||hu||(hu=!0,up=mt,hp=u,ib(jd,function(){return Fa(),null})),u=(K.flags&15990)!==0,(K.subtreeFlags&15990)!==0||u?(u=ge.T,ge.T=null,b=Va(),ri(2),P=Xe,Xe|=4,YM(a,K),V0(K,a),gb(a.containerInfo),a.current=K,B0(a,K.alternate,K),CE(),Xe=P,ri(b),ge.T=u):a.current=K,hu?(hu=!1,Ja=a,Ml=d):ov(a,mt),mt=a.pendingLanes,mt===0&&(da=null),F(K.stateNode),St(a),o!==null)for(y=a.onRecoverableError,K=0;K<o.length;K++)mt=o[K],y(mt.value,{componentStack:mt.stack});return(Ml&3)!==0&&Fa(),mt=a.pendingLanes,(d&4194218)!==0&&(mt&42)!==0?a===fp?bl++:(bl=0,fp=a):bl=0,Ft(0),null}function ov(a,o){(a.pooledCacheLanes&=o)===0&&(o=a.pooledCache,o!=null&&(a.pooledCache=null,al(o)))}function Fa(){if(Ja!==null){var a=Ja,o=up;up=0;var u=nt(Ml),d=32>u?32:u;u=ge.T;var y=Va();try{if(ri(d),ge.T=null,Ja===null)var b=!1;else{d=hp,hp=null;var P=Ja,W=Ml;if(Ja=null,Ml=0,(Xe&6)!==0)throw Error(i(331));var K=Xe;if(Xe|=4,q0(P.current),k0(P,P.current,W,d),Xe=K,Ft(0,!1),_i&&typeof _i.onPostCommitFiberRoot=="function")try{_i.onPostCommitFiberRoot(dl,P)}catch{}b=!0}return b}finally{ri(y),ge.T=u,ov(a,o)}}return!1}function lv(a,o,u){o=st(u,o),o=Qf(a.stateNode,o,2),a=zt(a,o,2),a!==null&&(B(a,2),St(a))}function Ge(a,o,u){if(a.tag===3)lv(a,a,u);else for(;o!==null;){if(o.tag===3){lv(o,a,u);break}else if(o.tag===1){var d=o.stateNode;if(typeof o.type.getDerivedStateFromError=="function"||typeof d.componentDidCatch=="function"&&(da===null||!da.has(d))){a=st(u,a),u=h0(2),d=zt(o,u,2),d!==null&&(f0(u,d,o,a),B(d,2),St(d));break}}o=o.return}}function Cd(a,o,u){var d=a.pingCache;if(d===null){d=a.pingCache=new FE;var y=new Set;d.set(o,y)}else y=d.get(o),y===void 0&&(y=new Set,d.set(o,y));y.has(u)||(rp=!0,y.add(u),a=tb.bind(null,a,o,u),o.then(a,a))}function tb(a,o,u){var d=a.pingCache;d!==null&&d.delete(o),a.pingedLanes|=a.suspendedLanes&u,a.warmLanes&=~u,Ke===a&&(Pe&u)===u&&(ln===4||ln===3&&(Pe&62914560)===Pe&&300>qi()-cp?(Xe&2)===0&&Ir(a,0):op|=u,no===Pe&&(no=0)),St(a)}function cv(a,o){o===0&&(o=C()),a=bt(a,o),a!==null&&(B(a,o),St(a))}function eb(a){var o=a.memoizedState,u=0;o!==null&&(u=o.retryLane),cv(a,u)}function nb(a,o){var u=0;switch(a.tag){case 13:var d=a.stateNode,y=a.memoizedState;y!==null&&(u=y.retryLane);break;case 19:d=a.stateNode;break;case 22:d=a.stateNode._retryCache;break;default:throw Error(i(314))}d!==null&&d.delete(o),cv(a,u)}function ib(a,o){return jc(a,o)}function sb(a,o,u,d){this.tag=a,this.key=u,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.refCleanup=this.ref=null,this.pendingProps=o,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=d,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Rd(a){return a=a.prototype,!(!a||!a.isReactComponent)}function sa(a,o){var u=a.alternate;return u===null?(u=e(a.tag,o,a.key,a.mode),u.elementType=a.elementType,u.type=a.type,u.stateNode=a.stateNode,u.alternate=a,a.alternate=u):(u.pendingProps=o,u.type=a.type,u.flags=0,u.subtreeFlags=0,u.deletions=null),u.flags=a.flags&31457280,u.childLanes=a.childLanes,u.lanes=a.lanes,u.child=a.child,u.memoizedProps=a.memoizedProps,u.memoizedState=a.memoizedState,u.updateQueue=a.updateQueue,o=a.dependencies,u.dependencies=o===null?null:{lanes:o.lanes,firstContext:o.firstContext},u.sibling=a.sibling,u.index=a.index,u.ref=a.ref,u.refCleanup=a.refCleanup,u}function uv(a,o){a.flags&=31457282;var u=a.alternate;return u===null?(a.childLanes=0,a.lanes=o,a.child=null,a.subtreeFlags=0,a.memoizedProps=null,a.memoizedState=null,a.updateQueue=null,a.dependencies=null,a.stateNode=null):(a.childLanes=u.childLanes,a.lanes=u.lanes,a.child=u.child,a.subtreeFlags=0,a.deletions=null,a.memoizedProps=u.memoizedProps,a.memoizedState=u.memoizedState,a.updateQueue=u.updateQueue,a.type=u.type,o=u.dependencies,a.dependencies=o===null?null:{lanes:o.lanes,firstContext:o.firstContext}),a}function Gc(a,o,u,d,y,b){var P=0;if(d=a,typeof a=="function")Rd(a)&&(P=1);else if(typeof a=="string")P=Di&&Fn?zv(a,u,Dn.current)?26:Xv(a)?27:5:Di?zv(a,u,Dn.current)?26:5:Fn&&Xv(a)?27:5;else t:switch(a){case Br:return Ha(u.children,y,b,o);case vv:P=8,y|=24;break;case Ld:return a=e(12,u,o,y|2),a.elementType=Ld,a.lanes=b,a;case Od:return a=e(13,u,o,y),a.elementType=Od,a.lanes=b,a;case zd:return a=e(19,u,o,y),a.elementType=zd,a.lanes=b,a;case yv:return hv(u,y,b,o);default:if(typeof a=="object"&&a!==null)switch(a.$$typeof){case lb:case aa:P=10;break t;case _v:P=9;break t;case Id:P=11;break t;case Bd:P=14;break t;case ra:P=16,d=null;break t}P=29,u=Error(i(130,a===null?"null":typeof a,"")),d=null}return o=e(P,u,o,y),o.elementType=a,o.type=d,o.lanes=b,o}function Ha(a,o,u,d){return a=e(7,a,d,o),a.lanes=u,a}function hv(a,o,u,d){a=e(22,a,d,o),a.elementType=yv,a.lanes=u;var y={_visibility:1,_pendingVisibility:1,_pendingMarkers:null,_retryCache:null,_transitions:null,_current:null,detach:function(){var b=y._current;if(b===null)throw Error(i(456));if((y._pendingVisibility&2)===0){var P=bt(b,2);P!==null&&(y._pendingVisibility|=2,Kn(P,b,2))}},attach:function(){var b=y._current;if(b===null)throw Error(i(456));if((y._pendingVisibility&2)!==0){var P=bt(b,2);P!==null&&(y._pendingVisibility&=-3,Kn(P,b,2))}}};return a.stateNode=y,a}function Dd(a,o,u){return a=e(6,a,null,o),a.lanes=u,a}function Ud(a,o,u){return o=e(4,a.children!==null?a.children:[],a.key,o),o.lanes=u,o.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation},o}function ab(a,o,u,d,y,b,P,W){this.tag=1,this.containerInfo=a,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=Gd,this.callbackNode=this.next=this.pendingContext=this.context=this.cancelPendingCommit=null,this.callbackPriority=0,this.expirationTimes=w(-1),this.entangledLanes=this.shellSuspendCounter=this.errorRecoveryDisabledLanes=this.finishedLanes=this.expiredLanes=this.warmLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=w(0),this.hiddenUpdates=w(null),this.identifierPrefix=d,this.onUncaughtError=y,this.onCaughtError=b,this.onRecoverableError=P,this.pooledCache=null,this.pooledCacheLanes=0,this.formState=W,this.incompleteTransitions=new Map}function fv(a,o,u,d,y,b,P,W,K,mt,Ut,Wt){return a=new ab(a,o,u,P,W,K,mt,Wt),o=1,b===!0&&(o|=24),b=e(3,null,null,o),a.current=b,b.stateNode=a,o=cd(),o.refCount++,a.pooledCache=o,o.refCount++,b.memoizedState={element:d,isDehydrated:u,cache:o},Kt(b),a}function dv(a){return a?(a=Vr,a):Vr}function pv(a){var o=a._reactInternals;if(o===void 0)throw typeof a.render=="function"?Error(i(188)):(a=Object.keys(a).join(","),Error(i(268,a)));return a=v(o),a=a!==null?x(a):null,a===null?null:ul(a.stateNode)}function mv(a,o,u,d,y,b){y=dv(y),d.context===null?d.context=y:d.pendingContext=y,d=vt(o),d.payload={element:u},b=b===void 0?null:b,b!==null&&(d.callback=b),u=zt(a,d,o),u!==null&&(Kn(u,a,o),ie(u,a,o))}function gv(a,o){if(a=a.memoizedState,a!==null&&a.dehydrated!==null){var u=a.retryLane;a.retryLane=u!==0&&u<o?u:o}}function Pd(a,o){gv(a,o),(a=a.alternate)&&gv(a,o)}var Ce={},rb=Zm(),gi=SD(),Nd=Object.assign,ob=Symbol.for("react.element"),kc=Symbol.for("react.transitional.element"),zr=Symbol.for("react.portal"),Br=Symbol.for("react.fragment"),vv=Symbol.for("react.strict_mode"),Ld=Symbol.for("react.profiler"),lb=Symbol.for("react.provider"),_v=Symbol.for("react.consumer"),aa=Symbol.for("react.context"),Id=Symbol.for("react.forward_ref"),Od=Symbol.for("react.suspense"),zd=Symbol.for("react.suspense_list"),Bd=Symbol.for("react.memo"),ra=Symbol.for("react.lazy"),yv=Symbol.for("react.offscreen"),cb=Symbol.for("react.memo_cache_sentinel"),xv=Symbol.iterator,ub=Symbol.for("react.client.reference"),ge=rb.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,Fd,Sv,Hd=!1,Wc=Array.isArray,hb=t.rendererVersion,fb=t.rendererPackageName,Mv=t.extraDevToolsConfig,ul=t.getPublicInstance,db=t.getRootHostContext,pb=t.getChildHostContext,mb=t.prepareForCommit,gb=t.resetAfterCommit,vb=t.createInstance,Vd=t.appendInitialChild,bv=t.finalizeInitialChildren,Xc=t.shouldSetTextContent,Ev=t.createTextInstance,_b=t.scheduleTimeout,yb=t.cancelTimeout,Gd=t.noTimeout,ws=t.isPrimaryRenderer;t.warnsIfNotActing;var Bn=t.supportsMutation,oa=t.supportsPersistence,Ri=t.supportsHydration,Tv=t.getInstanceFromNode;t.beforeActiveInstanceBlur,t.afterActiveInstanceBlur;var xb=t.preparePortalMount;t.prepareScopeUpdate,t.getInstanceFromScope;var ri=t.setCurrentUpdatePriority,Va=t.getCurrentUpdatePriority,Sb=t.resolveUpdatePriority;t.resolveEventType,t.resolveEventTimeStamp;var Mb=t.shouldAttemptEagerTransition,bb=t.detachDeletedInstance;t.requestPostPaintCallback;var Eb=t.maySuspendCommit,Av=t.preloadInstance,Tb=t.startSuspendingCommit,wv=t.suspendInstance,Ab=t.waitForCommitToBeReady,Fr=t.NotPendingTransition,Ga=t.HostTransitionContext,wb=t.resetFormInstance;t.bindToConsole;var Cb=t.supportsMicrotasks,Rb=t.scheduleMicrotask,hl=t.supportsTestSelectors,Db=t.findFiberRoot,Ub=t.getBoundingRect,Pb=t.getTextContent,fl=t.isHiddenSubtree,Nb=t.matchAccessibilityRole,Lb=t.setFocusIfFocusable,Ib=t.setupIntersectionObserver,Ob=t.appendChild,zb=t.appendChildToContainer,Bb=t.commitTextUpdate,Fb=t.commitMount,Hb=t.commitUpdate,Vb=t.insertBefore,Gb=t.insertInContainerBefore,kb=t.removeChild,Wb=t.removeChildFromContainer,Cv=t.resetTextContent,Xb=t.hideInstance,qb=t.hideTextInstance,Yb=t.unhideInstance,jb=t.unhideTextInstance,Zb=t.clearContainer,Kb=t.cloneInstance,Rv=t.createContainerChildSet,Dv=t.appendChildToContainerChildSet,Jb=t.finalizeContainerChildren,Uv=t.replaceContainerChildren,Pv=t.cloneHiddenInstance,Nv=t.cloneHiddenTextInstance,kd=t.isSuspenseInstancePending,Wd=t.isSuspenseInstanceFallback,Qb=t.getSuspenseInstanceFallbackErrorDetails,$b=t.registerSuspenseInstanceRetry,tE=t.canHydrateFormStateMarker,eE=t.isFormStateMarkerMatching,Lv=t.getNextHydratableSibling,Iv=t.getFirstHydratableChild,nE=t.getFirstHydratableChildWithinContainer,iE=t.getFirstHydratableChildWithinSuspenseInstance,sE=t.canHydrateInstance,aE=t.canHydrateTextInstance,rE=t.canHydrateSuspenseInstance,oE=t.hydrateInstance,lE=t.hydrateTextInstance,cE=t.hydrateSuspenseInstance,uE=t.getNextHydratableInstanceAfterSuspenseInstance,hE=t.commitHydratedContainer,fE=t.commitHydratedSuspenseInstance,dE=t.clearSuspenseBoundary,pE=t.clearSuspenseBoundaryFromContainer,Ov=t.shouldDeleteUnhydratedTailInstances;t.diffHydratedPropsForDevWarnings,t.diffHydratedTextForDevWarnings,t.describeHydratableInstanceForDevWarnings;var mE=t.validateHydratableInstance,gE=t.validateHydratableTextInstance,Di=t.supportsResources,zv=t.isHostHoistableType,Xd=t.getHoistableRoot,Bv=t.getResource,Fv=t.acquireResource,Hv=t.releaseResource,vE=t.hydrateHoistable,Vv=t.mountHoistable,Gv=t.unmountHoistable,_E=t.createHoistableInstance,yE=t.prepareToCommitHoistables,xE=t.mayResourceSuspendCommit,kv=t.preloadResource,SE=t.suspendResource,Fn=t.supportsSingletons,Wv=t.resolveSingletonInstance,ME=t.clearSingleton,bE=t.acquireSingletonInstance,EE=t.releaseSingletonInstance,Xv=t.isHostSingletonType,qd=[],Hr=-1,Vr={},vi=Math.clz32?Math.clz32:T,TE=Math.log,AE=Math.LN2,qc=128,Yc=4194304,jc=gi.unstable_scheduleCallback,Yd=gi.unstable_cancelCallback,wE=gi.unstable_shouldYield,CE=gi.unstable_requestPaint,qi=gi.unstable_now,qv=gi.unstable_ImmediatePriority,RE=gi.unstable_UserBlockingPriority,jd=gi.unstable_NormalPriority,DE=gi.unstable_IdlePriority,UE=gi.log,PE=gi.unstable_setDisableYieldValue,dl=null,_i=null,yi=typeof Object.is=="function"?Object.is:G,Yv=new WeakMap,Gr=[],kr=0,Zc=null,Kc=0,Ui=[],Pi=0,ka=null,Cs=1,Rs="",Dn=S(null),pl=S(null),la=S(null),Jc=S(null),Jn=null,Hn=null,Ie=!1,Yi=null,rs=!1,Zd=Error(i(519)),Ni=[],Wr=0,Kd=0,Qc=null,Xr=null,Jd=!1,$c=!1,Qd=!1,qr=0,ml=null,$d=0,Yr=0,jr=null,ca=!1,tp=!1,NE=Object.prototype.hasOwnProperty,gl=Error(i(460)),ep=Error(i(474)),tu={then:function(){}},Zr=null,Kr=null,vl=0,Wa=An(!0),jv=An(!1),Jr=S(null),eu=S(0),Li=S(null),os=null,gn=S(0),ua=0,Te=null,We=null,dn=null,nu=!1,Qr=!1,Xa=!1,iu=0,_l=0,$r=null,LE=0,np=function(){return{lastEffect:null,events:null,stores:null,memoCache:null}},ls={readContext:zn,use:rt,useCallback:je,useContext:je,useEffect:je,useImperativeHandle:je,useLayoutEffect:je,useInsertionEffect:je,useMemo:je,useReducer:je,useRef:je,useState:je,useDebugValue:je,useDeferredValue:je,useTransition:je,useSyncExternalStore:je,useId:je};ls.useCacheRefresh=je,ls.useMemoCache=je,ls.useHostTransitionStatus=je,ls.useFormState=je,ls.useActionState=je,ls.useOptimistic=je;var qa={readContext:zn,use:rt,useCallback:function(a,o){return U().memoizedState=[a,o===void 0?null:o],a},useContext:zn,useEffect:Yg,useImperativeHandle:function(a,o,u){u=u!=null?u.concat([a]):null,Uc(4194308,4,Kg.bind(null,o,a),u)},useLayoutEffect:function(a,o){return Uc(4194308,4,a,o)},useInsertionEffect:function(a,o){Uc(4,2,a,o)},useMemo:function(a,o){var u=U();o=o===void 0?null:o;var d=a();if(Xa){X(!0);try{a()}finally{X(!1)}}return u.memoizedState=[d,o],d},useReducer:function(a,o,u){var d=U();if(u!==void 0){var y=u(o);if(Xa){X(!0);try{u(o)}finally{X(!1)}}}else y=o;return d.memoizedState=d.baseState=y,a={pending:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:y},d.queue=a,a=a.dispatch=GM.bind(null,Te,a),[d.memoizedState,a]},useRef:function(a){var o=U();return a={current:a},o.memoizedState=a},useState:function(a){a=Ve(a);var o=a.queue,u=a0.bind(null,Te,o);return o.dispatch=u,[a.memoizedState,u]},useDebugValue:Yf,useDeferredValue:function(a,o){var u=U();return jf(u,a,o)},useTransition:function(){var a=Ve(!1);return a=e0.bind(null,Te,a.queue,!0,!1),U().memoizedState=a,[!1,a]},useSyncExternalStore:function(a,o,u){var d=Te,y=U();if(Ie){if(u===void 0)throw Error(i(407));u=u()}else{if(u=o(),Ke===null)throw Error(i(349));(Pe&60)!==0||pe(d,o,u)}y.memoizedState=u;var b={value:u,getSnapshot:o};return y.queue=b,Yg(Ee.bind(null,d,b,a),[a]),d.flags|=2048,ss(9,ae.bind(null,d,b,u,o),{destroy:void 0},null),u},useId:function(){var a=U(),o=Ke.identifierPrefix;if(Ie){var u=Rs,d=Cs;u=(d&~(1<<32-vi(d)-1)).toString(32)+u,o=":"+o+"R"+u,u=iu++,0<u&&(o+="H"+u.toString(32)),o+=":"}else u=LE++,o=":"+o+"r"+u.toString(32)+":";return a.memoizedState=o},useCacheRefresh:function(){return U().memoizedState=VM.bind(null,Te)}};qa.useMemoCache=j,qa.useHostTransitionStatus=Zf,qa.useFormState=Ye,qa.useActionState=Ye,qa.useOptimistic=function(a){var o=U();o.memoizedState=o.baseState=a;var u={pending:null,lanes:0,dispatch:null,lastRenderedReducer:null,lastRenderedState:null};return o.queue=u,o=Kf.bind(null,Te,!0,u),u.dispatch=o,[a,o]};var ha={readContext:zn,use:rt,useCallback:Qg,useContext:zn,useEffect:qf,useImperativeHandle:Jg,useInsertionEffect:jg,useLayoutEffect:Zg,useMemo:$g,useReducer:Bt,useRef:as,useState:function(){return Bt(Et)},useDebugValue:Yf,useDeferredValue:function(a,o){var u=Y();return t0(u,We.memoizedState,a,o)},useTransition:function(){var a=Bt(Et)[0],o=Y().memoizedState;return[typeof a=="boolean"?a:at(a),o]},useSyncExternalStore:de,useId:i0};ha.useCacheRefresh=s0,ha.useMemoCache=j,ha.useHostTransitionStatus=Zf,ha.useFormState=jn,ha.useActionState=jn,ha.useOptimistic=function(a,o){var u=Y();return He(u,We,a,o)};var Ya={readContext:zn,use:rt,useCallback:Qg,useContext:zn,useEffect:qf,useImperativeHandle:Jg,useInsertionEffect:jg,useLayoutEffect:Zg,useMemo:$g,useReducer:Zt,useRef:as,useState:function(){return Zt(Et)},useDebugValue:Yf,useDeferredValue:function(a,o){var u=Y();return We===null?jf(u,a,o):t0(u,We.memoizedState,a,o)},useTransition:function(){var a=Zt(Et)[0],o=Y().memoizedState;return[typeof a=="boolean"?a:at(a),o]},useSyncExternalStore:de,useId:i0};Ya.useCacheRefresh=s0,Ya.useMemoCache=j,Ya.useHostTransitionStatus=Zf,Ya.useFormState=Cn,Ya.useActionState=Cn,Ya.useOptimistic=function(a,o){var u=Y();return We!==null?He(u,We,a,o):(u.baseState=a,[a,u.queue.dispatch])};var ip={isMounted:function(a){return(a=a._reactInternals)?m(a)===a:!1},enqueueSetState:function(a,o,u){a=a._reactInternals;var d=mi(),y=vt(d);y.payload=o,u!=null&&(y.callback=u),o=zt(a,y,d),o!==null&&(Kn(o,a,d),ie(o,a,d))},enqueueReplaceState:function(a,o,u){a=a._reactInternals;var d=mi(),y=vt(d);y.tag=1,y.payload=o,u!=null&&(y.callback=u),o=zt(a,y,d),o!==null&&(Kn(o,a,d),ie(o,a,d))},enqueueForceUpdate:function(a,o){a=a._reactInternals;var u=mi(),d=vt(u);d.tag=2,o!=null&&(d.callback=o),o=zt(a,d,u),o!==null&&(Kn(o,a,u),ie(o,a,u))}},Zv=typeof reportError=="function"?reportError:function(a){if(typeof window=="object"&&typeof window.ErrorEvent=="function"){var o=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:typeof a=="object"&&a!==null&&typeof a.message=="string"?String(a.message):String(a),error:a});if(!window.dispatchEvent(o))return}else if(typeof process=="object"&&typeof process.emit=="function"){process.emit("uncaughtException",a);return}console.error(a)},Kv=Error(i(461)),Mn=!1,sp={dehydrated:null,treeContext:null,retryLane:0},su=S(null),ja=null,Ds=null,IE=typeof AbortController<"u"?AbortController:function(){var a=[],o=this.signal={aborted:!1,addEventListener:function(u,d){a.push(d)}};this.abort=function(){o.aborted=!0,a.forEach(function(u){return u()})}},OE=gi.unstable_scheduleCallback,zE=gi.unstable_NormalPriority,rn={$$typeof:aa,Consumer:null,Provider:null,_currentValue:null,_currentValue2:null,_threadCount:0},Jv=ge.S;ge.S=function(a,o){typeof o=="object"&&o!==null&&typeof o.then=="function"&&ut(a,o),Jv!==null&&Jv(a,o)};var Za=S(null),Us=!1,on=!1,ap=!1,Qv=typeof WeakSet=="function"?WeakSet:Set,bn=null,$v=!1,pn=null,xi=!1,ji=null,to=8192,BE={getCacheForType:function(a){var o=zn(rn),u=o.data.get(a);return u===void 0&&(u=a(),o.data.set(a,u)),u}},au=0,ru=1,ou=2,lu=3,cu=4;if(typeof Symbol=="function"&&Symbol.for){var yl=Symbol.for;au=yl("selector.component"),ru=yl("selector.has_pseudo_class"),ou=yl("selector.role"),lu=yl("selector.test_id"),cu=yl("selector.text")}var FE=typeof WeakMap=="function"?WeakMap:Map,Xe=0,Ke=null,Re=null,Pe=0,Je=0,Si=null,Ps=!1,eo=!1,rp=!1,Ns=0,ln=0,fa=0,Ka=0,op=0,Ii=0,no=0,xl=null,cs=null,lp=!1,cp=0,Sl=1/0,uu=null,da=null,hu=!1,Ja=null,Ml=0,up=0,hp=null,bl=0,fp=null;return Ce.attemptContinuousHydration=function(a){if(a.tag===13){var o=bt(a,67108864);o!==null&&Kn(o,a,67108864),Pd(a,67108864)}},Ce.attemptHydrationAtCurrentPriority=function(a){if(a.tag===13){var o=mi(),u=bt(a,o);u!==null&&Kn(u,a,o),Pd(a,o)}},Ce.attemptSynchronousHydration=function(a){switch(a.tag){case 3:if(a=a.stateNode,a.current.memoizedState.isDehydrated){var o=A(a.pendingLanes);if(o!==0){for(a.pendingLanes|=2,a.entangledLanes|=2;o;){var u=1<<31-vi(o);a.entanglements[1]|=u,o&=~u}St(a),(Xe&6)===0&&(Sl=qi()+500,Ft(0))}}break;case 13:o=bt(a,2),o!==null&&Kn(o,a,2),Q0(),Pd(a,2)}},Ce.batchedUpdates=function(a,o){return a(o)},Ce.createComponentSelector=function(a){return{$$typeof:au,value:a}},Ce.createContainer=function(a,o,u,d,y,b,P,W,K,mt){return fv(a,o,!1,null,u,d,b,P,W,K,mt,null)},Ce.createHasPseudoClassSelector=function(a){return{$$typeof:ru,value:a}},Ce.createHydrationContainer=function(a,o,u,d,y,b,P,W,K,mt,Ut,Wt,jt){return a=fv(u,d,!0,a,y,b,W,K,mt,Ut,Wt,jt),a.context=dv(null),u=a.current,d=mi(),y=vt(d),y.callback=o??null,zt(u,y,d),a.current.lanes=d,B(a,d),St(a),a},Ce.createPortal=function(a,o,u){var d=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:zr,key:d==null?null:""+d,children:a,containerInfo:o,implementation:u}},Ce.createRoleSelector=function(a){return{$$typeof:ou,value:a}},Ce.createTestNameSelector=function(a){return{$$typeof:lu,value:a}},Ce.createTextSelector=function(a){return{$$typeof:cu,value:a}},Ce.defaultOnCaughtError=function(a){console.error(a)},Ce.defaultOnRecoverableError=function(a){Zv(a)},Ce.defaultOnUncaughtError=function(a){Zv(a)},Ce.deferredUpdates=function(a){var o=ge.T,u=Va();try{return ri(32),ge.T=null,a()}finally{ri(u),ge.T=o}},Ce.discreteUpdates=function(a,o,u,d,y){var b=ge.T,P=Va();try{return ri(2),ge.T=null,a(o,u,d,y)}finally{ri(P),ge.T=b,Xe===0&&(Sl=qi()+500)}},Ce.findAllNodes=bd,Ce.findBoundingRects=function(a,o){if(!hl)throw Error(i(363));o=bd(a,o),a=[];for(var u=0;u<o.length;u++)a.push(Ub(o[u]));for(o=a.length-1;0<o;o--){u=a[o];for(var d=u.x,y=d+u.width,b=u.y,P=b+u.height,W=o-1;0<=W;W--)if(o!==W){var K=a[W],mt=K.x,Ut=mt+K.width,Wt=K.y,jt=Wt+K.height;if(d>=mt&&b>=Wt&&y<=Ut&&P<=jt){a.splice(o,1);break}else if(d!==mt||u.width!==K.width||jt<b||Wt>P){if(!(b!==Wt||u.height!==K.height||Ut<d||mt>y)){mt>d&&(K.width+=mt-d,K.x=d),Ut<y&&(K.width=y-mt),a.splice(o,1);break}}else{Wt>b&&(K.height+=Wt-b,K.y=b),jt<P&&(K.height=P-Wt),a.splice(o,1);break}}}return a},Ce.findHostInstance=pv,Ce.findHostInstanceWithNoPortals=function(a){return a=v(a),a=a!==null?M(a):null,a===null?null:ul(a.stateNode)},Ce.findHostInstanceWithWarning=function(a){return pv(a)},Ce.flushPassiveEffects=Fa,Ce.flushSyncFromReconciler=function(a){var o=Xe;Xe|=1;var u=ge.T,d=Va();try{if(ri(2),ge.T=null,a)return a()}finally{ri(d),ge.T=u,Xe=o,(Xe&6)===0&&Ft(0)}},Ce.flushSyncWork=Q0,Ce.focusWithin=function(a,o){if(!hl)throw Error(i(363));for(a=xd(a),o=j0(a,o),o=Array.from(o),a=0;a<o.length;){var u=o[a++],d=u.tag;if(!fl(u)){if((d===5||d===26||d===27)&&Lb(u.stateNode))return!0;for(u=u.child;u!==null;)o.push(u),u=u.sibling}}return!1},Ce.getFindAllNodesFailureDescription=function(a,o){if(!hl)throw Error(i(363));var u=0,d=[];a=[xd(a),0];for(var y=0;y<a.length;){var b=a[y++],P=b.tag,W=a[y++],K=o[W];if((P!==5&&P!==26&&P!==27||!fl(b))&&(Sd(b,K)&&(d.push(Md(K)),W++,W>u&&(u=W)),W<o.length))for(b=b.child;b!==null;)a.push(b,W),b=b.sibling}if(u<o.length){for(a=[];u<o.length;u++)a.push(Md(o[u]));return`findAllNodes was able to match part of the selector:
  `+(d.join(" > ")+`

No matching component was found for:
  `)+a.join(" > ")}return null},Ce.getPublicRootInstance=function(a){if(a=a.current,!a.child)return null;switch(a.child.tag){case 27:case 5:return ul(a.child.stateNode);default:return a.child.stateNode}},Ce.injectIntoDevTools=function(){var a={bundleType:0,version:hb,rendererPackageName:fb,currentDispatcherRef:ge,findFiberByHostInstance:Tv,reconcilerVersion:"19.0.0"};if(Mv!==null&&(a.rendererConfig=Mv),typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u")a=!1;else{var o=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(o.isDisabled||!o.supportsFiber)a=!0;else{try{dl=o.inject(a),_i=o}catch{}a=!!o.checkDCE}}return a},Ce.isAlreadyRendering=function(){return!1},Ce.observeVisibleRects=function(a,o,u,d){if(!hl)throw Error(i(363));a=bd(a,o);var y=Ib(a,u,d).disconnect;return{disconnect:function(){y()}}},Ce.shouldError=function(){return null},Ce.shouldSuspend=function(){return!1},Ce.startHostTransition=function(a,o,u,d){if(a.tag!==5)throw Error(i(476));var y=n0(a).queue;e0(a,y,o,Fr,u===null?n:function(){var b=n0(a).next.queue;return nl(a,b,{},mi()),u(d)})},Ce.updateContainer=function(a,o,u,d){var y=o.current,b=mi();return mv(y,b,a,o,u,d),b},Ce.updateContainerSync=function(a,o,u,d){return o.tag===0&&Fa(),mv(o.current,2,a,o,u,d),2},Ce},s.exports.default=s.exports,Object.defineProperty(s.exports,"__esModule",{value:!0})}(cm)),cm.exports}var ky;function bD(){return ky||(ky=1,lm.exports=MD()),lm.exports}var ED=bD();const TD=dx(ED);var fm={exports:{}},dm={};/**
 * @license React
 * scheduler.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Wy;function AD(){return Wy||(Wy=1,function(s){function t(F,X){var G=F.length;F.push(X);t:for(;0<G;){var st=G-1>>>1,ct=F[st];if(0<i(ct,X))F[st]=X,F[G]=ct,G=st;else break t}}function e(F){return F.length===0?null:F[0]}function n(F){if(F.length===0)return null;var X=F[0],G=F.pop();if(G!==X){F[0]=G;t:for(var st=0,ct=F.length,_t=ct>>>1;st<_t;){var Dt=2*(st+1)-1,Xt=F[Dt],tt=Dt+1,yt=F[tt];if(0>i(Xt,G))tt<ct&&0>i(yt,Xt)?(F[st]=yt,F[tt]=G,st=tt):(F[st]=Xt,F[Dt]=G,st=Dt);else if(tt<ct&&0>i(yt,G))F[st]=yt,F[tt]=G,st=tt;else break t}}return X}function i(F,X){var G=F.sortIndex-X.sortIndex;return G!==0?G:F.id-X.id}if(s.unstable_now=void 0,typeof performance=="object"&&typeof performance.now=="function"){var r=performance;s.unstable_now=function(){return r.now()}}else{var l=Date,c=l.now();s.unstable_now=function(){return l.now()-c}}var h=[],f=[],p=1,m=null,g=3,v=!1,x=!1,M=!1,S=typeof setTimeout=="function"?setTimeout:null,_=typeof clearTimeout=="function"?clearTimeout:null,E=typeof setImmediate<"u"?setImmediate:null;function T(F){for(var X=e(f);X!==null;){if(X.callback===null)n(f);else if(X.startTime<=F)n(f),X.sortIndex=X.expirationTime,t(h,X);else break;X=e(f)}}function A(F){if(M=!1,T(F),!x)if(e(h)!==null)x=!0,J();else{var X=e(f);X!==null&&nt(A,X.startTime-F)}}var N=!1,D=-1,I=5,z=-1;function C(){return!(s.unstable_now()-z<I)}function w(){if(N){var F=s.unstable_now();z=F;var X=!0;try{t:{x=!1,M&&(M=!1,_(D),D=-1),v=!0;var G=g;try{e:{for(T(F),m=e(h);m!==null&&!(m.expirationTime>F&&C());){var st=m.callback;if(typeof st=="function"){m.callback=null,g=m.priorityLevel;var ct=st(m.expirationTime<=F);if(F=s.unstable_now(),typeof ct=="function"){m.callback=ct,T(F),X=!0;break e}m===e(h)&&n(h),T(F)}else n(h);m=e(h)}if(m!==null)X=!0;else{var _t=e(f);_t!==null&&nt(A,_t.startTime-F),X=!1}}break t}finally{m=null,g=G,v=!1}X=void 0}}finally{X?B():N=!1}}}var B;if(typeof E=="function")B=function(){E(w)};else if(typeof MessageChannel<"u"){var $=new MessageChannel,q=$.port2;$.port1.onmessage=w,B=function(){q.postMessage(null)}}else B=function(){S(w,0)};function J(){N||(N=!0,B())}function nt(F,X){D=S(function(){F(s.unstable_now())},X)}s.unstable_IdlePriority=5,s.unstable_ImmediatePriority=1,s.unstable_LowPriority=4,s.unstable_NormalPriority=3,s.unstable_Profiling=null,s.unstable_UserBlockingPriority=2,s.unstable_cancelCallback=function(F){F.callback=null},s.unstable_continueExecution=function(){x||v||(x=!0,J())},s.unstable_forceFrameRate=function(F){0>F||125<F?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):I=0<F?Math.floor(1e3/F):5},s.unstable_getCurrentPriorityLevel=function(){return g},s.unstable_getFirstCallbackNode=function(){return e(h)},s.unstable_next=function(F){switch(g){case 1:case 2:case 3:var X=3;break;default:X=g}var G=g;g=X;try{return F()}finally{g=G}},s.unstable_pauseExecution=function(){},s.unstable_requestPaint=function(){},s.unstable_runWithPriority=function(F,X){switch(F){case 1:case 2:case 3:case 4:case 5:break;default:F=3}var G=g;g=F;try{return X()}finally{g=G}},s.unstable_scheduleCallback=function(F,X,G){var st=s.unstable_now();switch(typeof G=="object"&&G!==null?(G=G.delay,G=typeof G=="number"&&0<G?st+G:st):G=st,F){case 1:var ct=-1;break;case 2:ct=250;break;case 5:ct=1073741823;break;case 4:ct=1e4;break;default:ct=5e3}return ct=G+ct,F={id:p++,callback:X,priorityLevel:F,startTime:G,expirationTime:ct,sortIndex:-1},G>st?(F.sortIndex=G,t(f,F),e(h)===null&&F===e(f)&&(M?(_(D),D=-1):M=!0,nt(A,G-st))):(F.sortIndex=ct,t(h,F),x||v||(x=!0,J())),F},s.unstable_shouldYield=C,s.unstable_wrapCallback=function(F){var X=g;return function(){var G=g;g=X;try{return F.apply(this,arguments)}finally{g=G}}}}(dm)),dm}var Xy;function wD(){return Xy||(Xy=1,fm.exports=AD()),fm.exports}var qy=wD();const CD=s=>typeof s=="object"&&typeof s.then=="function",yr=[];function dM(s,t,e=(n,i)=>n===i){if(s===t)return!0;if(!s||!t)return!1;const n=s.length;if(t.length!==n)return!1;for(let i=0;i<n;i++)if(!e(s[i],t[i]))return!1;return!0}function pM(s,t=null,e=!1,n={}){t===null&&(t=[s]);for(const r of yr)if(dM(t,r.keys,r.equal)){if(e)return;if(Object.prototype.hasOwnProperty.call(r,"error"))throw r.error;if(Object.prototype.hasOwnProperty.call(r,"response"))return n.lifespan&&n.lifespan>0&&(r.timeout&&clearTimeout(r.timeout),r.timeout=setTimeout(r.remove,n.lifespan)),r.response;if(!e)throw r.promise}const i={keys:t,equal:n.equal,remove:()=>{const r=yr.indexOf(i);r!==-1&&yr.splice(r,1)},promise:(CD(s)?s:s(...t)).then(r=>{i.response=r,n.lifespan&&n.lifespan>0&&(i.timeout=setTimeout(i.remove,n.lifespan))}).catch(r=>i.error=r)};if(yr.push(i),!e)throw i.promise}const RD=(s,t,e)=>pM(s,t,!1,e),DD=(s,t,e)=>void pM(s,t,!0,e),UD=s=>{if(s===void 0||s.length===0)yr.splice(0,yr.length);else{const t=yr.find(e=>dM(s,e.keys,e.equal));t&&t.remove()}};function Vg(s,t,e){if(!s)return;if(e(s)===!0)return s;let n=t?s.return:s.child;for(;n;){const i=Vg(n,t,e);if(i)return i;n=t?null:n.sibling}}function mM(s){try{return Object.defineProperties(s,{_currentRenderer:{get(){return null},set(){}},_currentRenderer2:{get(){return null},set(){}}})}catch{return s}}const Gg=mM(dt.createContext(null));class gM extends dt.Component{render(){return dt.createElement(Gg.Provider,{value:this._reactInternals},this.props.children)}}function vM(){const s=dt.useContext(Gg);if(s===null)throw new Error("its-fine: useFiber must be called within a <FiberProvider />!");const t=dt.useId();return dt.useMemo(()=>{for(const e of[s,s?.alternate]){if(!e)continue;const n=Vg(e,!1,i=>{let r=i.memoizedState;for(;r;){if(r.memoizedState===t)return!0;r=r.next}});if(n)return n}},[s,t])}const PD=Symbol.for("react.context"),ND=s=>s!==null&&typeof s=="object"&&"$$typeof"in s&&s.$$typeof===PD;function LD(){const s=vM(),[t]=dt.useState(()=>new Map);t.clear();let e=s;for(;e;){const n=e.type;ND(n)&&n!==Gg&&!t.has(n)&&t.set(n,dt.use(mM(n))),e=e.return}return t}function ID(){const s=LD();return dt.useMemo(()=>Array.from(s.keys()).reduce((t,e)=>n=>dt.createElement(t,null,dt.createElement(e.Provider,{...n,value:s.get(e)})),t=>dt.createElement(gM,{...t})),[s])}function _M(s){let t=s.root;for(;t.getState().previousRoot;)t=t.getState().previousRoot;return t}const yM=s=>s&&s.isOrthographicCamera,OD=s=>s&&s.hasOwnProperty("current"),zD=s=>s!=null&&(typeof s=="string"||typeof s=="number"||s.isColor),Tc=((s,t)=>typeof window<"u"&&(((s=window.document)==null?void 0:s.createElement)||((t=window.navigator)==null?void 0:t.product)==="ReactNative"))()?dt.useLayoutEffect:dt.useEffect;function xM(s){const t=dt.useRef(s);return Tc(()=>void(t.current=s),[s]),t}function BD(){const s=vM(),t=ID();return dt.useMemo(()=>({children:e})=>{const i=!!Vg(s,!0,r=>r.type===dt.StrictMode)?dt.StrictMode:dt.Fragment;return Pt.jsx(i,{children:Pt.jsx(t,{children:e})})},[s,t])}function FD({set:s}){return Tc(()=>(s(new Promise(()=>null)),()=>s(!1)),[s]),null}const HD=(s=>(s=class extends dt.Component{constructor(...e){super(...e),this.state={error:!1}}componentDidCatch(e){this.props.set(e)}render(){return this.state.error?null:this.props.children}},s.getDerivedStateFromError=()=>({error:!0}),s))();function SM(s){var t;const e=typeof window<"u"?(t=window.devicePixelRatio)!=null?t:2:1;return Array.isArray(s)?Math.min(Math.max(s[0],e),s[1]):s}function bo(s){var t;return(t=s.__r3f)==null?void 0:t.root.getState()}const tn={obj:s=>s===Object(s)&&!tn.arr(s)&&typeof s!="function",fun:s=>typeof s=="function",str:s=>typeof s=="string",num:s=>typeof s=="number",boo:s=>typeof s=="boolean",und:s=>s===void 0,nul:s=>s===null,arr:s=>Array.isArray(s),equ(s,t,{arrays:e="shallow",objects:n="reference",strict:i=!0}={}){if(typeof s!=typeof t||!!s!=!!t)return!1;if(tn.str(s)||tn.num(s)||tn.boo(s))return s===t;const r=tn.obj(s);if(r&&n==="reference")return s===t;const l=tn.arr(s);if(l&&e==="reference")return s===t;if((l||r)&&s===t)return!0;let c;for(c in s)if(!(c in t))return!1;if(r&&e==="shallow"&&n==="shallow"){for(c in i?t:s)if(!tn.equ(s[c],t[c],{strict:i,objects:"reference"}))return!1}else for(c in i?t:s)if(s[c]!==t[c])return!1;if(tn.und(c)){if(l&&s.length===0&&t.length===0||r&&Object.keys(s).length===0&&Object.keys(t).length===0)return!0;if(s!==t)return!1}return!0}};function VD(s){const t={nodes:{},materials:{},meshes:{}};return s&&s.traverse(e=>{e.name&&(t.nodes[e.name]=e),e.material&&!t.materials[e.material.name]&&(t.materials[e.material.name]=e.material),e.isMesh&&!t.meshes[e.name]&&(t.meshes[e.name]=e)}),t}function GD(s){s.type!=="Scene"&&(s.dispose==null||s.dispose());for(const t in s){const e=s[t];e?.type!=="Scene"&&(e==null||e.dispose==null||e.dispose())}}const MM=["children","key","ref"];function kD(s){const t={};for(const e in s)MM.includes(e)||(t[e]=s[e]);return t}function af(s,t,e,n){const i=s;let r=i?.__r3f;return r||(r={root:t,type:e,parent:null,children:[],props:kD(n),object:i,eventCount:0,handlers:{},isHidden:!1},i&&(i.__r3f=r)),r}function mc(s,t){let e=s[t];if(!t.includes("-"))return{root:s,key:t,target:e};e=s;for(const i of t.split("-")){var n;t=i,s=e,e=(n=e)==null?void 0:n[t]}return{root:s,key:t,target:e}}const Yy=/-\d+$/;function rf(s,t){if(tn.str(t.props.attach)){if(Yy.test(t.props.attach)){const i=t.props.attach.replace(Yy,""),{root:r,key:l}=mc(s.object,i);Array.isArray(r[l])||(r[l]=[])}const{root:e,key:n}=mc(s.object,t.props.attach);t.previousAttach=e[n],e[n]=t.object}else tn.fun(t.props.attach)&&(t.previousAttach=t.props.attach(s.object,t.object))}function of(s,t){if(tn.str(t.props.attach)){const{root:e,key:n}=mc(s.object,t.props.attach),i=t.previousAttach;i===void 0?delete e[n]:e[n]=i}else t.previousAttach==null||t.previousAttach(s.object,t.object);delete t.previousAttach}const Gm=[...MM,"args","dispose","attach","object","onUpdate","dispose"],jy=new Map;function WD(s){let t=jy.get(s.constructor);try{t||(t=new s.constructor,jy.set(s.constructor,t))}catch{}return t}function XD(s,t){const e={};for(const n in t)if(!Gm.includes(n)&&!tn.equ(t[n],s.props[n])){e[n]=t[n];for(const i in t)i.startsWith(`${n}-`)&&(e[i]=t[i])}for(const n in s.props){if(Gm.includes(n)||t.hasOwnProperty(n))continue;const{root:i,key:r}=mc(s.object,n);if(i.constructor&&i.constructor.length===0){const l=WD(i);tn.und(l)||(e[r]=l[r])}else e[r]=0}return e}const qD=["map","emissiveMap","sheenColorMap","specularColorMap","envMap"],YD=/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/;function ba(s,t){var e;const n=s.__r3f,i=n&&_M(n).getState(),r=n?.eventCount;for(const c in t){let h=t[c];if(Gm.includes(c))continue;if(n&&YD.test(c)){typeof h=="function"?n.handlers[c]=h:delete n.handlers[c],n.eventCount=Object.keys(n.handlers).length;continue}if(h===void 0)continue;let{root:f,key:p,target:m}=mc(s,c);if(m instanceof Fo&&h instanceof Fo)m.mask=h.mask;else if(m instanceof kt&&zD(h))m.set(h);else if(m!==null&&typeof m=="object"&&typeof m.set=="function"&&typeof m.copy=="function"&&h!=null&&h.constructor&&m.constructor===h.constructor)m.copy(h);else if(m!==null&&typeof m=="object"&&typeof m.set=="function"&&Array.isArray(h))typeof m.fromArray=="function"?m.fromArray(h):m.set(...h);else if(m!==null&&typeof m=="object"&&typeof m.set=="function"&&typeof h=="number")typeof m.setScalar=="function"?m.setScalar(h):m.set(h);else{var l;f[p]=h,i&&!i.linear&&qD.includes(p)&&(l=f[p])!=null&&l.isTexture&&f[p].format===Xn&&f[p].type===Vi&&(f[p].colorSpace=Wn)}}if(n!=null&&n.parent&&i!=null&&i.internal&&(e=n.object)!=null&&e.isObject3D&&r!==n.eventCount){const c=n.object,h=i.internal.interaction.indexOf(c);h>-1&&i.internal.interaction.splice(h,1),n.eventCount&&c.raycast!==null&&i.internal.interaction.push(c)}return n&&n.props.attach===void 0&&(n.object.isBufferGeometry?n.props.attach="geometry":n.object.isMaterial&&(n.props.attach="material")),n&&Ko(n),s}function Ko(s){var t;if(!s.parent)return;s.props.onUpdate==null||s.props.onUpdate(s.object);const e=(t=s.root)==null||t.getState==null?void 0:t.getState();e&&e.internal.frames===0&&e.invalidate()}function jD(s,t){s.manual||(yM(s)?(s.left=t.width/-2,s.right=t.width/2,s.top=t.height/2,s.bottom=t.height/-2):s.aspect=t.width/t.height,s.updateProjectionMatrix())}const ti=s=>s?.isObject3D;function ih(s){return(s.eventObject||s.object).uuid+"/"+s.index+s.instanceId}function bM(s,t,e,n){const i=e.get(t);i&&(e.delete(t),e.size===0&&(s.delete(n),i.target.releasePointerCapture(n)))}function ZD(s,t){const{internal:e}=s.getState();e.interaction=e.interaction.filter(n=>n!==t),e.initialHits=e.initialHits.filter(n=>n!==t),e.hovered.forEach((n,i)=>{(n.eventObject===t||n.object===t)&&e.hovered.delete(i)}),e.capturedMap.forEach((n,i)=>{bM(e.capturedMap,t,n,i)})}function KD(s){function t(h){const{internal:f}=s.getState(),p=h.offsetX-f.initialClick[0],m=h.offsetY-f.initialClick[1];return Math.round(Math.sqrt(p*p+m*m))}function e(h){return h.filter(f=>["Move","Over","Enter","Out","Leave"].some(p=>{var m;return(m=f.__r3f)==null?void 0:m.handlers["onPointer"+p]}))}function n(h,f){const p=s.getState(),m=new Set,g=[],v=f?f(p.internal.interaction):p.internal.interaction;for(let _=0;_<v.length;_++){const E=bo(v[_]);E&&(E.raycaster.camera=void 0)}p.previousRoot||p.events.compute==null||p.events.compute(h,p);function x(_){const E=bo(_);if(!E||!E.events.enabled||E.raycaster.camera===null)return[];if(E.raycaster.camera===void 0){var T;E.events.compute==null||E.events.compute(h,E,(T=E.previousRoot)==null?void 0:T.getState()),E.raycaster.camera===void 0&&(E.raycaster.camera=null)}return E.raycaster.camera?E.raycaster.intersectObject(_,!0):[]}let M=v.flatMap(x).sort((_,E)=>{const T=bo(_.object),A=bo(E.object);return!T||!A?_.distance-E.distance:A.events.priority-T.events.priority||_.distance-E.distance}).filter(_=>{const E=ih(_);return m.has(E)?!1:(m.add(E),!0)});p.events.filter&&(M=p.events.filter(M,p));for(const _ of M){let E=_.object;for(;E;){var S;(S=E.__r3f)!=null&&S.eventCount&&g.push({..._,eventObject:E}),E=E.parent}}if("pointerId"in h&&p.internal.capturedMap.has(h.pointerId))for(let _ of p.internal.capturedMap.get(h.pointerId).values())m.has(ih(_.intersection))||g.push(_.intersection);return g}function i(h,f,p,m){if(h.length){const g={stopped:!1};for(const v of h){let x=bo(v.object);if(x||v.object.traverseAncestors(M=>{const S=bo(M);if(S)return x=S,!1}),x){const{raycaster:M,pointer:S,camera:_,internal:E}=x,T=new L(S.x,S.y,0).unproject(_),A=C=>{var w,B;return(w=(B=E.capturedMap.get(C))==null?void 0:B.has(v.eventObject))!=null?w:!1},N=C=>{const w={intersection:v,target:f.target};E.capturedMap.has(C)?E.capturedMap.get(C).set(v.eventObject,w):E.capturedMap.set(C,new Map([[v.eventObject,w]])),f.target.setPointerCapture(C)},D=C=>{const w=E.capturedMap.get(C);w&&bM(E.capturedMap,v.eventObject,w,C)};let I={};for(let C in f){let w=f[C];typeof w!="function"&&(I[C]=w)}let z={...v,...I,pointer:S,intersections:h,stopped:g.stopped,delta:p,unprojectedPoint:T,ray:M.ray,camera:_,stopPropagation(){const C="pointerId"in f&&E.capturedMap.get(f.pointerId);if((!C||C.has(v.eventObject))&&(z.stopped=g.stopped=!0,E.hovered.size&&Array.from(E.hovered.values()).find(w=>w.eventObject===v.eventObject))){const w=h.slice(0,h.indexOf(v));r([...w,v])}},target:{hasPointerCapture:A,setPointerCapture:N,releasePointerCapture:D},currentTarget:{hasPointerCapture:A,setPointerCapture:N,releasePointerCapture:D},nativeEvent:f};if(m(z),g.stopped===!0)break}}}return h}function r(h){const{internal:f}=s.getState();for(const p of f.hovered.values())if(!h.length||!h.find(m=>m.object===p.object&&m.index===p.index&&m.instanceId===p.instanceId)){const g=p.eventObject.__r3f;if(f.hovered.delete(ih(p)),g!=null&&g.eventCount){const v=g.handlers,x={...p,intersections:h};v.onPointerOut==null||v.onPointerOut(x),v.onPointerLeave==null||v.onPointerLeave(x)}}}function l(h,f){for(let p=0;p<f.length;p++){const m=f[p].__r3f;m==null||m.handlers.onPointerMissed==null||m.handlers.onPointerMissed(h)}}function c(h){switch(h){case"onPointerLeave":case"onPointerCancel":return()=>r([]);case"onLostPointerCapture":return f=>{const{internal:p}=s.getState();"pointerId"in f&&p.capturedMap.has(f.pointerId)&&requestAnimationFrame(()=>{p.capturedMap.has(f.pointerId)&&(p.capturedMap.delete(f.pointerId),r([]))})}}return function(p){const{onPointerMissed:m,internal:g}=s.getState();g.lastEvent.current=p;const v=h==="onPointerMove",x=h==="onClick"||h==="onContextMenu"||h==="onDoubleClick",S=n(p,v?e:void 0),_=x?t(p):0;h==="onPointerDown"&&(g.initialClick=[p.offsetX,p.offsetY],g.initialHits=S.map(T=>T.eventObject)),x&&!S.length&&_<=2&&(l(p,g.interaction),m&&m(p)),v&&r(S);function E(T){const A=T.eventObject,N=A.__r3f;if(!(N!=null&&N.eventCount))return;const D=N.handlers;if(v){if(D.onPointerOver||D.onPointerEnter||D.onPointerOut||D.onPointerLeave){const I=ih(T),z=g.hovered.get(I);z?z.stopped&&T.stopPropagation():(g.hovered.set(I,T),D.onPointerOver==null||D.onPointerOver(T),D.onPointerEnter==null||D.onPointerEnter(T))}D.onPointerMove==null||D.onPointerMove(T)}else{const I=D[h];I?(!x||g.initialHits.includes(A))&&(l(p,g.interaction.filter(z=>!g.initialHits.includes(z))),I(T)):x&&g.initialHits.includes(A)&&l(p,g.interaction.filter(z=>!g.initialHits.includes(z)))}}i(S,p,_,E)}}return{handlePointer:c}}const Zy=s=>!!(s!=null&&s.render),EM=dt.createContext(null),JD=(s,t)=>{const e=yD((c,h)=>{const f=new L,p=new L,m=new L;function g(_=h().camera,E=p,T=h().size){const{width:A,height:N,top:D,left:I}=T,z=A/N;E.isVector3?m.copy(E):m.set(...E);const C=_.getWorldPosition(f).distanceTo(m);if(yM(_))return{width:A/_.zoom,height:N/_.zoom,top:D,left:I,factor:1,distance:C,aspect:z};{const w=_.fov*Math.PI/180,B=2*Math.tan(w/2)*C,$=B*(A/N);return{width:$,height:B,top:D,left:I,factor:A/$,distance:C,aspect:z}}}let v;const x=_=>c(E=>({performance:{...E.performance,current:_}})),M=new ft;return{set:c,get:h,gl:null,camera:null,raycaster:null,events:{priority:1,enabled:!0,connected:!1},scene:null,xr:null,invalidate:(_=1)=>s(h(),_),advance:(_,E)=>t(_,E,h()),legacy:!1,linear:!1,flat:!1,controls:null,clock:new Ig,pointer:M,mouse:M,frameloop:"always",onPointerMissed:void 0,performance:{current:1,min:.5,max:1,debounce:200,regress:()=>{const _=h();v&&clearTimeout(v),_.performance.current!==_.performance.min&&x(_.performance.min),v=setTimeout(()=>x(h().performance.max),_.performance.debounce)}},size:{width:0,height:0,top:0,left:0},viewport:{initialDpr:0,dpr:0,width:0,height:0,top:0,left:0,aspect:0,distance:0,factor:0,getCurrentViewport:g},setEvents:_=>c(E=>({...E,events:{...E.events,..._}})),setSize:(_,E,T=0,A=0)=>{const N=h().camera,D={width:_,height:E,top:T,left:A};c(I=>({size:D,viewport:{...I.viewport,...g(N,p,D)}}))},setDpr:_=>c(E=>{const T=SM(_);return{viewport:{...E.viewport,dpr:T,initialDpr:E.viewport.initialDpr||T}}}),setFrameloop:(_="always")=>{const E=h().clock;E.stop(),E.elapsedTime=0,_!=="never"&&(E.start(),E.elapsedTime=0),c(()=>({frameloop:_}))},previousRoot:void 0,internal:{interaction:[],hovered:new Map,subscribers:[],initialClick:[0,0],initialHits:[],capturedMap:new Map,lastEvent:dt.createRef(),active:!1,frames:0,priority:0,subscribe:(_,E,T)=>{const A=h().internal;return A.priority=A.priority+(E>0?1:0),A.subscribers.push({ref:_,priority:E,store:T}),A.subscribers=A.subscribers.sort((N,D)=>N.priority-D.priority),()=>{const N=h().internal;N!=null&&N.subscribers&&(N.priority=N.priority-(E>0?1:0),N.subscribers=N.subscribers.filter(D=>D.ref!==_))}}}}}),n=e.getState();let i=n.size,r=n.viewport.dpr,l=n.camera;return e.subscribe(()=>{const{camera:c,size:h,viewport:f,gl:p,set:m}=e.getState();if(h.width!==i.width||h.height!==i.height||f.dpr!==r){i=h,r=f.dpr,jD(c,h),f.dpr>0&&p.setPixelRatio(f.dpr);const g=typeof HTMLCanvasElement<"u"&&p.domElement instanceof HTMLCanvasElement;p.setSize(h.width,h.height,g)}c!==l&&(l=c,m(g=>({viewport:{...g.viewport,...g.viewport.getCurrentViewport(c)}})))}),e.subscribe(c=>s(c)),e};function TM(){const s=dt.useContext(EM);if(!s)throw new Error("R3F: Hooks can only be used within the Canvas component!");return s}function ks(s=e=>e,t){return TM()(s,t)}function Ac(s,t=0){const e=TM(),n=e.getState().internal.subscribe,i=xM(s);return Tc(()=>n(i,t,e),[t,n,e]),null}const Ky=new WeakMap,QD=s=>{var t;return typeof s=="function"&&(s==null||(t=s.prototype)==null?void 0:t.constructor)===s};function AM(s,t){return function(e,...n){let i;return QD(e)?(i=Ky.get(e),i||(i=new e,Ky.set(e,i))):i=e,s&&s(i),Promise.all(n.map(r=>new Promise((l,c)=>i.load(r,h=>{ti(h?.scene)&&Object.assign(h,VD(h.scene)),l(h)},t,h=>c(new Error(`Could not load ${r}: ${h?.message}`))))))}}function wc(s,t,e,n){const i=Array.isArray(t)?t:[t],r=RD(AM(e,n),[s,...i],{equal:tn.equ});return Array.isArray(t)?r:r[0]}wc.preload=function(s,t,e){const n=Array.isArray(t)?t:[t];return DD(AM(e),[s,...n])};wc.clear=function(s,t){const e=Array.isArray(t)?t:[t];return UD([s,...e])};function $D(s){const t=TD(s);return t.injectIntoDevTools({bundleType:0,rendererPackageName:"@react-three/fiber",version:dt.version}),t}const wM=0,ko={},tU=/^three(?=[A-Z])/,kf=s=>`${s[0].toUpperCase()}${s.slice(1)}`;let eU=0;const nU=s=>typeof s=="function";function iU(s){if(nU(s)){const t=`${eU++}`;return ko[t]=s,t}else Object.assign(ko,s)}function CM(s,t){const e=kf(s),n=ko[e];if(s!=="primitive"&&!n)throw new Error(`R3F: ${e} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`);if(s==="primitive"&&!t.object)throw new Error("R3F: Primitives without 'object' are invalid!");if(t.args!==void 0&&!Array.isArray(t.args))throw new Error("R3F: The args prop must be an array!")}function sU(s,t,e){var n;return s=kf(s)in ko?s:s.replace(tU,""),CM(s,t),s==="primitive"&&(n=t.object)!=null&&n.__r3f&&delete t.object.__r3f,af(t.object,e,s,t)}function aU(s){if(!s.isHidden){var t;s.props.attach&&(t=s.parent)!=null&&t.object?of(s.parent,s):ti(s.object)&&(s.object.visible=!1),s.isHidden=!0,Ko(s)}}function RM(s){if(s.isHidden){var t;s.props.attach&&(t=s.parent)!=null&&t.object?rf(s.parent,s):ti(s.object)&&s.props.visible!==!1&&(s.object.visible=!0),s.isHidden=!1,Ko(s)}}function kg(s,t,e){const n=t.root.getState();if(!(!s.parent&&s.object!==n.scene)){if(!t.object){var i,r;const l=ko[kf(t.type)];t.object=(i=t.props.object)!=null?i:new l(...(r=t.props.args)!=null?r:[]),t.object.__r3f=t}if(ba(t.object,t.props),t.props.attach)rf(s,t);else if(ti(t.object)&&ti(s.object)){const l=s.object.children.indexOf(e?.object);if(e&&l!==-1){const c=s.object.children.indexOf(t.object);if(c!==-1){s.object.children.splice(c,1);const h=c<l?l-1:l;s.object.children.splice(h,0,t.object)}else t.object.parent=s.object,s.object.children.splice(l,0,t.object),t.object.dispatchEvent({type:"added"}),s.object.dispatchEvent({type:"childadded",child:t.object})}else s.object.add(t.object)}for(const l of t.children)kg(t,l);Ko(t)}}function pm(s,t){t&&(t.parent=s,s.children.push(t),kg(s,t))}function Jy(s,t,e){if(!t||!e)return;t.parent=s;const n=s.children.indexOf(e);n!==-1?s.children.splice(n,0,t):s.children.push(t),kg(s,t,e)}function DM(s){if(typeof s.dispose=="function"){const t=()=>{try{s.dispose()}catch{}};typeof IS_REACT_ACT_ENVIRONMENT<"u"?t():qy.unstable_scheduleCallback(qy.unstable_IdlePriority,t)}}function km(s,t,e){if(!t)return;t.parent=null;const n=s.children.indexOf(t);n!==-1&&s.children.splice(n,1),t.props.attach?of(s,t):ti(t.object)&&ti(s.object)&&(s.object.remove(t.object),ZD(_M(t),t.object));const i=t.props.dispose!==null&&e!==!1;for(let r=t.children.length-1;r>=0;r--){const l=t.children[r];km(t,l,i)}t.children.length=0,delete t.object.__r3f,i&&t.type!=="primitive"&&t.object.type!=="Scene"&&DM(t.object),e===void 0&&Ko(t)}function rU(s,t){for(const e of[s,s.alternate])if(e!==null)if(typeof e.ref=="function"){e.refCleanup==null||e.refCleanup();const n=e.ref(t);typeof n=="function"&&(e.refCleanup=n)}else e.ref&&(e.ref.current=t)}const dh=[];function oU(){for(const[e]of dh){const n=e.parent;if(n){e.props.attach?of(n,e):ti(e.object)&&ti(n.object)&&n.object.remove(e.object);for(const i of e.children)i.props.attach?of(e,i):ti(i.object)&&ti(e.object)&&e.object.remove(i.object)}e.isHidden&&RM(e),e.object.__r3f&&delete e.object.__r3f,e.type!=="primitive"&&DM(e.object)}for(const[e,n,i]of dh){e.props=n;const r=e.parent;if(r){var s,t;const l=ko[kf(e.type)];e.object=(s=e.props.object)!=null?s:new l(...(t=e.props.args)!=null?t:[]),e.object.__r3f=e,rU(i,e.object),ba(e.object,e.props),e.props.attach?rf(r,e):ti(e.object)&&ti(r.object)&&r.object.add(e.object);for(const c of e.children)c.props.attach?rf(e,c):ti(c.object)&&ti(e.object)&&e.object.add(c.object);Ko(e)}}dh.length=0}const mm=()=>{},Qy={};let sh=wM;const lU=0,cU=4,Wm=$D({isPrimaryRenderer:!1,warnsIfNotActing:!1,supportsMutation:!0,supportsPersistence:!1,supportsHydration:!1,createInstance:sU,removeChild:km,appendChild:pm,appendInitialChild:pm,insertBefore:Jy,appendChildToContainer(s,t){const e=s.getState().scene.__r3f;!t||!e||pm(e,t)},removeChildFromContainer(s,t){const e=s.getState().scene.__r3f;!t||!e||km(e,t)},insertInContainerBefore(s,t,e){const n=s.getState().scene.__r3f;!t||!e||!n||Jy(n,t,e)},getRootHostContext:()=>Qy,getChildHostContext:()=>Qy,commitUpdate(s,t,e,n,i){var r,l,c;CM(t,n);let h=!1;if((s.type==="primitive"&&e.object!==n.object||((r=n.args)==null?void 0:r.length)!==((l=e.args)==null?void 0:l.length)||(c=n.args)!=null&&c.some((p,m)=>{var g;return p!==((g=e.args)==null?void 0:g[m])}))&&(h=!0),h)dh.push([s,{...n},i]);else{const p=XD(s,n);Object.keys(p).length&&(Object.assign(s.props,p),ba(s.object,p))}(i.sibling===null||(i.flags&cU)===lU)&&oU()},finalizeInitialChildren:()=>!1,commitMount(){},getPublicInstance:s=>s?.object,prepareForCommit:()=>null,preparePortalMount:s=>af(s.getState().scene,s,"",{}),resetAfterCommit:()=>{},shouldSetTextContent:()=>!1,clearContainer:()=>!1,hideInstance:aU,unhideInstance:RM,createTextInstance:mm,hideTextInstance:mm,unhideTextInstance:mm,scheduleTimeout:typeof setTimeout=="function"?setTimeout:void 0,cancelTimeout:typeof clearTimeout=="function"?clearTimeout:void 0,noTimeout:-1,getInstanceFromNode:()=>null,beforeActiveInstanceBlur(){},afterActiveInstanceBlur(){},detachDeletedInstance(){},prepareScopeUpdate(){},getInstanceFromScope:()=>null,shouldAttemptEagerTransition:()=>!1,trackSchedulerEvent:()=>{},resolveEventType:()=>null,resolveEventTimeStamp:()=>-1.1,requestPostPaintCallback(){},maySuspendCommit:()=>!1,preloadInstance:()=>!0,startSuspendingCommit(){},suspendInstance(){},waitForCommitToBeReady:()=>null,NotPendingTransition:null,HostTransitionContext:dt.createContext(null),setCurrentUpdatePriority(s){sh=s},getCurrentUpdatePriority(){return sh},resolveUpdatePriority(){var s;if(sh!==wM)return sh;switch(typeof window<"u"&&((s=window.event)==null?void 0:s.type)){case"click":case"contextmenu":case"dblclick":case"pointercancel":case"pointerdown":case"pointerup":return fh.DiscreteEventPriority;case"pointermove":case"pointerout":case"pointerover":case"pointerenter":case"pointerleave":case"wheel":return fh.ContinuousEventPriority;default:return fh.DefaultEventPriority}},resetFormInstance(){}}),Tr=new Map,Eo={objects:"shallow",strict:!1};function uU(s,t){if(!t&&typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement&&s.parentElement){const{width:e,height:n,top:i,left:r}=s.parentElement.getBoundingClientRect();return{width:e,height:n,top:i,left:r}}else if(!t&&typeof OffscreenCanvas<"u"&&s instanceof OffscreenCanvas)return{width:s.width,height:s.height,top:0,left:0};return{width:0,height:0,top:0,left:0,...t}}function hU(s){const t=Tr.get(s),e=t?.fiber,n=t?.store;t&&console.warn("R3F.createRoot should only be called once!");const i=typeof reportError=="function"?reportError:console.error,r=n||JD(Ym,tx),l=e||Wm.createContainer(r,fh.ConcurrentRoot,null,!1,null,"",i,i,i,null);t||Tr.set(s,{fiber:l,store:r});let c,h,f=!1,p=null;return{async configure(m={}){let g;p=new Promise(_t=>g=_t);let{gl:v,size:x,scene:M,events:S,onCreated:_,shadows:E=!1,linear:T=!1,flat:A=!1,legacy:N=!1,orthographic:D=!1,frameloop:I="always",dpr:z=[1,2],performance:C,raycaster:w,camera:B,onPointerMissed:$}=m,q=r.getState(),J=q.gl;if(!q.gl){const _t={canvas:s,powerPreference:"high-performance",antialias:!0,alpha:!0},Dt=typeof v=="function"?await v(_t):v;Zy(Dt)?J=Dt:J=new hM({..._t,...v}),q.set({gl:J})}let nt=q.raycaster;nt||q.set({raycaster:nt=new nM});const{params:F,...X}=w||{};if(tn.equ(X,nt,Eo)||ba(nt,{...X}),tn.equ(F,nt.params,Eo)||ba(nt,{params:{...nt.params,...F}}),!q.camera||q.camera===h&&!tn.equ(h,B,Eo)){h=B;const _t=B?.isCamera,Dt=_t?B:D?new ys(0,0,0,0,.1,1e3):new sn(75,0,.1,1e3);_t||(Dt.position.z=5,B&&(ba(Dt,B),Dt.manual||("aspect"in B||"left"in B||"right"in B||"bottom"in B||"top"in B)&&(Dt.manual=!0,Dt.updateProjectionMatrix())),!q.camera&&!(B!=null&&B.rotation)&&Dt.lookAt(0,0,0)),q.set({camera:Dt}),nt.camera=Dt}if(!q.scene){let _t;M!=null&&M.isScene?(_t=M,af(_t,r,"",{})):(_t=new fg,af(_t,r,"",{}),M&&ba(_t,M)),q.set({scene:_t})}S&&!q.events.handlers&&q.set({events:S(r)});const G=uU(s,x);if(tn.equ(G,q.size,Eo)||q.setSize(G.width,G.height,G.top,G.left),z&&q.viewport.dpr!==SM(z)&&q.setDpr(z),q.frameloop!==I&&q.setFrameloop(I),q.onPointerMissed||q.set({onPointerMissed:$}),C&&!tn.equ(C,q.performance,Eo)&&q.set(_t=>({performance:{..._t.performance,...C}})),!q.xr){var st;const _t=(tt,yt)=>{const Yt=r.getState();Yt.frameloop!=="never"&&tx(tt,!0,Yt,yt)},Dt=()=>{const tt=r.getState();tt.gl.xr.enabled=tt.gl.xr.isPresenting,tt.gl.xr.setAnimationLoop(tt.gl.xr.isPresenting?_t:null),tt.gl.xr.isPresenting||Ym(tt)},Xt={connect(){const tt=r.getState().gl;tt.xr.addEventListener("sessionstart",Dt),tt.xr.addEventListener("sessionend",Dt)},disconnect(){const tt=r.getState().gl;tt.xr.removeEventListener("sessionstart",Dt),tt.xr.removeEventListener("sessionend",Dt)}};typeof((st=J.xr)==null?void 0:st.addEventListener)=="function"&&Xt.connect(),q.set({xr:Xt})}if(J.shadowMap){const _t=J.shadowMap.enabled,Dt=J.shadowMap.type;if(J.shadowMap.enabled=!!E,tn.boo(E))J.shadowMap.type=Vl;else if(tn.str(E)){var ct;const Xt={basic:gx,percentage:cf,soft:Vl,variance:Qi};J.shadowMap.type=(ct=Xt[E])!=null?ct:Vl}else tn.obj(E)&&Object.assign(J.shadowMap,E);(_t!==J.shadowMap.enabled||Dt!==J.shadowMap.type)&&(J.shadowMap.needsUpdate=!0)}return Ue.enabled=!N,f||(J.outputColorSpace=T?wa:Wn,J.toneMapping=A?vs:Jm),q.legacy!==N&&q.set(()=>({legacy:N})),q.linear!==T&&q.set(()=>({linear:T})),q.flat!==A&&q.set(()=>({flat:A})),v&&!tn.fun(v)&&!Zy(v)&&!tn.equ(v,J,Eo)&&ba(J,v),c=_,f=!0,g(),this},render(m){return!f&&!p&&this.configure(),p.then(()=>{Wm.updateContainer(Pt.jsx(fU,{store:r,children:m,onCreated:c,rootElement:s}),l,null,()=>{})}),r},unmount(){UM(s)}}}function fU({store:s,children:t,onCreated:e,rootElement:n}){return Tc(()=>{const i=s.getState();i.set(r=>({internal:{...r.internal,active:!0}})),e&&e(i),s.getState().events.connected||i.events.connect==null||i.events.connect(n)},[]),Pt.jsx(EM.Provider,{value:s,children:t})}function UM(s,t){const e=Tr.get(s),n=e?.fiber;if(n){const i=e?.store.getState();i&&(i.internal.active=!1),Wm.updateContainer(null,n,null,()=>{i&&setTimeout(()=>{try{var r,l,c,h;i.events.disconnect==null||i.events.disconnect(),(r=i.gl)==null||(l=r.renderLists)==null||l.dispose==null||l.dispose(),(c=i.gl)==null||c.forceContextLoss==null||c.forceContextLoss(),(h=i.gl)!=null&&h.xr&&i.xr.disconnect(),GD(i.scene),Tr.delete(s)}catch{}},500)})}}const dU=new Set,pU=new Set,mU=new Set;function gm(s,t){if(s.size)for(const{callback:e}of s.values())e(t)}function Jl(s,t){switch(s){case"before":return gm(dU,t);case"after":return gm(pU,t);case"tail":return gm(mU,t)}}let vm,_m;function Xm(s,t,e){let n=t.clock.getDelta();t.frameloop==="never"&&typeof s=="number"&&(n=s-t.clock.elapsedTime,t.clock.oldTime=t.clock.elapsedTime,t.clock.elapsedTime=s),vm=t.internal.subscribers;for(let i=0;i<vm.length;i++)_m=vm[i],_m.ref.current(_m.store.getState(),n,e);return!t.internal.priority&&t.gl.render&&t.gl.render(t.scene,t.camera),t.internal.frames=Math.max(0,t.internal.frames-1),t.frameloop==="always"?1:t.internal.frames}let lf=!1,qm=!1,ym,$y,To;function PM(s){$y=requestAnimationFrame(PM),lf=!0,ym=0,Jl("before",s),qm=!0;for(const e of Tr.values()){var t;To=e.store.getState(),To.internal.active&&(To.frameloop==="always"||To.internal.frames>0)&&!((t=To.gl.xr)!=null&&t.isPresenting)&&(ym+=Xm(s,To))}if(qm=!1,Jl("after",s),ym===0)return Jl("tail",s),lf=!1,cancelAnimationFrame($y)}function Ym(s,t=1){var e;if(!s)return Tr.forEach(n=>Ym(n.store.getState(),t));(e=s.gl.xr)!=null&&e.isPresenting||!s.internal.active||s.frameloop==="never"||(t>1?s.internal.frames=Math.min(60,s.internal.frames+t):qm?s.internal.frames=2:s.internal.frames=1,lf||(lf=!0,requestAnimationFrame(PM)))}function tx(s,t=!0,e,n){if(t&&Jl("before",s),e)Xm(s,e,n);else for(const i of Tr.values())Xm(s,i.store.getState());t&&Jl("after",s)}const xm={onClick:["click",!1],onContextMenu:["contextmenu",!1],onDoubleClick:["dblclick",!1],onWheel:["wheel",!0],onPointerDown:["pointerdown",!0],onPointerUp:["pointerup",!0],onPointerLeave:["pointerleave",!0],onPointerMove:["pointermove",!0],onPointerCancel:["pointercancel",!0],onLostPointerCapture:["lostpointercapture",!0]};function gU(s){const{handlePointer:t}=KD(s);return{priority:1,enabled:!0,compute(e,n,i){n.pointer.set(e.offsetX/n.size.width*2-1,-(e.offsetY/n.size.height)*2+1),n.raycaster.setFromCamera(n.pointer,n.camera)},connected:void 0,handlers:Object.keys(xm).reduce((e,n)=>({...e,[n]:t(n)}),{}),update:()=>{var e;const{events:n,internal:i}=s.getState();(e=i.lastEvent)!=null&&e.current&&n.handlers&&n.handlers.onPointerMove(i.lastEvent.current)},connect:e=>{const{set:n,events:i}=s.getState();if(i.disconnect==null||i.disconnect(),n(r=>({events:{...r.events,connected:e}})),i.handlers)for(const r in i.handlers){const l=i.handlers[r],[c,h]=xm[r];e.addEventListener(c,l,{passive:h})}},disconnect:()=>{const{set:e,events:n}=s.getState();if(n.connected){if(n.handlers)for(const i in n.handlers){const r=n.handlers[i],[l]=xm[i];n.connected.removeEventListener(l,r)}e(i=>({events:{...i.events,connected:void 0}}))}}}}function ex(s,t){let e;return(...n)=>{window.clearTimeout(e),e=window.setTimeout(()=>s(...n),t)}}function vU({debounce:s,scroll:t,polyfill:e,offsetSize:n}={debounce:0,scroll:!1,offsetSize:!1}){const i=e||(typeof window>"u"?class{}:window.ResizeObserver);if(!i)throw new Error("This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills");const[r,l]=dt.useState({left:0,top:0,width:0,height:0,bottom:0,right:0,x:0,y:0}),c=dt.useRef({element:null,scrollContainers:null,resizeObserver:null,lastBounds:r,orientationHandler:null}),h=s?typeof s=="number"?s:s.scroll:null,f=s?typeof s=="number"?s:s.resize:null,p=dt.useRef(!1);dt.useEffect(()=>(p.current=!0,()=>void(p.current=!1)));const[m,g,v]=dt.useMemo(()=>{const _=()=>{if(!c.current.element)return;const{left:E,top:T,width:A,height:N,bottom:D,right:I,x:z,y:C}=c.current.element.getBoundingClientRect(),w={left:E,top:T,width:A,height:N,bottom:D,right:I,x:z,y:C};c.current.element instanceof HTMLElement&&n&&(w.height=c.current.element.offsetHeight,w.width=c.current.element.offsetWidth),Object.freeze(w),p.current&&!SU(c.current.lastBounds,w)&&l(c.current.lastBounds=w)};return[_,f?ex(_,f):_,h?ex(_,h):_]},[l,n,h,f]);function x(){c.current.scrollContainers&&(c.current.scrollContainers.forEach(_=>_.removeEventListener("scroll",v,!0)),c.current.scrollContainers=null),c.current.resizeObserver&&(c.current.resizeObserver.disconnect(),c.current.resizeObserver=null),c.current.orientationHandler&&("orientation"in screen&&"removeEventListener"in screen.orientation?screen.orientation.removeEventListener("change",c.current.orientationHandler):"onorientationchange"in window&&window.removeEventListener("orientationchange",c.current.orientationHandler))}function M(){c.current.element&&(c.current.resizeObserver=new i(v),c.current.resizeObserver.observe(c.current.element),t&&c.current.scrollContainers&&c.current.scrollContainers.forEach(_=>_.addEventListener("scroll",v,{capture:!0,passive:!0})),c.current.orientationHandler=()=>{v()},"orientation"in screen&&"addEventListener"in screen.orientation?screen.orientation.addEventListener("change",c.current.orientationHandler):"onorientationchange"in window&&window.addEventListener("orientationchange",c.current.orientationHandler))}const S=_=>{!_||_===c.current.element||(x(),c.current.element=_,c.current.scrollContainers=NM(_),M())};return yU(v,!!t),_U(g),dt.useEffect(()=>{x(),M()},[t,v,g]),dt.useEffect(()=>x,[]),[S,r,m]}function _U(s){dt.useEffect(()=>{const t=s;return window.addEventListener("resize",t),()=>void window.removeEventListener("resize",t)},[s])}function yU(s,t){dt.useEffect(()=>{if(t){const e=s;return window.addEventListener("scroll",e,{capture:!0,passive:!0}),()=>void window.removeEventListener("scroll",e,!0)}},[s,t])}function NM(s){const t=[];if(!s||s===document.body)return t;const{overflow:e,overflowX:n,overflowY:i}=window.getComputedStyle(s);return[e,n,i].some(r=>r==="auto"||r==="scroll")&&t.push(s),[...t,...NM(s.parentElement)]}const xU=["x","y","top","bottom","left","right","width","height"],SU=(s,t)=>xU.every(e=>s[e]===t[e]);function MU({ref:s,children:t,fallback:e,resize:n,style:i,gl:r,events:l=gU,eventSource:c,eventPrefix:h,shadows:f,linear:p,flat:m,legacy:g,orthographic:v,frameloop:x,dpr:M,performance:S,raycaster:_,camera:E,scene:T,onPointerMissed:A,onCreated:N,...D}){dt.useMemo(()=>iU(oD),[]);const I=BD(),[z,C]=vU({scroll:!0,debounce:{scroll:50,resize:0},...n}),w=dt.useRef(null),B=dt.useRef(null);dt.useImperativeHandle(s,()=>w.current);const $=xM(A),[q,J]=dt.useState(!1),[nt,F]=dt.useState(!1);if(q)throw q;if(nt)throw nt;const X=dt.useRef(null);Tc(()=>{const st=w.current;if(C.width>0&&C.height>0&&st){X.current||(X.current=hU(st));async function ct(){await X.current.configure({gl:r,scene:T,events:l,shadows:f,linear:p,flat:m,legacy:g,orthographic:v,frameloop:x,dpr:M,performance:S,raycaster:_,camera:E,size:C,onPointerMissed:(..._t)=>$.current==null?void 0:$.current(..._t),onCreated:_t=>{_t.events.connect==null||_t.events.connect(c?OD(c)?c.current:c:B.current),h&&_t.setEvents({compute:(Dt,Xt)=>{const tt=Dt[h+"X"],yt=Dt[h+"Y"];Xt.pointer.set(tt/Xt.size.width*2-1,-(yt/Xt.size.height)*2+1),Xt.raycaster.setFromCamera(Xt.pointer,Xt.camera)}}),N?.(_t)}}),X.current.render(Pt.jsx(I,{children:Pt.jsx(HD,{set:F,children:Pt.jsx(dt.Suspense,{fallback:Pt.jsx(FD,{set:J}),children:t??null})})}))}ct()}}),dt.useEffect(()=>{const st=w.current;if(st)return()=>UM(st)},[]);const G=c?"none":"auto";return Pt.jsx("div",{ref:B,style:{position:"relative",width:"100%",height:"100%",overflow:"hidden",pointerEvents:G,...i},...D,children:Pt.jsx("div",{ref:z,style:{width:"100%",height:"100%"},children:Pt.jsx("canvas",{ref:w,style:{display:"block"},children:e})})})}function bU(s){return Pt.jsx(gM,{children:Pt.jsx(MU,{...s})})}function Ra(){return Ra=Object.assign?Object.assign.bind():function(s){for(var t=1;t<arguments.length;t++){var e=arguments[t];for(var n in e)({}).hasOwnProperty.call(e,n)&&(s[n]=e[n])}return s},Ra.apply(null,arguments)}const Cc=new L,Wg=new L,EU=new L,nx=new ft;function TU(s,t,e){const n=Cc.setFromMatrixPosition(s.matrixWorld);n.project(t);const i=e.width/2,r=e.height/2;return[n.x*i+i,-(n.y*r)+r]}function AU(s,t){const e=Cc.setFromMatrixPosition(s.matrixWorld),n=Wg.setFromMatrixPosition(t.matrixWorld),i=e.sub(n),r=t.getWorldDirection(EU);return i.angleTo(r)>Math.PI/2}function wU(s,t,e,n){const i=Cc.setFromMatrixPosition(s.matrixWorld),r=i.clone();r.project(t),nx.set(r.x,r.y),e.setFromCamera(nx,t);const l=e.intersectObjects(n,!0);if(l.length){const c=l[0].distance;return i.distanceTo(e.ray.origin)<c}return!0}function CU(s,t){if(t instanceof ys)return t.zoom;if(t instanceof sn){const e=Cc.setFromMatrixPosition(s.matrixWorld),n=Wg.setFromMatrixPosition(t.matrixWorld),i=t.fov*Math.PI/180,r=e.distanceTo(n);return 1/(2*Math.tan(i/2)*r)}else return 1}function RU(s,t,e){if(t instanceof sn||t instanceof ys){const n=Cc.setFromMatrixPosition(s.matrixWorld),i=Wg.setFromMatrixPosition(t.matrixWorld),r=n.distanceTo(i),l=(e[1]-e[0])/(t.far-t.near),c=e[1]-l*t.far;return Math.round(l*r+c)}}const jm=s=>Math.abs(s)<1e-10?0:s;function LM(s,t,e=""){let n="matrix3d(";for(let i=0;i!==16;i++)n+=jm(t[i]*s.elements[i])+(i!==15?",":")");return e+n}const DU=(s=>t=>LM(t,s))([1,-1,1,1,1,-1,1,1,1,-1,1,1,1,-1,1,1]),UU=(s=>(t,e)=>LM(t,s(e),"translate(-50%,-50%)"))(s=>[1/s,1/s,1/s,1,-1/s,-1/s,-1/s,-1,1/s,1/s,1/s,1,1,1,1,1]);function PU(s){return s&&typeof s=="object"&&"current"in s}const IM=dt.forwardRef(({children:s,eps:t=.001,style:e,className:n,prepend:i,center:r,fullscreen:l,portal:c,distanceFactor:h,sprite:f=!1,transform:p=!1,occlude:m,onOcclude:g,castShadow:v,receiveShadow:x,material:M,geometry:S,zIndexRange:_=[16777271,0],calculatePosition:E=TU,as:T="div",wrapperClass:A,pointerEvents:N="auto",...D},I)=>{const{gl:z,camera:C,scene:w,size:B,raycaster:$,events:q,viewport:J}=ks(),[nt]=dt.useState(()=>document.createElement(T)),F=dt.useRef(null),X=dt.useRef(null),G=dt.useRef(0),st=dt.useRef([0,0]),ct=dt.useRef(null),_t=dt.useRef(null),Dt=c?.current||q.connected||z.domElement.parentNode,Xt=dt.useRef(null),tt=dt.useRef(!1),yt=dt.useMemo(()=>m&&m!=="blending"||Array.isArray(m)&&m.length&&PU(m[0]),[m]);dt.useLayoutEffect(()=>{const qt=z.domElement;m&&m==="blending"?(qt.style.zIndex=`${Math.floor(_[0]/2)}`,qt.style.position="absolute",qt.style.pointerEvents="none"):(qt.style.zIndex=null,qt.style.position=null,qt.style.pointerEvents=null)},[m]),dt.useLayoutEffect(()=>{if(X.current){const qt=F.current=VE.createRoot(nt);if(w.updateMatrixWorld(),p)nt.style.cssText="position:absolute;top:0;left:0;pointer-events:none;overflow:hidden;";else{const ne=E(X.current,C,B);nt.style.cssText=`position:absolute;top:0;left:0;transform:translate3d(${ne[0]}px,${ne[1]}px,0);transform-origin:0 0;`}return Dt&&(i?Dt.prepend(nt):Dt.appendChild(nt)),()=>{Dt&&Dt.removeChild(nt),qt.unmount()}}},[Dt,p]),dt.useLayoutEffect(()=>{A&&(nt.className=A)},[A]);const Yt=dt.useMemo(()=>p?{position:"absolute",top:0,left:0,width:B.width,height:B.height,transformStyle:"preserve-3d",pointerEvents:"none"}:{position:"absolute",transform:r?"translate3d(-50%,-50%,0)":"none",...l&&{top:-B.height/2,left:-B.width/2,width:B.width,height:B.height},...e},[e,r,l,B,p]),Nt=dt.useMemo(()=>({position:"absolute",pointerEvents:N}),[N]);dt.useLayoutEffect(()=>{if(tt.current=!1,p){var qt;(qt=F.current)==null||qt.render(dt.createElement("div",{ref:ct,style:Yt},dt.createElement("div",{ref:_t,style:Nt},dt.createElement("div",{ref:I,className:n,style:e,children:s}))))}else{var ne;(ne=F.current)==null||ne.render(dt.createElement("div",{ref:I,style:Yt,className:n,children:s}))}});const Vt=dt.useRef(!0);Ac(qt=>{if(X.current){C.updateMatrixWorld(),X.current.updateWorldMatrix(!0,!1);const ne=p?st.current:E(X.current,C,B);if(p||Math.abs(G.current-C.zoom)>t||Math.abs(st.current[0]-ne[0])>t||Math.abs(st.current[1]-ne[1])>t){const ce=AU(X.current,C);let ee=!1;yt&&(Array.isArray(m)?ee=m.map(bt=>bt.current):m!=="blending"&&(ee=[w]));const O=Vt.current;if(ee){const bt=wU(X.current,C,$,ee);Vt.current=bt&&!ce}else Vt.current=!ce;O!==Vt.current&&(g?g(!Vt.current):nt.style.display=Vt.current?"block":"none");const Ct=Math.floor(_[0]/2),Mt=m?yt?[_[0],Ct]:[Ct-1,0]:_;if(nt.style.zIndex=`${RU(X.current,C,Mt)}`,p){const[bt,ht]=[B.width/2,B.height/2],Ot=C.projectionMatrix.elements[5]*ht,{isOrthographicCamera:St,top:Ft,left:ue,bottom:H,right:R}=C,Q=DU(C.matrixWorldInverse),lt=St?`scale(${Ot})translate(${jm(-(R+ue)/2)}px,${jm((Ft+H)/2)}px)`:`translateZ(${Ot}px)`;let pt=X.current.matrixWorld;f&&(pt=C.matrixWorldInverse.clone().transpose().copyPosition(pt).scale(X.current.scale),pt.elements[3]=pt.elements[7]=pt.elements[11]=0,pt.elements[15]=1),nt.style.width=B.width+"px",nt.style.height=B.height+"px",nt.style.perspective=St?"":`${Ot}px`,ct.current&&_t.current&&(ct.current.style.transform=`${lt}${Q}translate(${bt}px,${ht}px)`,_t.current.style.transform=UU(pt,1/((h||10)/400)))}else{const bt=h===void 0?1:CU(X.current,C)*h;nt.style.transform=`translate3d(${ne[0]}px,${ne[1]}px,0) scale(${bt})`}st.current=ne,G.current=C.zoom}}if(!yt&&Xt.current&&!tt.current)if(p){if(ct.current){const ne=ct.current.children[0];if(ne!=null&&ne.clientWidth&&ne!=null&&ne.clientHeight){const{isOrthographicCamera:ce}=C;if(ce||S)D.scale&&(Array.isArray(D.scale)?D.scale instanceof L?Xt.current.scale.copy(D.scale.clone().divideScalar(1)):Xt.current.scale.set(1/D.scale[0],1/D.scale[1],1/D.scale[2]):Xt.current.scale.setScalar(1/D.scale));else{const ee=(h||10)/400,O=ne.clientWidth*ee,Ct=ne.clientHeight*ee;Xt.current.scale.set(O,Ct,1)}tt.current=!0}}}else{const ne=nt.children[0];if(ne!=null&&ne.clientWidth&&ne!=null&&ne.clientHeight){const ce=1/J.factor,ee=ne.clientWidth*ce,O=ne.clientHeight*ce;Xt.current.scale.set(ee,O,1),tt.current=!0}Xt.current.lookAt(qt.camera.position)}});const fe=dt.useMemo(()=>({vertexShader:p?void 0:`
          /*
            This shader is from the THREE's SpriteMaterial.
            We need to turn the backing plane into a Sprite
            (make it always face the camera) if "transfrom"
            is false.
          */
          #include <common>

          void main() {
            vec2 center = vec2(0., 1.);
            float rotation = 0.0;

            // This is somewhat arbitrary, but it seems to work well
            // Need to figure out how to derive this dynamically if it even matters
            float size = 0.03;

            vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
            vec2 scale;
            scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
            scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );

            bool isPerspective = isPerspectiveMatrix( projectionMatrix );
            if ( isPerspective ) scale *= - mvPosition.z;

            vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale * size;
            vec2 rotatedPosition;
            rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
            rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
            mvPosition.xy += rotatedPosition;

            gl_Position = projectionMatrix * mvPosition;
          }
      `,fragmentShader:`
        void main() {
          gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);
        }
      `}),[p]);return dt.createElement("group",Ra({},D,{ref:X}),m&&!yt&&dt.createElement("mesh",{castShadow:v,receiveShadow:x,ref:Xt},S||dt.createElement("planeGeometry",null),M||dt.createElement("shaderMaterial",{side:ts,vertexShader:fe.vertexShader,fragmentShader:fe.fragmentShader})))}),NU=s=>s;function LU(s,t=NU){const e=Am.useSyncExternalStore(s.subscribe,()=>t(s.getState()),()=>t(s.getInitialState()));return Am.useDebugValue(e),e}const ix=s=>{const t=fM(s),e=n=>LU(t,n);return Object.assign(e,t),e},IU=s=>s?ix(s):ix;let zl=0;const OU=IU(s=>(Ro.onStart=(t,e,n)=>{s({active:!0,item:t,loaded:e,total:n,progress:(e-zl)/(n-zl)*100})},Ro.onLoad=()=>{s({active:!1})},Ro.onError=t=>s(e=>({errors:[...e.errors,t]})),Ro.onProgress=(t,e,n)=>{e===n&&(zl=n),s({active:!0,item:t,loaded:e,total:n,progress:(e-zl)/(n-zl)*100||100})},{errors:[],active:!1,progress:0,item:"",loaded:0,total:0})),OM=parseInt(Wo.replace(/\D+/g,"")),zM=OM>=125?"uv1":"uv2";var zU=Object.defineProperty,BU=(s,t,e)=>t in s?zU(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e,FU=(s,t,e)=>(BU(s,t+"",e),e);class HU{constructor(){FU(this,"_listeners")}addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)}hasEventListener(t,e){if(this._listeners===void 0)return!1;const n=this._listeners;return n[t]!==void 0&&n[t].indexOf(e)!==-1}removeEventListener(t,e){if(this._listeners===void 0)return;const i=this._listeners[t];if(i!==void 0){const r=i.indexOf(e);r!==-1&&i.splice(r,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const n=this._listeners[t.type];if(n!==void 0){t.target=this;const i=n.slice(0);for(let r=0,l=i.length;r<l;r++)i[r].call(this,t);t.target=null}}}var VU=Object.defineProperty,GU=(s,t,e)=>t in s?VU(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e,le=(s,t,e)=>(GU(s,typeof t!="symbol"?t+"":t,e),e);const ah=new Ar,sx=new Gs,kU=Math.cos(70*(Math.PI/180)),ax=(s,t)=>(s%t+t)%t;class WU extends HU{constructor(t,e){super(),le(this,"object"),le(this,"domElement"),le(this,"enabled",!0),le(this,"target",new L),le(this,"minDistance",0),le(this,"maxDistance",1/0),le(this,"minZoom",0),le(this,"maxZoom",1/0),le(this,"minPolarAngle",0),le(this,"maxPolarAngle",Math.PI),le(this,"minAzimuthAngle",-1/0),le(this,"maxAzimuthAngle",1/0),le(this,"enableDamping",!1),le(this,"dampingFactor",.05),le(this,"enableZoom",!0),le(this,"zoomSpeed",1),le(this,"enableRotate",!0),le(this,"rotateSpeed",1),le(this,"enablePan",!0),le(this,"panSpeed",1),le(this,"screenSpacePanning",!0),le(this,"keyPanSpeed",7),le(this,"zoomToCursor",!1),le(this,"autoRotate",!1),le(this,"autoRotateSpeed",2),le(this,"reverseOrbit",!1),le(this,"reverseHorizontalOrbit",!1),le(this,"reverseVerticalOrbit",!1),le(this,"keys",{LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"}),le(this,"mouseButtons",{LEFT:Bi.ROTATE,MIDDLE:Bi.DOLLY,RIGHT:Bi.PAN}),le(this,"touches",{ONE:Vs.ROTATE,TWO:Vs.DOLLY_PAN}),le(this,"target0"),le(this,"position0"),le(this,"zoom0"),le(this,"_domElementKeyEvents",null),le(this,"getPolarAngle"),le(this,"getAzimuthalAngle"),le(this,"setPolarAngle"),le(this,"setAzimuthalAngle"),le(this,"getDistance"),le(this,"getZoomScale"),le(this,"listenToKeyEvents"),le(this,"stopListenToKeyEvents"),le(this,"saveState"),le(this,"reset"),le(this,"update"),le(this,"connect"),le(this,"dispose"),le(this,"dollyIn"),le(this,"dollyOut"),le(this,"getScale"),le(this,"setScale"),this.object=t,this.domElement=e,this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=()=>p.phi,this.getAzimuthalAngle=()=>p.theta,this.setPolarAngle=k=>{let et=ax(k,2*Math.PI),Tt=p.phi;Tt<0&&(Tt+=2*Math.PI),et<0&&(et+=2*Math.PI);let V=Math.abs(et-Tt);2*Math.PI-V<V&&(et<Tt?et+=2*Math.PI:Tt+=2*Math.PI),m.phi=et-Tt,n.update()},this.setAzimuthalAngle=k=>{let et=ax(k,2*Math.PI),Tt=p.theta;Tt<0&&(Tt+=2*Math.PI),et<0&&(et+=2*Math.PI);let V=Math.abs(et-Tt);2*Math.PI-V<V&&(et<Tt?et+=2*Math.PI:Tt+=2*Math.PI),m.theta=et-Tt,n.update()},this.getDistance=()=>n.object.position.distanceTo(n.target),this.listenToKeyEvents=k=>{k.addEventListener("keydown",ut),this._domElementKeyEvents=k},this.stopListenToKeyEvents=()=>{this._domElementKeyEvents.removeEventListener("keydown",ut),this._domElementKeyEvents=null},this.saveState=()=>{n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=()=>{n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(i),n.update(),h=c.NONE},this.update=(()=>{const k=new L,et=new L(0,1,0),Tt=new qn().setFromUnitVectors(t.up,et),V=Tt.clone().invert(),wt=new L,xt=new qn,Ht=2*Math.PI;return function(){const gt=n.object.position;Tt.setFromUnitVectors(t.up,et),V.copy(Tt).invert(),k.copy(gt).sub(n.target),k.applyQuaternion(Tt),p.setFromVector3(k),n.autoRotate&&h===c.NONE&&J($()),n.enableDamping?(p.theta+=m.theta*n.dampingFactor,p.phi+=m.phi*n.dampingFactor):(p.theta+=m.theta,p.phi+=m.phi);let Gt=n.minAzimuthAngle,se=n.maxAzimuthAngle;isFinite(Gt)&&isFinite(se)&&(Gt<-Math.PI?Gt+=Ht:Gt>Math.PI&&(Gt-=Ht),se<-Math.PI?se+=Ht:se>Math.PI&&(se-=Ht),Gt<=se?p.theta=Math.max(Gt,Math.min(se,p.theta)):p.theta=p.theta>(Gt+se)/2?Math.max(Gt,p.theta):Math.min(se,p.theta)),p.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,p.phi)),p.makeSafe(),n.enableDamping===!0?n.target.addScaledVector(v,n.dampingFactor):n.target.add(v),n.zoomToCursor&&C||n.object.isOrthographicCamera?p.radius=Xt(p.radius):p.radius=Xt(p.radius*g),k.setFromSpherical(p),k.applyQuaternion(V),gt.copy(n.target).add(k),n.object.matrixAutoUpdate||n.object.updateMatrix(),n.object.lookAt(n.target),n.enableDamping===!0?(m.theta*=1-n.dampingFactor,m.phi*=1-n.dampingFactor,v.multiplyScalar(1-n.dampingFactor)):(m.set(0,0,0),v.set(0,0,0));let we=!1;if(n.zoomToCursor&&C){let be=null;if(n.object instanceof sn&&n.object.isPerspectiveCamera){const fn=k.length();be=Xt(fn*g);const An=fn-be;n.object.position.addScaledVector(I,An),n.object.updateMatrixWorld()}else if(n.object.isOrthographicCamera){const fn=new L(z.x,z.y,0);fn.unproject(n.object),n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/g)),n.object.updateProjectionMatrix(),we=!0;const An=new L(z.x,z.y,0);An.unproject(n.object),n.object.position.sub(An).add(fn),n.object.updateMatrixWorld(),be=k.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),n.zoomToCursor=!1;be!==null&&(n.screenSpacePanning?n.target.set(0,0,-1).transformDirection(n.object.matrix).multiplyScalar(be).add(n.object.position):(ah.origin.copy(n.object.position),ah.direction.set(0,0,-1).transformDirection(n.object.matrix),Math.abs(n.object.up.dot(ah.direction))<kU?t.lookAt(n.target):(sx.setFromNormalAndCoplanarPoint(n.object.up,n.target),ah.intersectPlane(sx,n.target))))}else n.object instanceof ys&&n.object.isOrthographicCamera&&(we=g!==1,we&&(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/g)),n.object.updateProjectionMatrix()));return g=1,C=!1,we||wt.distanceToSquared(n.object.position)>f||8*(1-xt.dot(n.object.quaternion))>f?(n.dispatchEvent(i),wt.copy(n.object.position),xt.copy(n.object.quaternion),we=!1,!0):!1}})(),this.connect=k=>{n.domElement=k,n.domElement.style.touchAction="none",n.domElement.addEventListener("contextmenu",Kt),n.domElement.addEventListener("pointerdown",ue),n.domElement.addEventListener("pointercancel",R),n.domElement.addEventListener("wheel",pt)},this.dispose=()=>{var k,et,Tt,V,wt,xt;n.domElement&&(n.domElement.style.touchAction="auto"),(k=n.domElement)==null||k.removeEventListener("contextmenu",Kt),(et=n.domElement)==null||et.removeEventListener("pointerdown",ue),(Tt=n.domElement)==null||Tt.removeEventListener("pointercancel",R),(V=n.domElement)==null||V.removeEventListener("wheel",pt),(wt=n.domElement)==null||wt.ownerDocument.removeEventListener("pointermove",H),(xt=n.domElement)==null||xt.ownerDocument.removeEventListener("pointerup",R),n._domElementKeyEvents!==null&&n._domElementKeyEvents.removeEventListener("keydown",ut)};const n=this,i={type:"change"},r={type:"start"},l={type:"end"},c={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let h=c.NONE;const f=1e-6,p=new sf,m=new sf;let g=1;const v=new L,x=new ft,M=new ft,S=new ft,_=new ft,E=new ft,T=new ft,A=new ft,N=new ft,D=new ft,I=new L,z=new ft;let C=!1;const w=[],B={};function $(){return 2*Math.PI/60/60*n.autoRotateSpeed}function q(){return Math.pow(.95,n.zoomSpeed)}function J(k){n.reverseOrbit||n.reverseHorizontalOrbit?m.theta+=k:m.theta-=k}function nt(k){n.reverseOrbit||n.reverseVerticalOrbit?m.phi+=k:m.phi-=k}const F=(()=>{const k=new L;return function(Tt,V){k.setFromMatrixColumn(V,0),k.multiplyScalar(-Tt),v.add(k)}})(),X=(()=>{const k=new L;return function(Tt,V){n.screenSpacePanning===!0?k.setFromMatrixColumn(V,1):(k.setFromMatrixColumn(V,0),k.crossVectors(n.object.up,k)),k.multiplyScalar(Tt),v.add(k)}})(),G=(()=>{const k=new L;return function(Tt,V){const wt=n.domElement;if(wt&&n.object instanceof sn&&n.object.isPerspectiveCamera){const xt=n.object.position;k.copy(xt).sub(n.target);let Ht=k.length();Ht*=Math.tan(n.object.fov/2*Math.PI/180),F(2*Tt*Ht/wt.clientHeight,n.object.matrix),X(2*V*Ht/wt.clientHeight,n.object.matrix)}else wt&&n.object instanceof ys&&n.object.isOrthographicCamera?(F(Tt*(n.object.right-n.object.left)/n.object.zoom/wt.clientWidth,n.object.matrix),X(V*(n.object.top-n.object.bottom)/n.object.zoom/wt.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}})();function st(k){n.object instanceof sn&&n.object.isPerspectiveCamera||n.object instanceof ys&&n.object.isOrthographicCamera?g=k:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function ct(k){st(g/k)}function _t(k){st(g*k)}function Dt(k){if(!n.zoomToCursor||!n.domElement)return;C=!0;const et=n.domElement.getBoundingClientRect(),Tt=k.clientX-et.left,V=k.clientY-et.top,wt=et.width,xt=et.height;z.x=Tt/wt*2-1,z.y=-(V/xt)*2+1,I.set(z.x,z.y,1).unproject(n.object).sub(n.object.position).normalize()}function Xt(k){return Math.max(n.minDistance,Math.min(n.maxDistance,k))}function tt(k){x.set(k.clientX,k.clientY)}function yt(k){Dt(k),A.set(k.clientX,k.clientY)}function Yt(k){_.set(k.clientX,k.clientY)}function Nt(k){M.set(k.clientX,k.clientY),S.subVectors(M,x).multiplyScalar(n.rotateSpeed);const et=n.domElement;et&&(J(2*Math.PI*S.x/et.clientHeight),nt(2*Math.PI*S.y/et.clientHeight)),x.copy(M),n.update()}function Vt(k){N.set(k.clientX,k.clientY),D.subVectors(N,A),D.y>0?ct(q()):D.y<0&&_t(q()),A.copy(N),n.update()}function fe(k){E.set(k.clientX,k.clientY),T.subVectors(E,_).multiplyScalar(n.panSpeed),G(T.x,T.y),_.copy(E),n.update()}function qt(k){Dt(k),k.deltaY<0?_t(q()):k.deltaY>0&&ct(q()),n.update()}function ne(k){let et=!1;switch(k.code){case n.keys.UP:G(0,n.keyPanSpeed),et=!0;break;case n.keys.BOTTOM:G(0,-n.keyPanSpeed),et=!0;break;case n.keys.LEFT:G(n.keyPanSpeed,0),et=!0;break;case n.keys.RIGHT:G(-n.keyPanSpeed,0),et=!0;break}et&&(k.preventDefault(),n.update())}function ce(){if(w.length==1)x.set(w[0].pageX,w[0].pageY);else{const k=.5*(w[0].pageX+w[1].pageX),et=.5*(w[0].pageY+w[1].pageY);x.set(k,et)}}function ee(){if(w.length==1)_.set(w[0].pageX,w[0].pageY);else{const k=.5*(w[0].pageX+w[1].pageX),et=.5*(w[0].pageY+w[1].pageY);_.set(k,et)}}function O(){const k=w[0].pageX-w[1].pageX,et=w[0].pageY-w[1].pageY,Tt=Math.sqrt(k*k+et*et);A.set(0,Tt)}function Ct(){n.enableZoom&&O(),n.enablePan&&ee()}function Mt(){n.enableZoom&&O(),n.enableRotate&&ce()}function bt(k){if(w.length==1)M.set(k.pageX,k.pageY);else{const Tt=ie(k),V=.5*(k.pageX+Tt.x),wt=.5*(k.pageY+Tt.y);M.set(V,wt)}S.subVectors(M,x).multiplyScalar(n.rotateSpeed);const et=n.domElement;et&&(J(2*Math.PI*S.x/et.clientHeight),nt(2*Math.PI*S.y/et.clientHeight)),x.copy(M)}function ht(k){if(w.length==1)E.set(k.pageX,k.pageY);else{const et=ie(k),Tt=.5*(k.pageX+et.x),V=.5*(k.pageY+et.y);E.set(Tt,V)}T.subVectors(E,_).multiplyScalar(n.panSpeed),G(T.x,T.y),_.copy(E)}function Ot(k){const et=ie(k),Tt=k.pageX-et.x,V=k.pageY-et.y,wt=Math.sqrt(Tt*Tt+V*V);N.set(0,wt),D.set(0,Math.pow(N.y/A.y,n.zoomSpeed)),ct(D.y),A.copy(N)}function St(k){n.enableZoom&&Ot(k),n.enablePan&&ht(k)}function Ft(k){n.enableZoom&&Ot(k),n.enableRotate&&bt(k)}function ue(k){var et,Tt;n.enabled!==!1&&(w.length===0&&((et=n.domElement)==null||et.ownerDocument.addEventListener("pointermove",H),(Tt=n.domElement)==null||Tt.ownerDocument.addEventListener("pointerup",R)),Qt(k),k.pointerType==="touch"?te(k):Q(k))}function H(k){n.enabled!==!1&&(k.pointerType==="touch"?Lt(k):lt(k))}function R(k){var et,Tt,V;vt(k),w.length===0&&((et=n.domElement)==null||et.releasePointerCapture(k.pointerId),(Tt=n.domElement)==null||Tt.ownerDocument.removeEventListener("pointermove",H),(V=n.domElement)==null||V.ownerDocument.removeEventListener("pointerup",R)),n.dispatchEvent(l),h=c.NONE}function Q(k){let et;switch(k.button){case 0:et=n.mouseButtons.LEFT;break;case 1:et=n.mouseButtons.MIDDLE;break;case 2:et=n.mouseButtons.RIGHT;break;default:et=-1}switch(et){case Bi.DOLLY:if(n.enableZoom===!1)return;yt(k),h=c.DOLLY;break;case Bi.ROTATE:if(k.ctrlKey||k.metaKey||k.shiftKey){if(n.enablePan===!1)return;Yt(k),h=c.PAN}else{if(n.enableRotate===!1)return;tt(k),h=c.ROTATE}break;case Bi.PAN:if(k.ctrlKey||k.metaKey||k.shiftKey){if(n.enableRotate===!1)return;tt(k),h=c.ROTATE}else{if(n.enablePan===!1)return;Yt(k),h=c.PAN}break;default:h=c.NONE}h!==c.NONE&&n.dispatchEvent(r)}function lt(k){if(n.enabled!==!1)switch(h){case c.ROTATE:if(n.enableRotate===!1)return;Nt(k);break;case c.DOLLY:if(n.enableZoom===!1)return;Vt(k);break;case c.PAN:if(n.enablePan===!1)return;fe(k);break}}function pt(k){n.enabled===!1||n.enableZoom===!1||h!==c.NONE&&h!==c.ROTATE||(k.preventDefault(),n.dispatchEvent(r),qt(k),n.dispatchEvent(l))}function ut(k){n.enabled===!1||n.enablePan===!1||ne(k)}function te(k){switch(zt(k),w.length){case 1:switch(n.touches.ONE){case Vs.ROTATE:if(n.enableRotate===!1)return;ce(),h=c.TOUCH_ROTATE;break;case Vs.PAN:if(n.enablePan===!1)return;ee(),h=c.TOUCH_PAN;break;default:h=c.NONE}break;case 2:switch(n.touches.TWO){case Vs.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;Ct(),h=c.TOUCH_DOLLY_PAN;break;case Vs.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;Mt(),h=c.TOUCH_DOLLY_ROTATE;break;default:h=c.NONE}break;default:h=c.NONE}h!==c.NONE&&n.dispatchEvent(r)}function Lt(k){switch(zt(k),h){case c.TOUCH_ROTATE:if(n.enableRotate===!1)return;bt(k),n.update();break;case c.TOUCH_PAN:if(n.enablePan===!1)return;ht(k),n.update();break;case c.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;St(k),n.update();break;case c.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;Ft(k),n.update();break;default:h=c.NONE}}function Kt(k){n.enabled!==!1&&k.preventDefault()}function Qt(k){w.push(k)}function vt(k){delete B[k.pointerId];for(let et=0;et<w.length;et++)if(w[et].pointerId==k.pointerId){w.splice(et,1);return}}function zt(k){let et=B[k.pointerId];et===void 0&&(et=new ft,B[k.pointerId]=et),et.set(k.pageX,k.pageY)}function ie(k){const et=k.pointerId===w[0].pointerId?w[1]:w[0];return B[et.pointerId]}this.dollyIn=(k=q())=>{_t(k),n.update()},this.dollyOut=(k=q())=>{ct(k),n.update()},this.getScale=()=>g,this.setScale=k=>{st(k),n.update()},this.getZoomScale=()=>q(),e!==void 0&&this.connect(e),this.update()}}let XU=class extends WU{constructor(t,e){super(t,e),this.screenSpacePanning=!1,this.mouseButtons.LEFT=Bi.PAN,this.mouseButtons.RIGHT=Bi.ROTATE,this.touches.ONE=Vs.PAN,this.touches.TWO=Vs.DOLLY_ROTATE}};const rx=new _n,rh=new L;class Xg extends Ng{constructor(){super(),this.isLineSegmentsGeometry=!0,this.type="LineSegmentsGeometry";const t=[-1,2,0,1,2,0,-1,1,0,1,1,0,-1,0,0,1,0,0,-1,-1,0,1,-1,0],e=[-1,2,1,2,-1,1,1,1,-1,-1,1,-1,-1,-2,1,-2],n=[0,2,1,2,3,1,2,4,3,4,5,3,4,6,5,6,7,5];this.setIndex(n),this.setAttribute("position",new Jt(t,3)),this.setAttribute("uv",new Jt(e,2))}applyMatrix4(t){const e=this.attributes.instanceStart,n=this.attributes.instanceEnd;return e!==void 0&&(e.applyMatrix4(t),n.applyMatrix4(t),e.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}setPositions(t){let e;t instanceof Float32Array?e=t:Array.isArray(t)&&(e=new Float32Array(t));const n=new nf(e,6,1);return this.setAttribute("instanceStart",new Ei(n,3,0)),this.setAttribute("instanceEnd",new Ei(n,3,3)),this.computeBoundingBox(),this.computeBoundingSphere(),this}setColors(t,e=3){let n;t instanceof Float32Array?n=t:Array.isArray(t)&&(n=new Float32Array(t));const i=new nf(n,e*2,1);return this.setAttribute("instanceColorStart",new Ei(i,e,0)),this.setAttribute("instanceColorEnd",new Ei(i,e,e)),this}fromWireframeGeometry(t){return this.setPositions(t.attributes.position.array),this}fromEdgesGeometry(t){return this.setPositions(t.attributes.position.array),this}fromMesh(t){return this.fromWireframeGeometry(new Eg(t.geometry)),this}fromLineSegments(t){const e=t.geometry;return this.setPositions(e.attributes.position.array),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new _n);const t=this.attributes.instanceStart,e=this.attributes.instanceEnd;t!==void 0&&e!==void 0&&(this.boundingBox.setFromBufferAttribute(t),rx.setFromBufferAttribute(e),this.boundingBox.union(rx))}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new yn),this.boundingBox===null&&this.computeBoundingBox();const t=this.attributes.instanceStart,e=this.attributes.instanceEnd;if(t!==void 0&&e!==void 0){const n=this.boundingSphere.center;this.boundingBox.getCenter(n);let i=0;for(let r=0,l=t.count;r<l;r++)rh.fromBufferAttribute(t,r),i=Math.max(i,n.distanceToSquared(rh)),rh.fromBufferAttribute(e,r),i=Math.max(i,n.distanceToSquared(rh));this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error("THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.",this)}}toJSON(){}applyMatrix(t){return console.warn("THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4()."),this.applyMatrix4(t)}}class BM extends Xg{constructor(){super(),this.isLineGeometry=!0,this.type="LineGeometry"}setPositions(t){const e=t.length-3,n=new Float32Array(2*e);for(let i=0;i<e;i+=3)n[2*i]=t[i],n[2*i+1]=t[i+1],n[2*i+2]=t[i+2],n[2*i+3]=t[i+3],n[2*i+4]=t[i+4],n[2*i+5]=t[i+5];return super.setPositions(n),this}setColors(t,e=3){const n=t.length-e,i=new Float32Array(2*n);if(e===3)for(let r=0;r<n;r+=e)i[2*r]=t[r],i[2*r+1]=t[r+1],i[2*r+2]=t[r+2],i[2*r+3]=t[r+3],i[2*r+4]=t[r+4],i[2*r+5]=t[r+5];else for(let r=0;r<n;r+=e)i[2*r]=t[r],i[2*r+1]=t[r+1],i[2*r+2]=t[r+2],i[2*r+3]=t[r+3],i[2*r+4]=t[r+4],i[2*r+5]=t[r+5],i[2*r+6]=t[r+6],i[2*r+7]=t[r+7];return super.setColors(i,e),this}fromLine(t){const e=t.geometry;return this.setPositions(e.attributes.position.array),this}}class qg extends wi{constructor(t){super({type:"LineMaterial",uniforms:Jh.clone(Jh.merge([It.common,It.fog,{worldUnits:{value:1},linewidth:{value:1},resolution:{value:new ft(1,1)},dashOffset:{value:0},dashScale:{value:1},dashSize:{value:1},gapSize:{value:1}}])),vertexShader:`
				#include <common>
				#include <fog_pars_vertex>
				#include <logdepthbuf_pars_vertex>
				#include <clipping_planes_pars_vertex>

				uniform float linewidth;
				uniform vec2 resolution;

				attribute vec3 instanceStart;
				attribute vec3 instanceEnd;

				#ifdef USE_COLOR
					#ifdef USE_LINE_COLOR_ALPHA
						varying vec4 vLineColor;
						attribute vec4 instanceColorStart;
						attribute vec4 instanceColorEnd;
					#else
						varying vec3 vLineColor;
						attribute vec3 instanceColorStart;
						attribute vec3 instanceColorEnd;
					#endif
				#endif

				#ifdef WORLD_UNITS

					varying vec4 worldPos;
					varying vec3 worldStart;
					varying vec3 worldEnd;

					#ifdef USE_DASH

						varying vec2 vUv;

					#endif

				#else

					varying vec2 vUv;

				#endif

				#ifdef USE_DASH

					uniform float dashScale;
					attribute float instanceDistanceStart;
					attribute float instanceDistanceEnd;
					varying float vLineDistance;

				#endif

				void trimSegment( const in vec4 start, inout vec4 end ) {

					// trim end segment so it terminates between the camera plane and the near plane

					// conservative estimate of the near plane
					float a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column
					float b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column
					float nearEstimate = - 0.5 * b / a;

					float alpha = ( nearEstimate - start.z ) / ( end.z - start.z );

					end.xyz = mix( start.xyz, end.xyz, alpha );

				}

				void main() {

					#ifdef USE_COLOR

						vLineColor = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;

					#endif

					#ifdef USE_DASH

						vLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;
						vUv = uv;

					#endif

					float aspect = resolution.x / resolution.y;

					// camera space
					vec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );
					vec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );

					#ifdef WORLD_UNITS

						worldStart = start.xyz;
						worldEnd = end.xyz;

					#else

						vUv = uv;

					#endif

					// special case for perspective projection, and segments that terminate either in, or behind, the camera plane
					// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space
					// but we need to perform ndc-space calculations in the shader, so we must address this issue directly
					// perhaps there is a more elegant solution -- WestLangley

					bool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column

					if ( perspective ) {

						if ( start.z < 0.0 && end.z >= 0.0 ) {

							trimSegment( start, end );

						} else if ( end.z < 0.0 && start.z >= 0.0 ) {

							trimSegment( end, start );

						}

					}

					// clip space
					vec4 clipStart = projectionMatrix * start;
					vec4 clipEnd = projectionMatrix * end;

					// ndc space
					vec3 ndcStart = clipStart.xyz / clipStart.w;
					vec3 ndcEnd = clipEnd.xyz / clipEnd.w;

					// direction
					vec2 dir = ndcEnd.xy - ndcStart.xy;

					// account for clip-space aspect ratio
					dir.x *= aspect;
					dir = normalize( dir );

					#ifdef WORLD_UNITS

						// get the offset direction as perpendicular to the view vector
						vec3 worldDir = normalize( end.xyz - start.xyz );
						vec3 offset;
						if ( position.y < 0.5 ) {

							offset = normalize( cross( start.xyz, worldDir ) );

						} else {

							offset = normalize( cross( end.xyz, worldDir ) );

						}

						// sign flip
						if ( position.x < 0.0 ) offset *= - 1.0;

						float forwardOffset = dot( worldDir, vec3( 0.0, 0.0, 1.0 ) );

						// don't extend the line if we're rendering dashes because we
						// won't be rendering the endcaps
						#ifndef USE_DASH

							// extend the line bounds to encompass  endcaps
							start.xyz += - worldDir * linewidth * 0.5;
							end.xyz += worldDir * linewidth * 0.5;

							// shift the position of the quad so it hugs the forward edge of the line
							offset.xy -= dir * forwardOffset;
							offset.z += 0.5;

						#endif

						// endcaps
						if ( position.y > 1.0 || position.y < 0.0 ) {

							offset.xy += dir * 2.0 * forwardOffset;

						}

						// adjust for linewidth
						offset *= linewidth * 0.5;

						// set the world position
						worldPos = ( position.y < 0.5 ) ? start : end;
						worldPos.xyz += offset;

						// project the worldpos
						vec4 clip = projectionMatrix * worldPos;

						// shift the depth of the projected points so the line
						// segments overlap neatly
						vec3 clipPose = ( position.y < 0.5 ) ? ndcStart : ndcEnd;
						clip.z = clipPose.z * clip.w;

					#else

						vec2 offset = vec2( dir.y, - dir.x );
						// undo aspect ratio adjustment
						dir.x /= aspect;
						offset.x /= aspect;

						// sign flip
						if ( position.x < 0.0 ) offset *= - 1.0;

						// endcaps
						if ( position.y < 0.0 ) {

							offset += - dir;

						} else if ( position.y > 1.0 ) {

							offset += dir;

						}

						// adjust for linewidth
						offset *= linewidth;

						// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...
						offset /= resolution.y;

						// select end
						vec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;

						// back to clip space
						offset *= clip.w;

						clip.xy += offset;

					#endif

					gl_Position = clip;

					vec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation

					#include <logdepthbuf_vertex>
					#include <clipping_planes_vertex>
					#include <fog_vertex>

				}
			`,fragmentShader:`
				uniform vec3 diffuse;
				uniform float opacity;
				uniform float linewidth;

				#ifdef USE_DASH

					uniform float dashOffset;
					uniform float dashSize;
					uniform float gapSize;

				#endif

				varying float vLineDistance;

				#ifdef WORLD_UNITS

					varying vec4 worldPos;
					varying vec3 worldStart;
					varying vec3 worldEnd;

					#ifdef USE_DASH

						varying vec2 vUv;

					#endif

				#else

					varying vec2 vUv;

				#endif

				#include <common>
				#include <fog_pars_fragment>
				#include <logdepthbuf_pars_fragment>
				#include <clipping_planes_pars_fragment>

				#ifdef USE_COLOR
					#ifdef USE_LINE_COLOR_ALPHA
						varying vec4 vLineColor;
					#else
						varying vec3 vLineColor;
					#endif
				#endif

				vec2 closestLineToLine(vec3 p1, vec3 p2, vec3 p3, vec3 p4) {

					float mua;
					float mub;

					vec3 p13 = p1 - p3;
					vec3 p43 = p4 - p3;

					vec3 p21 = p2 - p1;

					float d1343 = dot( p13, p43 );
					float d4321 = dot( p43, p21 );
					float d1321 = dot( p13, p21 );
					float d4343 = dot( p43, p43 );
					float d2121 = dot( p21, p21 );

					float denom = d2121 * d4343 - d4321 * d4321;

					float numer = d1343 * d4321 - d1321 * d4343;

					mua = numer / denom;
					mua = clamp( mua, 0.0, 1.0 );
					mub = ( d1343 + d4321 * ( mua ) ) / d4343;
					mub = clamp( mub, 0.0, 1.0 );

					return vec2( mua, mub );

				}

				void main() {

					#include <clipping_planes_fragment>

					#ifdef USE_DASH

						if ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps

						if ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX

					#endif

					float alpha = opacity;

					#ifdef WORLD_UNITS

						// Find the closest points on the view ray and the line segment
						vec3 rayEnd = normalize( worldPos.xyz ) * 1e5;
						vec3 lineDir = worldEnd - worldStart;
						vec2 params = closestLineToLine( worldStart, worldEnd, vec3( 0.0, 0.0, 0.0 ), rayEnd );

						vec3 p1 = worldStart + lineDir * params.x;
						vec3 p2 = rayEnd * params.y;
						vec3 delta = p1 - p2;
						float len = length( delta );
						float norm = len / linewidth;

						#ifndef USE_DASH

							#ifdef USE_ALPHA_TO_COVERAGE

								float dnorm = fwidth( norm );
								alpha = 1.0 - smoothstep( 0.5 - dnorm, 0.5 + dnorm, norm );

							#else

								if ( norm > 0.5 ) {

									discard;

								}

							#endif

						#endif

					#else

						#ifdef USE_ALPHA_TO_COVERAGE

							// artifacts appear on some hardware if a derivative is taken within a conditional
							float a = vUv.x;
							float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
							float len2 = a * a + b * b;
							float dlen = fwidth( len2 );

							if ( abs( vUv.y ) > 1.0 ) {

								alpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );

							}

						#else

							if ( abs( vUv.y ) > 1.0 ) {

								float a = vUv.x;
								float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
								float len2 = a * a + b * b;

								if ( len2 > 1.0 ) discard;

							}

						#endif

					#endif

					vec4 diffuseColor = vec4( diffuse, alpha );
					#ifdef USE_COLOR
						#ifdef USE_LINE_COLOR_ALPHA
							diffuseColor *= vLineColor;
						#else
							diffuseColor.rgb *= vLineColor;
						#endif
					#endif

					#include <logdepthbuf_fragment>

					gl_FragColor = diffuseColor;

					#include <tonemapping_fragment>
					#include <${OM>=154?"colorspace_fragment":"encodings_fragment"}>
					#include <fog_fragment>
					#include <premultiplied_alpha_fragment>

				}
			`,clipping:!0}),this.isLineMaterial=!0,this.onBeforeCompile=function(){this.transparent?this.defines.USE_LINE_COLOR_ALPHA="1":delete this.defines.USE_LINE_COLOR_ALPHA},Object.defineProperties(this,{color:{enumerable:!0,get:function(){return this.uniforms.diffuse.value},set:function(e){this.uniforms.diffuse.value=e}},worldUnits:{enumerable:!0,get:function(){return"WORLD_UNITS"in this.defines},set:function(e){e===!0?this.defines.WORLD_UNITS="":delete this.defines.WORLD_UNITS}},linewidth:{enumerable:!0,get:function(){return this.uniforms.linewidth.value},set:function(e){this.uniforms.linewidth.value=e}},dashed:{enumerable:!0,get:function(){return"USE_DASH"in this.defines},set(e){!!e!="USE_DASH"in this.defines&&(this.needsUpdate=!0),e===!0?this.defines.USE_DASH="":delete this.defines.USE_DASH}},dashScale:{enumerable:!0,get:function(){return this.uniforms.dashScale.value},set:function(e){this.uniforms.dashScale.value=e}},dashSize:{enumerable:!0,get:function(){return this.uniforms.dashSize.value},set:function(e){this.uniforms.dashSize.value=e}},dashOffset:{enumerable:!0,get:function(){return this.uniforms.dashOffset.value},set:function(e){this.uniforms.dashOffset.value=e}},gapSize:{enumerable:!0,get:function(){return this.uniforms.gapSize.value},set:function(e){this.uniforms.gapSize.value=e}},opacity:{enumerable:!0,get:function(){return this.uniforms.opacity.value},set:function(e){this.uniforms.opacity.value=e}},resolution:{enumerable:!0,get:function(){return this.uniforms.resolution.value},set:function(e){this.uniforms.resolution.value.copy(e)}},alphaToCoverage:{enumerable:!0,get:function(){return"USE_ALPHA_TO_COVERAGE"in this.defines},set:function(e){!!e!="USE_ALPHA_TO_COVERAGE"in this.defines&&(this.needsUpdate=!0),e===!0?(this.defines.USE_ALPHA_TO_COVERAGE="",this.extensions.derivatives=!0):(delete this.defines.USE_ALPHA_TO_COVERAGE,this.extensions.derivatives=!1)}}}),this.setValues(t)}}const Sm=new Ae,ox=new L,lx=new L,Un=new Ae,Pn=new Ae,fs=new Ae,Mm=new L,bm=new he,Nn=new iM,cx=new L,oh=new _n,lh=new yn,ds=new Ae;let ps,Mr;function ux(s,t,e){return ds.set(0,0,-t,1).applyMatrix4(s.projectionMatrix),ds.multiplyScalar(1/ds.w),ds.x=Mr/e.width,ds.y=Mr/e.height,ds.applyMatrix4(s.projectionMatrixInverse),ds.multiplyScalar(1/ds.w),Math.abs(Math.max(ds.x,ds.y))}function qU(s,t){const e=s.matrixWorld,n=s.geometry,i=n.attributes.instanceStart,r=n.attributes.instanceEnd,l=Math.min(n.instanceCount,i.count);for(let c=0,h=l;c<h;c++){Nn.start.fromBufferAttribute(i,c),Nn.end.fromBufferAttribute(r,c),Nn.applyMatrix4(e);const f=new L,p=new L;ps.distanceSqToSegment(Nn.start,Nn.end,p,f),p.distanceTo(f)<Mr*.5&&t.push({point:p,pointOnLine:f,distance:ps.origin.distanceTo(p),object:s,face:null,faceIndex:c,uv:null,[zM]:null})}}function YU(s,t,e){const n=t.projectionMatrix,r=s.material.resolution,l=s.matrixWorld,c=s.geometry,h=c.attributes.instanceStart,f=c.attributes.instanceEnd,p=Math.min(c.instanceCount,h.count),m=-t.near;ps.at(1,fs),fs.w=1,fs.applyMatrix4(t.matrixWorldInverse),fs.applyMatrix4(n),fs.multiplyScalar(1/fs.w),fs.x*=r.x/2,fs.y*=r.y/2,fs.z=0,Mm.copy(fs),bm.multiplyMatrices(t.matrixWorldInverse,l);for(let g=0,v=p;g<v;g++){if(Un.fromBufferAttribute(h,g),Pn.fromBufferAttribute(f,g),Un.w=1,Pn.w=1,Un.applyMatrix4(bm),Pn.applyMatrix4(bm),Un.z>m&&Pn.z>m)continue;if(Un.z>m){const T=Un.z-Pn.z,A=(Un.z-m)/T;Un.lerp(Pn,A)}else if(Pn.z>m){const T=Pn.z-Un.z,A=(Pn.z-m)/T;Pn.lerp(Un,A)}Un.applyMatrix4(n),Pn.applyMatrix4(n),Un.multiplyScalar(1/Un.w),Pn.multiplyScalar(1/Pn.w),Un.x*=r.x/2,Un.y*=r.y/2,Pn.x*=r.x/2,Pn.y*=r.y/2,Nn.start.copy(Un),Nn.start.z=0,Nn.end.copy(Pn),Nn.end.z=0;const M=Nn.closestPointToPointParameter(Mm,!0);Nn.at(M,cx);const S=iS.lerp(Un.z,Pn.z,M),_=S>=-1&&S<=1,E=Mm.distanceTo(cx)<Mr*.5;if(_&&E){Nn.start.fromBufferAttribute(h,g),Nn.end.fromBufferAttribute(f,g),Nn.start.applyMatrix4(l),Nn.end.applyMatrix4(l);const T=new L,A=new L;ps.distanceSqToSegment(Nn.start,Nn.end,A,T),e.push({point:A,pointOnLine:T,distance:ps.origin.distanceTo(A),object:s,face:null,faceIndex:g,uv:null,[zM]:null})}}}class FM extends hn{constructor(t=new Xg,e=new qg({color:Math.random()*16777215})){super(t,e),this.isLineSegments2=!0,this.type="LineSegments2"}computeLineDistances(){const t=this.geometry,e=t.attributes.instanceStart,n=t.attributes.instanceEnd,i=new Float32Array(2*e.count);for(let l=0,c=0,h=e.count;l<h;l++,c+=2)ox.fromBufferAttribute(e,l),lx.fromBufferAttribute(n,l),i[c]=c===0?0:i[c-1],i[c+1]=i[c]+ox.distanceTo(lx);const r=new nf(i,2,1);return t.setAttribute("instanceDistanceStart",new Ei(r,1,0)),t.setAttribute("instanceDistanceEnd",new Ei(r,1,1)),this}raycast(t,e){const n=this.material.worldUnits,i=t.camera;i===null&&!n&&console.error('LineSegments2: "Raycaster.camera" needs to be set in order to raycast against LineSegments2 while worldUnits is set to false.');const r=t.params.Line2!==void 0&&t.params.Line2.threshold||0;ps=t.ray;const l=this.matrixWorld,c=this.geometry,h=this.material;Mr=h.linewidth+r,c.boundingSphere===null&&c.computeBoundingSphere(),lh.copy(c.boundingSphere).applyMatrix4(l);let f;if(n)f=Mr*.5;else{const m=Math.max(i.near,lh.distanceToPoint(ps.origin));f=ux(i,m,h.resolution)}if(lh.radius+=f,ps.intersectsSphere(lh)===!1)return;c.boundingBox===null&&c.computeBoundingBox(),oh.copy(c.boundingBox).applyMatrix4(l);let p;if(n)p=Mr*.5;else{const m=Math.max(i.near,oh.distanceToPoint(ps.origin));p=ux(i,m,h.resolution)}oh.expandByScalar(p),ps.intersectsBox(oh)!==!1&&(n?qU(this,e):YU(this,i,e))}onBeforeRender(t){const e=this.material.uniforms;e&&e.resolution&&(t.getViewport(Sm),this.material.uniforms.resolution.value.set(Sm.z,Sm.w))}}class jU extends FM{constructor(t=new BM,e=new qg({color:Math.random()*16777215})){super(t,e),this.isLine2=!0,this.type="Line2"}}const ZU=dt.forwardRef(function({points:t,color:e=16777215,vertexColors:n,linewidth:i,lineWidth:r,segments:l,dashed:c,...h},f){var p,m;const g=ks(_=>_.size),v=dt.useMemo(()=>l?new FM:new jU,[l]),[x]=dt.useState(()=>new qg),M=(n==null||(p=n[0])==null?void 0:p.length)===4?4:3,S=dt.useMemo(()=>{const _=l?new Xg:new BM,E=t.map(T=>{const A=Array.isArray(T);return T instanceof L||T instanceof Ae?[T.x,T.y,T.z]:T instanceof ft?[T.x,T.y,0]:A&&T.length===3?[T[0],T[1],T[2]]:A&&T.length===2?[T[0],T[1],0]:T});if(_.setPositions(E.flat()),n){e=16777215;const T=n.map(A=>A instanceof kt?A.toArray():A);_.setColors(T.flat(),M)}return _},[t,l,n,M]);return dt.useLayoutEffect(()=>{v.computeLineDistances()},[t,v]),dt.useLayoutEffect(()=>{c?x.defines.USE_DASH="":delete x.defines.USE_DASH,x.needsUpdate=!0},[c,x]),dt.useEffect(()=>()=>{S.dispose(),x.dispose()},[S]),dt.createElement("primitive",Ra({object:v,ref:f},h),dt.createElement("primitive",{object:S,attach:"geometry"}),dt.createElement("primitive",Ra({object:x,attach:"material",color:e,vertexColors:!!n,resolution:[g.width,g.height],linewidth:(m=i??r)!==null&&m!==void 0?m:1,dashed:c,transparent:M===4},h)))}),KU=dt.forwardRef(function({points:t,closed:e=!1,curveType:n="centripetal",tension:i=.5,segments:r=20,vertexColors:l,...c},h){const f=dt.useMemo(()=>{const g=t.map(v=>v instanceof L?v:new L(...v));return new _g(g,e,n,i)},[t,e,n,i]),p=dt.useMemo(()=>f.getPoints(r),[f,r]),m=dt.useMemo(()=>{if(!l||l.length<2)return;if(l.length===r+1)return l;const g=l.map(M=>M instanceof kt?M:new kt(...M));e&&g.push(g[0].clone());const v=[g[0]],x=r/(g.length-1);for(let M=1;M<r;M++){const S=M%x/x,_=Math.floor(M/x);v.push(g[_].clone().lerp(g[_+1],S))}return v.push(g[g.length-1]),v},[l,r]);return dt.createElement(ZU,Ra({ref:h,points:p,vertexColors:m},c))}),Em=s=>s===Object(s)&&!Array.isArray(s)&&typeof s!="function";function Wf(s,t){const e=ks(r=>r.gl),n=wc(Hf,Em(s)?Object.values(s):s);return dt.useLayoutEffect(()=>{t?.(n)},[t]),dt.useEffect(()=>{if("initTexture"in e){let r=[];Array.isArray(n)?r=n:n instanceof en?r=[n]:Em(n)&&(r=Object.values(n)),r.forEach(l=>{l instanceof en&&e.initTexture(l)})}},[e,n]),dt.useMemo(()=>{if(Em(s)){const r={};let l=0;for(const c in s)r[c]=n[l++];return r}else return n},[s,n])}Wf.preload=s=>wc.preload(Hf,s);Wf.clear=s=>wc.clear(Hf,s);const JU=()=>parseInt(Wo.replace(/\D+/g,"")),QU=JU(),$U=dt.forwardRef((s={enableDamping:!0},t)=>{const{domElement:e,camera:n,makeDefault:i,onChange:r,onStart:l,onEnd:c,...h}=s,f=ks(E=>E.invalidate),p=ks(E=>E.camera),m=ks(E=>E.gl),g=ks(E=>E.events),v=ks(E=>E.set),x=ks(E=>E.get),M=e||g.connected||m.domElement,S=n||p,_=dt.useMemo(()=>new XU(S),[S]);return dt.useEffect(()=>{_.connect(M);const E=T=>{f(),r&&r(T)};return _.addEventListener("change",E),l&&_.addEventListener("start",l),c&&_.addEventListener("end",c),()=>{_.dispose(),_.removeEventListener("change",E),l&&_.removeEventListener("start",l),c&&_.removeEventListener("end",c)}},[r,l,c,_,f,M]),dt.useEffect(()=>{if(i){const E=x().controls;return v({controls:_}),()=>v({controls:E})}},[i,_]),Ac(()=>_.update(),-1),dt.createElement("primitive",Ra({ref:t,object:_,enableDamping:!0},h))});function tP(s,t){const e=s+"Geometry";return dt.forwardRef(({args:n,children:i,...r},l)=>{const c=dt.useRef(null);return dt.useImperativeHandle(l,()=>c.current),dt.useLayoutEffect(()=>void t?.(c.current)),dt.createElement("mesh",Ra({ref:c},r),dt.createElement(e,{attach:"geometry",args:n}),i)})}const hx=tP("sphere");class eP extends wi{constructor(){super({uniforms:{time:{value:0},fade:{value:1}},vertexShader:`
      uniform float time;
      attribute float size;
      varying vec3 vColor;
      void main() {
        vColor = color;
        vec4 mvPosition = modelViewMatrix * vec4(position, 0.5);
        gl_PointSize = size * (30.0 / -mvPosition.z) * (3.0 + sin(time + 100.0));
        gl_Position = projectionMatrix * mvPosition;
      }`,fragmentShader:`
      uniform sampler2D pointTexture;
      uniform float fade;
      varying vec3 vColor;
      void main() {
        float opacity = 1.0;
        if (fade == 1.0) {
          float d = distance(gl_PointCoord, vec2(0.5, 0.5));
          opacity = 1.0 / (1.0 + exp(16.0 * (d - 0.25)));
        }
        gl_FragColor = vec4(vColor, opacity);

        #include <tonemapping_fragment>
	      #include <${QU>=154?"colorspace_fragment":"encodings_fragment"}>
      }`})}}const nP=s=>new L().setFromSpherical(new sf(s,Math.acos(1-Math.random()*2),Math.random()*2*Math.PI)),iP=dt.forwardRef(({radius:s=100,depth:t=50,count:e=5e3,saturation:n=0,factor:i=4,fade:r=!1,speed:l=1},c)=>{const h=dt.useRef(null),[f,p,m]=dt.useMemo(()=>{const v=[],x=[],M=Array.from({length:e},()=>(.5+.5*Math.random())*i),S=new kt;let _=s+t;const E=t/e;for(let T=0;T<e;T++)_-=E*Math.random(),v.push(...nP(_).toArray()),S.setHSL(T/e,n,.9),x.push(S.r,S.g,S.b);return[new Float32Array(v),new Float32Array(x),new Float32Array(M)]},[e,t,i,s,n]);Ac(v=>h.current&&(h.current.uniforms.time.value=v.clock.elapsedTime*l));const[g]=dt.useState(()=>new eP);return dt.createElement("points",{ref:c},dt.createElement("bufferGeometry",null,dt.createElement("bufferAttribute",{attach:"attributes-position",args:[f,3]}),dt.createElement("bufferAttribute",{attach:"attributes-color",args:[p,3]}),dt.createElement("bufferAttribute",{attach:"attributes-size",args:[m,1]})),dt.createElement("primitive",{ref:h,object:g,attach:"material",blending:ph,"uniforms-fade-value":r,depthWrite:!1,transparent:!0,vertexColors:!0}))}),No=3.08,HM=(s,t,e)=>{const n=(90-s)*(Math.PI/180),i=(t+180)*(Math.PI/180),r=-(e*Math.sin(n)*Math.cos(i)),l=e*Math.sin(n)*Math.sin(i),c=e*Math.cos(n);return new L(r,c,l)},fx=[{name:"Seoul",lat:37.5665,lon:126.978},{name:"Berlin",lat:52.52,lon:13.405},{name:"Wuhu",lat:31.33,lon:118.38},{name:"Hong Kong",lat:22.3193,lon:114.1694}];function sP({position:s,name:t}){const[e,n]=dt.useState(!1),i=dt.useRef();return Ac((r,l)=>{if(e&&i.current){const c=1+Math.sin(performance.now()*.005)*.2;i.current.scale.set(c,c,c)}else i.current.scale.x>1&&i.current.scale.lerp(new L(1,1,1),l*5)}),Pt.jsxs("mesh",{position:s,ref:i,onPointerOver:()=>n(!0),onPointerOut:()=>n(!1),children:[Pt.jsx("sphereGeometry",{args:[.055,16,16]}),Pt.jsx("meshBasicMaterial",{color:"gold",toneMapped:!1}),Pt.jsx(IM,{as:"div",distanceFactor:10,style:{transition:"opacity 0.2s",opacity:e?1:0,pointerEvents:"none",padding:"5px 10px",background:"rgba(0, 0, 0, 0.7)",color:"white",borderRadius:"5px",fontSize:"14px",whiteSpace:"nowrap",transform:"translate(-50%, -150%)"},children:t})]})}function aP({points:s}){const t=dt.useMemo(()=>s.map(e=>({...e,position:HM(e.lat,e.lon,No+.02)})),[s]);return Pt.jsx("group",{children:t.map(e=>Pt.jsx(sP,{position:e.position,name:e.name},e.name))})}function rP({points:s}){const t=dt.useMemo(()=>{const e=[],n=No+.05,i=s.map(r=>HM(r.lat,r.lon,n));for(let r=0;r<i.length;r++){const l=i[r],c=i[(r+1)%i.length],f=1.05+l.distanceTo(c)/(No*2)*.25,p=l.clone().lerp(c,.5).normalize().multiplyScalar(No*f);e.push([l,p,c])}return e},[s]);return Pt.jsx("group",{children:t.map((e,n)=>Pt.jsx(KU,{points:e,color:"cyan",lineWidth:2,transparent:!0,opacity:.7},n))})}const oP=s=>{const{ambientIntensity:t,directionalIntensity:e,metalness:n,roughness:i,emissiveIntensity:r,cloudsOpacity:l=.4}=s,[c,h,f]=Wf(["/earth-day.jpg","/earth-night.jpg","/earth-clouds.jpg"]),p=dt.useRef(),m=dt.useRef();return Ac(({clock:g})=>{p.current&&(p.current.rotation.y=g.getElapsedTime()*.05),m.current&&(m.current.rotation.y=g.getElapsedTime()*.06)}),Pt.jsxs(Pt.Fragment,{children:[Pt.jsx("ambientLight",{intensity:t}),Pt.jsx("directionalLight",{position:[10,10,5],intensity:e}),Pt.jsx(iP,{radius:300,depth:50,count:8e3,factor:5,saturation:0,fade:!1,speed:1}),Pt.jsxs("group",{ref:p,children:[Pt.jsx(hx,{args:[No,32,32],children:Pt.jsx("meshStandardMaterial",{map:c,metalness:n,roughness:i,emissiveMap:h,emissive:"#ffffff",emissiveIntensity:r})}),Pt.jsx(hx,{ref:m,args:[No+.05,32,32],castShadow:!1,receiveShadow:!1,children:Pt.jsx("meshStandardMaterial",{map:f,transparent:!0,opacity:l,blending:Ta})}),Pt.jsx(aP,{points:fx}),Pt.jsx(rP,{points:fx})]})]})};Be.div`
  position: absolute;
  top: 100px;
  right: 20px;
  background: rgba(0, 0, 0, 0.8);
  padding: 1.5rem;
  border-radius: 12px;
  width: 300px;
  max-height: calc(100vh - 120px);
  overflow-y: auto;
  z-index: 1001;
  color: white;
  font-family: sans-serif;
`;Be.div`
  margin-bottom: 1.5rem;
  border-bottom: 1px solid #444;
  padding-bottom: 1.5rem;

  &:last-child {
    border-bottom: none;
    margin-bottom: 0;
    padding-bottom: 0;
  }
`;Be.h4`
  margin: 0 0 1rem 0;
  color: var(--accent-amber);
  font-size: 1rem;
`;Be.div`
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 0.5rem;
`;Be.label`
  font-size: 0.9rem;
`;Be.span`
  font-weight: bold;
  min-width: 40px;
  text-align: right;
`;Be.input`
  width: 100%;
  margin-top: 0.5rem;
`;Be.input`
  width: 100%;
  height: 30px;
  padding: 0;
  border: none;
  background: none;
`;const lP=Be.div`
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
`,cP=Be.div`
  width: 200px;
  height: 8px;
  background: var(--border-color);
  border-radius: 4px;
  overflow: hidden;
  margin-top: 1rem;
`,uP=Be.div`
  width: ${s=>s.progress}%;
  height: 100%;
  background: var(--accent-amber);
  transition: width 0.3s ease;
`,hP=Be.p`
  color: var(--text-color);
  font-size: 1rem;
  font-weight: 500;
`;function fP(){const{progress:s}=OU();return Pt.jsx(IM,{center:!0,children:Pt.jsxs(lP,{children:[Pt.jsxs(hP,{children:[Math.round(s),"% Loaded"]}),Pt.jsx(cP,{children:Pt.jsx(uP,{progress:s})})]})})}Wf.preload(["/earth-day.jpg","/earth-night.jpg","/earth-clouds.jpg"]);const dP=Be.div`
  width: 100%;
`,pP=Be(Km)`
  min-height: calc(100vh - 80px);
  display: grid;
  grid-template-columns: 1fr 1fr;
  align-items: center;
  padding: 2rem 5%;
  background: var(--background-color);
  gap: 2rem;

  @media (max-width: 900px) {
    grid-template-columns: 1fr;
    text-align: center;
    min-height: auto;
    padding: 3rem 5%;
  }
`,mP=Be(Qs.div)`
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  
  @media (max-width: 900px) {
    align-items: center;
    order: 2;
  }
`,gP=Be(Qs.div)`
  height: 100%;
  width: 100%;
  position: relative;
  cursor: grab;

  &:active {
    cursor: grabbing;
  }

  @media (max-width: 900px) {
    order: 1;
    width: 90%;
    max-width: 450px;
    margin: 0 auto 2rem;
    aspect-ratio: 1 / 1;
  }
`,vP=Be(Qs.h1)`
  font-size: clamp(2.2rem, 5vw, 3.5rem);
  font-weight: 700;
  line-height: 1.2;
  margin-bottom: 1.5rem;
  max-width: 600px;

  span {
    color: var(--accent-amber);
  }
`,_P=Be(Qs.p)`
  font-size: clamp(1rem, 2.5vw, 1.2rem);
  color: var(--text-secondary);
  max-width: 500px;
  margin-bottom: 2.5rem;
  line-height: 1.6;
`,Tm=Be(Qs.button)`
  padding: clamp(0.8rem, 2vw, 1rem) clamp(1.5rem, 4vw, 2rem);
  border-radius: 50px;
  background-color: var(--accent-amber);
  color: #121212;
  font-size: clamp(1rem, 2.5vw, 1.1rem);
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  border: 2px solid var(--accent-amber);

  &:hover {
    background-color: transparent;
    color: var(--accent-amber);
  }
`,yP=Be(Km)`
  background-color: var(--card-bg);
`,xP=Be(Km)`
  text-align: center;
`,SP=Be.div`
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 3rem;
`,MP=Be(Qs.div)`
  background: var(--background-color);
  padding: 2.5rem;
  border-radius: 12px;
  border: 1px solid var(--border-color);
  display: flex;
  flex-direction: column;
  text-align: center;
  align-items: center;
`,bP=Be.div`
  font-size: 3rem;
  color: var(--accent-amber);
  margin-bottom: 1.5rem;
`,EP=Be.h3`
  font-size: 1.5rem;
  margin-bottom: 1rem;
`,TP=Be.p`
  font-size: 1rem;
  line-height: 1.6;
  color: var(--text-secondary);
  flex-grow: 1;
`,AP=Be(Qs.div)`
  margin-top: 3rem;
`,wP=Be.div`
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 2.5rem;
`,CP=Be.div`
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  gap: 1rem;
  border: 1px solid var(--border-color);
  border-radius: 50px;
  padding: 0.5rem;
  background-color: var(--background-color);
`,RP=Be.button`
  background-color: ${s=>s.$isActive?"var(--accent-amber)":"transparent"};
  color: ${s=>s.$isActive?"#121212":"var(--text-color)"};
  border: none;
  padding: 0.75rem 1.5rem;
  border-radius: 30px;
  font-size: 1.1rem;
  font-weight: 600;
  cursor: pointer;
  display: flex;
  align-items: center;
  gap: 0.75rem;
  transition: all 0.3s ease;

  &:hover:not(.active) {
    background-color: ${s=>!s.$isActive&&"var(--card-bg)"};
  }
`,DP=Be(Qs.div)`
  background: var(--background-color);
  padding: 2.5rem;
  border-radius: 12px;
  border: 1px solid var(--border-color);
  width: 100%;
  max-width: 800px;
  min-height: 160px;
  text-align: center;
  display: flex;
  justify-content: center;
  align-items: center;
`,UP=Be(Qs.p)`
  font-size: 1.2rem;
  line-height: 1.7;
  color: var(--text-secondary);
  max-width: 600px;
`,PP=(s,t,e)=>{const n=(90-s)*(Math.PI/180),i=(t+180)*(Math.PI/180),r=-(e*Math.sin(n)*Math.cos(i)),l=e*Math.sin(n)*Math.sin(i),c=e*Math.cos(n);return new L(r,c,l)},kP=()=>{const{t:s}=GE(),[t,e]=dt.useState(0),n=dt.useRef(null),[i,r]=dt.useState(Date.now());dt.useEffect(()=>{const x=()=>{r(Date.now())};return window.addEventListener("resize",x),()=>window.removeEventListener("resize",x)},[]);const l=PP(37.5665,126.978,8),[c,h]=dt.useState({ambientIntensity:1,directionalIntensity:12,metalness:.2,roughness:.5,emissiveIntensity:2.5,cloudsOpacity:.25,atmosphereGlowColor:"#5080ff"}),f={hidden:{opacity:0},visible:{opacity:1,transition:{staggerChildren:.2,delayChildren:.3}}},p={hidden:{opacity:0,y:20},visible:{opacity:1,y:0,transition:{type:"spring",stiffness:100}}},m=[{icon:Pt.jsx(qE,{size:24}),titleKey:"home_service_warehouse_title",descKey:"home_service_warehouse_desc"},{icon:Pt.jsx(YE,{size:24}),titleKey:"home_service_inspection_title",descKey:"home_service_inspection_desc"},{icon:Pt.jsx(jE,{size:24}),titleKey:"home_service_packaging_title",descKey:"home_service_packaging_desc"}],g=[{icon:Pt.jsx(kE,{}),title:s("strong_point_2_title"),desc:s("strong_point_2_desc")},{icon:Pt.jsx(WE,{}),title:s("strong_point_5_title"),desc:s("strong_point_5_desc")},{icon:Pt.jsx(XE,{}),title:s("strong_point_6_title"),desc:s("strong_point_6_desc")}],v={initial:{opacity:0,y:10},animate:{opacity:1,y:0},exit:{opacity:0,y:-10},transition:{duration:.2}};return Pt.jsxs(dP,{children:[Pt.jsxs(pP,{children:[Pt.jsxs(mP,{variants:f,initial:"hidden",animate:"visible",children:[Pt.jsx(vP,{variants:p,children:Pt.jsx("span",{dangerouslySetInnerHTML:{__html:s("hero_title")}})}),Pt.jsx(_P,{variants:p,children:s("hero_subtitle")}),Pt.jsx(dp,{to:"/about",children:Pt.jsxs(Tm,{variants:p,whileHover:{scale:1.05},whileTap:{scale:.95},children:[s("hero_button")," ",Pt.jsx(t_,{})]})})]}),Pt.jsx(gP,{ref:n,initial:{opacity:0,scale:.8},animate:{opacity:1,scale:1},transition:{duration:1.2,ease:[.16,1,.3,1]},children:Pt.jsxs(bU,{camera:{position:l,fov:50},children:[Pt.jsx(dt.Suspense,{fallback:Pt.jsx(fP,{}),children:Pt.jsx(oP,{...c})}),Pt.jsx($U,{enableZoom:!1,enablePan:!1,autoRotate:!0,autoRotateSpeed:.4,enableDamping:!0,dampingFactor:.05,mouseButtons:{LEFT:Bi.ROTATE,MIDDLE:Bi.DOLLY,RIGHT:Bi.PAN}})]},i)})]}),Pt.jsxs(yP,{children:[Pt.jsx(e_,{children:s("home_services_title")}),Pt.jsxs(wP,{children:[Pt.jsx(CP,{children:m.map((x,M)=>Pt.jsxs(RP,{$isActive:t===M,onMouseEnter:()=>e(M),children:[x.icon,Pt.jsx("span",{children:s(x.titleKey).split(" ")[0]})]},x.titleKey))}),Pt.jsx(DP,{children:Pt.jsx(ZE,{mode:"wait",children:Pt.jsx(UP,{...v,children:s(m[t].descKey)},t)})}),Pt.jsx(dp,{to:"/business",children:Pt.jsx(Tm,{whileHover:{scale:1.05},whileTap:{scale:.95},children:s("home_services_button")})})]})]}),Pt.jsxs(xP,{children:[Pt.jsx(e_,{children:s("home_strengths_title")}),Pt.jsx(SP,{children:g.map((x,M)=>Pt.jsxs(MP,{whileHover:{y:-10},children:[Pt.jsx(bP,{children:x.icon}),Pt.jsx(EP,{children:x.title}),Pt.jsx(TP,{children:x.desc})]},M))}),Pt.jsx(AP,{children:Pt.jsx(dp,{to:"/about",children:Pt.jsxs(Tm,{whileHover:{scale:1.05},whileTap:{scale:.95},children:[s("hero_button")," ",Pt.jsx(t_,{})]})})})]})]})};export{kP as default};
